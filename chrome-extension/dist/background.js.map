{"version":3,"file":"background.js","mappings":"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","sources":["webpack://gado-wallet-extension/./node_modules/jayson/lib/client/browser/index.js","webpack://gado-wallet-extension/./node_modules/@noble/hashes/esm/sha256.js","webpack://gado-wallet-extension/./node_modules/eventemitter3/index.js","webpack://gado-wallet-extension/./node_modules/@noble/curves/esm/utils.js","webpack://gado-wallet-extension/./node_modules/@noble/curves/esm/abstract/modular.js","webpack://gado-wallet-extension/./node_modules/@noble/curves/esm/abstract/curve.js","webpack://gado-wallet-extension/./node_modules/@noble/curves/esm/abstract/edwards.js","webpack://gado-wallet-extension/./node_modules/@noble/curves/esm/abstract/hash-to-curve.js","webpack://gado-wallet-extension/./node_modules/@noble/curves/esm/ed25519.js","webpack://gado-wallet-extension/./node_modules/@solana/web3.js/node_modules/@solana/errors/dist/index.browser.mjs","webpack://gado-wallet-extension/./node_modules/@solana/web3.js/node_modules/@solana/codecs-core/dist/index.browser.mjs","webpack://gado-wallet-extension/./node_modules/@solana/web3.js/node_modules/@solana/codecs-numbers/dist/index.browser.mjs","webpack://gado-wallet-extension/./node_modules/@solana/web3.js/node_modules/superstruct/dist/index.mjs","webpack://gado-wallet-extension/./node_modules/rpc-websockets/dist/index.browser.mjs","webpack://gado-wallet-extension/./node_modules/@noble/hashes/esm/sha3.js","webpack://gado-wallet-extension/./node_modules/@noble/hashes/esm/hmac.js","webpack://gado-wallet-extension/./node_modules/@noble/curves/esm/abstract/weierstrass.js","webpack://gado-wallet-extension/./node_modules/@noble/curves/esm/secp256k1.js","webpack://gado-wallet-extension/./node_modules/@noble/curves/esm/_shortw_utils.js","webpack://gado-wallet-extension/./node_modules/@solana/web3.js/lib/index.browser.esm.js","webpack://gado-wallet-extension/./node_modules/ieee754/index.js","webpack://gado-wallet-extension/./node_modules/@noble/hashes/esm/_u64.js","webpack://gado-wallet-extension/./node_modules/text-encoding-utf-8/lib/encoding.lib.js","webpack://gado-wallet-extension/./node_modules/buffer/index.js","webpack://gado-wallet-extension/./node_modules/jayson/lib/generateRequest.js","webpack://gado-wallet-extension/./node_modules/uuid/dist/esm-browser/rng.js","webpack://gado-wallet-extension/./node_modules/uuid/dist/esm-browser/regex.js","webpack://gado-wallet-extension/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://gado-wallet-extension/./node_modules/uuid/dist/esm-browser/validate.js","webpack://gado-wallet-extension/./node_modules/uuid/dist/esm-browser/v4.js","webpack://gado-wallet-extension/./node_modules/base-x/src/index.js","webpack://gado-wallet-extension/./node_modules/bn.js/lib/bn.js","webpack://gado-wallet-extension/./node_modules/@noble/hashes/esm/_md.js","webpack://gado-wallet-extension/./node_modules/@noble/hashes/esm/sha2.js","webpack://gado-wallet-extension/./node_modules/base64-js/index.js","webpack://gado-wallet-extension/./node_modules/@noble/hashes/esm/crypto.js","webpack://gado-wallet-extension/./node_modules/@noble/hashes/esm/utils.js","webpack://gado-wallet-extension/./node_modules/@solana/buffer-layout/lib/Layout.js","webpack://gado-wallet-extension/./node_modules/@coral-xyz/borsh/dist/index.js","webpack://gado-wallet-extension/./node_modules/rpc-websockets/node_modules/eventemitter3/index.js","webpack://gado-wallet-extension/./node_modules/camelcase/index.js","webpack://gado-wallet-extension/./node_modules/borsh/lib/index.js","webpack://gado-wallet-extension/./node_modules/bs58/index.js","webpack://gado-wallet-extension/./node_modules/buffer-layout/lib/Layout.js","webpack://gado-wallet-extension/./node_modules/safe-buffer/index.js","webpack://gado-wallet-extension/webpack/bootstrap","webpack://gado-wallet-extension/webpack/runtime/compat get default export","webpack://gado-wallet-extension/webpack/runtime/define property getters","webpack://gado-wallet-extension/webpack/runtime/global","webpack://gado-wallet-extension/webpack/runtime/hasOwnProperty shorthand","webpack://gado-wallet-extension/webpack/runtime/make namespace object","webpack://gado-wallet-extension/webpack/runtime/node module decorator","webpack://gado-wallet-extension/./node_modules/pako/dist/pako.esm.mjs","webpack://gado-wallet-extension/./node_modules/@coral-xyz/anchor/dist/browser/index.js","webpack://gado-wallet-extension/./src/background.js"],"sourcesContent":["'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n * @deprecated\n */\nimport { SHA224 as SHA224n, sha224 as sha224n, SHA256 as SHA256n, sha256 as sha256n, } from \"./sha2.js\";\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA256 = SHA256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha256 = sha256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA224 = SHA224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha224 = sha224n;\n//# sourceMappingURL=sha256.js.map","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { abytes as abytes_, bytesToHex as bytesToHex_, concatBytes as concatBytes_, hexToBytes as hexToBytes_, isBytes as isBytes_, } from '@noble/hashes/utils.js';\nexport { abytes, anumber, bytesToHex, bytesToUtf8, concatBytes, hexToBytes, isBytes, randomBytes, utf8ToBytes, } from '@noble/hashes/utils.js';\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nexport function abool(title, value) {\n    if (typeof value !== 'boolean')\n        throw new Error(title + ' boolean expected, got ' + value);\n}\n// tmp name until v2\nexport function _abool2(value, title = '') {\n    if (typeof value !== 'boolean') {\n        const prefix = title && `\"${title}\"`;\n        throw new Error(prefix + 'expected boolean, got type=' + typeof value);\n    }\n    return value;\n}\n// tmp name until v2\n/** Asserts something is Uint8Array. */\nexport function _abytes2(value, length, title = '') {\n    const bytes = isBytes_(value);\n    const len = value?.length;\n    const needsLen = length !== undefined;\n    if (!bytes || (needsLen && len !== length)) {\n        const prefix = title && `\"${title}\" `;\n        const ofLen = needsLen ? ` of length ${length}` : '';\n        const got = bytes ? `length=${len}` : `type=${typeof value}`;\n        throw new Error(prefix + 'expected Uint8Array' + ofLen + ', got ' + got);\n    }\n    return value;\n}\n// Used in weierstrass, der\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? '0' + hex : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex_(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes_(bytes);\n    return hexToNumber(bytesToHex_(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes_(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes_(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'secret key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes_(hex);\n        }\n        catch (e) {\n            throw new Error(title + ' must be hex string or Uint8Array, cause: ' + e);\n        }\n    }\n    else if (isBytes_(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(title + ' must be hex string or Uint8Array');\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(title + ' of length ' + expectedLength + ' expected, got ' + len);\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * Copies Uint8Array. We can't use u8a.slice(), because u8a can be Buffer,\n * and Buffer#slice creates mutable copy. Never use Buffers!\n */\nexport function copyBytes(bytes) {\n    return Uint8Array.from(bytes);\n}\n/**\n * Decodes 7-bit ASCII string to Uint8Array, throws on non-ascii symbols\n * Should be safe to use for things expected to be ASCII.\n * Returns exact same result as utf8ToBytes for ASCII or throws.\n */\nexport function asciiToBytes(ascii) {\n    return Uint8Array.from(ascii, (c, i) => {\n        const charCode = c.charCodeAt(0);\n        if (c.length !== 1 || charCode > 127) {\n            throw new Error(`string contains non-ASCII character \"${ascii[i]}\" with code ${charCode} at position ${i}`);\n        }\n        return charCode;\n    });\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\n// export const utf8ToBytes: typeof utf8ToBytes_ = utf8ToBytes_;\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\n// export const bytesToUtf8: typeof bytesToUtf8_ = bytesToUtf8_;\n// Is positive bigint\nconst isPosBig = (n) => typeof n === 'bigint' && _0n <= n;\nexport function inRange(n, min, max) {\n    return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title, n, min, max) {\n    // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n    // consider P=256n, min=0n, max=P\n    // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n    // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n    // - our way is the cleanest:               `inRange('x', x, 0n, P)\n    if (!inRange(n, min, max))\n        throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n * TODO: merge with nLength in modular\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_1n << BigInt(n)) - _1n;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    const u8n = (len) => new Uint8Array(len); // creates Uint8Array\n    const u8of = (byte) => Uint8Array.of(byte); // another shortcut\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n(0)) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8of(0x00), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8of(0x01), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes_(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes_(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error('invalid validator function');\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error('param ' + String(fieldName) + ' is invalid. Expected ' + type + ', got ' + val);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\nexport function isHash(val) {\n    return typeof val === 'function' && Number.isSafeInteger(val.outputLen);\n}\nexport function _validateObject(object, fields, optFields = {}) {\n    if (!object || typeof object !== 'object')\n        throw new Error('expected valid options object');\n    function checkField(fieldName, expectedType, isOpt) {\n        const val = object[fieldName];\n        if (isOpt && val === undefined)\n            return;\n        const current = typeof val;\n        if (current !== expectedType || val === null)\n            throw new Error(`param \"${fieldName}\" is invalid: expected ${expectedType}, got ${current}`);\n    }\n    Object.entries(fields).forEach(([k, v]) => checkField(k, v, false));\n    Object.entries(optFields).forEach(([k, v]) => checkField(k, v, true));\n}\n/**\n * throws not implemented error\n */\nexport const notImplemented = () => {\n    throw new Error('not implemented');\n};\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized(fn) {\n    const map = new WeakMap();\n    return (arg, ...args) => {\n        const val = map.get(arg);\n        if (val !== undefined)\n            return val;\n        const computed = fn(arg, ...args);\n        map.set(arg, computed);\n        return computed;\n    };\n}\n//# sourceMappingURL=utils.js.map","/**\n * Utils for modular division and fields.\n * Field over 11 is a finite (Galois) field is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { _validateObject, anumber, bitMask, bytesToNumberBE, bytesToNumberLE, ensureBytes, numberToBytesBE, numberToBytesLE, } from \"../utils.js\";\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = /* @__PURE__ */ BigInt(2), _3n = /* @__PURE__ */ BigInt(3);\n// prettier-ignore\nconst _4n = /* @__PURE__ */ BigInt(4), _5n = /* @__PURE__ */ BigInt(5), _7n = /* @__PURE__ */ BigInt(7);\n// prettier-ignore\nconst _8n = /* @__PURE__ */ BigInt(8), _9n = /* @__PURE__ */ BigInt(9), _16n = /* @__PURE__ */ BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\nexport function pow(num, power, modulo) {\n    return FpPow(Field(modulo), num, power);\n}\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n/**\n * Inverses number over modulo.\n * Implemented using [Euclidean GCD](https://brilliant.org/wiki/extended-euclidean-algorithm/).\n */\nexport function invert(number, modulo) {\n    if (number === _0n)\n        throw new Error('invert: expected non-zero number');\n    if (modulo <= _0n)\n        throw new Error('invert: expected positive modulus, got ' + modulo);\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction assertIsSquare(Fp, root, n) {\n    if (!Fp.eql(Fp.sqr(root), n))\n        throw new Error('Cannot find square root');\n}\n// Not all roots are possible! Example which will throw:\n// const NUM =\n// n = 72057594037927816n;\n// Fp = Field(BigInt('0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab'));\nfunction sqrt3mod4(Fp, n) {\n    const p1div4 = (Fp.ORDER + _1n) / _4n;\n    const root = Fp.pow(n, p1div4);\n    assertIsSquare(Fp, root, n);\n    return root;\n}\nfunction sqrt5mod8(Fp, n) {\n    const p5div8 = (Fp.ORDER - _5n) / _8n;\n    const n2 = Fp.mul(n, _2n);\n    const v = Fp.pow(n2, p5div8);\n    const nv = Fp.mul(n, v);\n    const i = Fp.mul(Fp.mul(nv, _2n), v);\n    const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n    assertIsSquare(Fp, root, n);\n    return root;\n}\n// Based on RFC9380, Kong algorithm\n// prettier-ignore\nfunction sqrt9mod16(P) {\n    const Fp_ = Field(P);\n    const tn = tonelliShanks(P);\n    const c1 = tn(Fp_, Fp_.neg(Fp_.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    const c2 = tn(Fp_, c1); //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    const c3 = tn(Fp_, Fp_.neg(c1)); //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    const c4 = (P + _7n) / _16n; //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    return (Fp, n) => {\n        let tv1 = Fp.pow(n, c4); //  1. tv1 = x^c4\n        let tv2 = Fp.mul(tv1, c1); //  2. tv2 = c1 * tv1\n        const tv3 = Fp.mul(tv1, c2); //  3. tv3 = c2 * tv1\n        const tv4 = Fp.mul(tv1, c3); //  4. tv4 = c3 * tv1\n        const e1 = Fp.eql(Fp.sqr(tv2), n); //  5.  e1 = (tv2^2) == x\n        const e2 = Fp.eql(Fp.sqr(tv3), n); //  6.  e2 = (tv3^2) == x\n        tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        const e3 = Fp.eql(Fp.sqr(tv2), n); //  9.  e3 = (tv2^2) == x\n        const root = Fp.cmov(tv1, tv2, e3); // 10.  z = CMOV(tv1, tv2, e3)   # Select sqrt from tv1 & tv2\n        assertIsSquare(Fp, root, n);\n        return root;\n    };\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Initialization (precomputation).\n    // Caching initialization could boost perf by 7%.\n    if (P < _3n)\n        throw new Error('sqrt is not defined for small field');\n    // Factor P - 1 = Q * 2^S, where Q is odd\n    let Q = P - _1n;\n    let S = 0;\n    while (Q % _2n === _0n) {\n        Q /= _2n;\n        S++;\n    }\n    // Find the first quadratic non-residue Z >= 2\n    let Z = _2n;\n    const _Fp = Field(P);\n    while (FpLegendre(_Fp, Z) === 1) {\n        // Basic primality test for P. After x iterations, chance of\n        // not finding quadratic non-residue is 2^x, so 2^1000.\n        if (Z++ > 1000)\n            throw new Error('Cannot find square root: probably non-prime P');\n    }\n    // Fast-path; usually done before Z, but we do \"primality test\".\n    if (S === 1)\n        return sqrt3mod4;\n    // Slow-path\n    // TODO: test on Fp2 and others\n    let cc = _Fp.pow(Z, Q); // c = z^Q\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        if (Fp.is0(n))\n            return n;\n        // Check if n is a quadratic residue using Legendre symbol\n        if (FpLegendre(Fp, n) !== 1)\n            throw new Error('Cannot find square root');\n        // Initialize variables for the main loop\n        let M = S;\n        let c = Fp.mul(Fp.ONE, cc); // c = z^Q, move cc from field _Fp into field Fp\n        let t = Fp.pow(n, Q); // t = n^Q, first guess at the fudge factor\n        let R = Fp.pow(n, Q1div2); // R = n^((Q+1)/2), first guess at the square root\n        // Main loop\n        // while t != 1\n        while (!Fp.eql(t, Fp.ONE)) {\n            if (Fp.is0(t))\n                return Fp.ZERO; // if t=0 return R=0\n            let i = 1;\n            // Find the smallest i >= 1 such that t^(2^i) ≡ 1 (mod P)\n            let t_tmp = Fp.sqr(t); // t^(2^1)\n            while (!Fp.eql(t_tmp, Fp.ONE)) {\n                i++;\n                t_tmp = Fp.sqr(t_tmp); // t^(2^2)...\n                if (i === M)\n                    throw new Error('Cannot find square root');\n            }\n            // Calculate the exponent for b: 2^(M - i - 1)\n            const exponent = _1n << BigInt(M - i - 1); // bigint is important\n            const b = Fp.pow(c, exponent); // b = 2^(M - i - 1)\n            // Update variables\n            M = i;\n            c = Fp.sqr(b); // c = b^2\n            t = Fp.mul(t, c); // t = (t * b^2)\n            R = Fp.mul(R, b); // R = R*b\n        }\n        return R;\n    };\n}\n/**\n * Square root for a finite field. Will try optimized versions first:\n *\n * 1. P ≡ 3 (mod 4)\n * 2. P ≡ 5 (mod 8)\n * 3. P ≡ 9 (mod 16)\n * 4. Tonelli-Shanks algorithm\n *\n * Different algorithms can give different roots, it is up to user to decide which one they want.\n * For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n */\nexport function FpSqrt(P) {\n    // P ≡ 3 (mod 4) => √n = n^((P+1)/4)\n    if (P % _4n === _3n)\n        return sqrt3mod4;\n    // P ≡ 5 (mod 8) => Atkin algorithm, page 10 of https://eprint.iacr.org/2012/685.pdf\n    if (P % _8n === _5n)\n        return sqrt5mod8;\n    // P ≡ 9 (mod 16) => Kong algorithm, page 11 of https://eprint.iacr.org/2012/685.pdf (algorithm 4)\n    if (P % _16n === _9n)\n        return sqrt9mod16(P);\n    // Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'number',\n        BITS: 'number',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    _validateObject(field, opts);\n    // const max = 16384;\n    // if (field.BYTES < 1 || field.BYTES > max) throw new Error('invalid field');\n    // if (field.BITS < 1 || field.BITS > 8 * max) throw new Error('invalid field');\n    return field;\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(Fp, num, power) {\n    if (power < _0n)\n        throw new Error('invalid exponent, negatives unsupported');\n    if (power === _0n)\n        return Fp.ONE;\n    if (power === _1n)\n        return num;\n    let p = Fp.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = Fp.mul(p, d);\n        d = Fp.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * Exception-free. Will return `undefined` for 0 elements.\n * @param passZero map 0 to 0 (instead of undefined)\n */\nexport function FpInvertBatch(Fp, nums, passZero = false) {\n    const inverted = new Array(nums.length).fill(passZero ? Fp.ZERO : undefined);\n    // Walk from first to last, multiply them by each other MOD p\n    const multipliedAcc = nums.reduce((acc, num, i) => {\n        if (Fp.is0(num))\n            return acc;\n        inverted[i] = acc;\n        return Fp.mul(acc, num);\n    }, Fp.ONE);\n    // Invert last element\n    const invertedAcc = Fp.inv(multipliedAcc);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (Fp.is0(num))\n            return acc;\n        inverted[i] = Fp.mul(acc, inverted[i]);\n        return Fp.mul(acc, num);\n    }, invertedAcc);\n    return inverted;\n}\n// TODO: remove\nexport function FpDiv(Fp, lhs, rhs) {\n    return Fp.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, Fp.ORDER) : Fp.inv(rhs));\n}\n/**\n * Legendre symbol.\n * Legendre constant is used to calculate Legendre symbol (a | p)\n * which denotes the value of a^((p-1)/2) (mod p).\n *\n * * (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n * * (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n * * (a | p) ≡ 0    if a ≡ 0 (mod p)\n */\nexport function FpLegendre(Fp, n) {\n    // We can use 3rd argument as optional cache of this value\n    // but seems unneeded for now. The operation is very fast.\n    const p1mod2 = (Fp.ORDER - _1n) / _2n;\n    const powered = Fp.pow(n, p1mod2);\n    const yes = Fp.eql(powered, Fp.ONE);\n    const zero = Fp.eql(powered, Fp.ZERO);\n    const no = Fp.eql(powered, Fp.neg(Fp.ONE));\n    if (!yes && !zero && !no)\n        throw new Error('invalid Legendre symbol result');\n    return yes ? 1 : zero ? 0 : -1;\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(Fp, n) {\n    const l = FpLegendre(Fp, n);\n    return l === 1;\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    if (nBitLength !== undefined)\n        anumber(nBitLength);\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Creates a finite field. Major performance optimizations:\n * * 1. Denormalized operations like mulN instead of mul.\n * * 2. Identical object shape: never add or remove keys.\n * * 3. `Object.freeze`.\n * Fragile: always run a benchmark on a change.\n * Security note: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you're doing.\n *\n * Note about field properties:\n * * CHARACTERISTIC p = prime number, number of elements in main subgroup.\n * * ORDER q = similar to cofactor in curves, may be composite `q = p^m`.\n *\n * @param ORDER field order, probably prime, or could be composite\n * @param bitLen how many bits the field consumes\n * @param isLE (default: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLenOrOpts, // TODO: use opts only in v2?\nisLE = false, opts = {}) {\n    if (ORDER <= _0n)\n        throw new Error('invalid field: expected ORDER > 0, got ' + ORDER);\n    let _nbitLength = undefined;\n    let _sqrt = undefined;\n    let modFromBytes = false;\n    let allowedLengths = undefined;\n    if (typeof bitLenOrOpts === 'object' && bitLenOrOpts != null) {\n        if (opts.sqrt || isLE)\n            throw new Error('cannot specify opts in two arguments');\n        const _opts = bitLenOrOpts;\n        if (_opts.BITS)\n            _nbitLength = _opts.BITS;\n        if (_opts.sqrt)\n            _sqrt = _opts.sqrt;\n        if (typeof _opts.isLE === 'boolean')\n            isLE = _opts.isLE;\n        if (typeof _opts.modFromBytes === 'boolean')\n            modFromBytes = _opts.modFromBytes;\n        allowedLengths = _opts.allowedLengths;\n    }\n    else {\n        if (typeof bitLenOrOpts === 'number')\n            _nbitLength = bitLenOrOpts;\n        if (opts.sqrt)\n            _sqrt = opts.sqrt;\n    }\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, _nbitLength);\n    if (BYTES > 2048)\n        throw new Error('invalid field: expected ORDER of <= 2048 bytes');\n    let sqrtP; // cached sqrtP\n    const f = Object.freeze({\n        ORDER,\n        isLE,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        allowedLengths: allowedLengths,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error('invalid field element: expected bigint, got ' + typeof num);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        // is valid and invertible\n        isValidNot0: (num) => !f.is0(num) && f.isValid(num),\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: _sqrt ||\n            ((n) => {\n                if (!sqrtP)\n                    sqrtP = FpSqrt(ORDER);\n                return sqrtP(f, n);\n            }),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes, skipValidation = true) => {\n            if (allowedLengths) {\n                if (!allowedLengths.includes(bytes.length) || bytes.length > BYTES) {\n                    throw new Error('Field.fromBytes: expected ' + allowedLengths + ' bytes, got ' + bytes.length);\n                }\n                const padded = new Uint8Array(BYTES);\n                // isLE add 0 to right, !isLE to the left.\n                padded.set(bytes, isLE ? 0 : padded.length - bytes.length);\n                bytes = padded;\n            }\n            if (bytes.length !== BYTES)\n                throw new Error('Field.fromBytes: expected ' + BYTES + ' bytes, got ' + bytes.length);\n            let scalar = isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n            if (modFromBytes)\n                scalar = mod(scalar, ORDER);\n            if (!skipValidation)\n                if (!f.isValid(scalar))\n                    throw new Error('invalid field element: outside of range 0..ORDER');\n            // NOTE: we don't validate scalar here, please use isValid. This done such way because some\n            // protocol may allow non-reduced scalar that reduced later or changed some other way.\n            return scalar;\n        },\n        // TODO: we don't need it here, move out to separate fn\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // We can't move this out because Fp6, Fp12 implement it\n        // and it's unclear what to return in there.\n        cmov: (a, b, c) => (c ? b : a),\n    });\n    return Object.freeze(f);\n}\n// Generic random scalar, we can do same for other fields if via Fp2.mul(Fp2.ONE, Fp2.random)?\n// This allows unsafe methods like ignore bias or zero. These unsafe, but often used in different protocols (if deterministic RNG).\n// which mean we cannot force this via opts.\n// Not sure what to do with randomBytes, we can accept it inside opts if wanted.\n// Probably need to export getMinHashLength somewhere?\n// random(bytes?: Uint8Array, unsafeAllowZero = false, unsafeAllowBias = false) {\n//   const LEN = !unsafeAllowBias ? getMinHashLength(ORDER) : BYTES;\n//   if (bytes === undefined) bytes = randomBytes(LEN); // _opts.randomBytes?\n//   const num = isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n//   // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n//   const reduced = unsafeAllowZero ? mod(num, ORDER) : mod(num, ORDER - _1n) + _1n;\n//   return reduced;\n// },\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use `mapKeyToField` instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error('hashToPrivateScalar: expected ' + minLen + '-1024 bytes of input, got ' + hashLen);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error('expected ' + minLen + '-1024 bytes of input, got ' + len);\n    const num = isLE ? bytesToNumberLE(key) : bytesToNumberBE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/**\n * Methods for elliptic curve multiplication by scalars.\n * Contains wNAF, pippenger.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { bitLen, bitMask, validateObject } from \"../utils.js\";\nimport { Field, FpInvertBatch, nLength, validateField } from \"./modular.js\";\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nexport function negateCt(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\n/**\n * Takes a bunch of Projective Points but executes only one\n * inversion on all of them. Inversion is very slow operation,\n * so this improves performance massively.\n * Optimization: converts a list of projective points to a list of identical points with Z=1.\n */\nexport function normalizeZ(c, points) {\n    const invertedZs = FpInvertBatch(c.Fp, points.map((p) => p.Z));\n    return points.map((p, i) => c.fromAffine(p.toAffine(invertedZs[i])));\n}\nfunction validateW(W, bits) {\n    if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n        throw new Error('invalid window size, expected [1..' + bits + '], got W=' + W);\n}\nfunction calcWOpts(W, scalarBits) {\n    validateW(W, scalarBits);\n    const windows = Math.ceil(scalarBits / W) + 1; // W=8 33. Not 32, because we skip zero\n    const windowSize = 2 ** (W - 1); // W=8 128. Not 256, because we skip zero\n    const maxNumber = 2 ** W; // W=8 256\n    const mask = bitMask(W); // W=8 255 == mask 0b11111111\n    const shiftBy = BigInt(W); // W=8 8\n    return { windows, windowSize, mask, maxNumber, shiftBy };\n}\nfunction calcOffsets(n, window, wOpts) {\n    const { windowSize, mask, maxNumber, shiftBy } = wOpts;\n    let wbits = Number(n & mask); // extract W bits.\n    let nextN = n >> shiftBy; // shift number by W bits.\n    // What actually happens here:\n    // const highestBit = Number(mask ^ (mask >> 1n));\n    // let wbits2 = wbits - 1; // skip zero\n    // if (wbits2 & highestBit) { wbits2 ^= Number(mask); // (~);\n    // split if bits > max: +224 => 256-32\n    if (wbits > windowSize) {\n        // we skip zero, which means instead of `>= size-1`, we do `> size`\n        wbits -= maxNumber; // -32, can be maxNumber - wbits, but then we need to set isNeg here.\n        nextN += _1n; // +256 (carry)\n    }\n    const offsetStart = window * windowSize;\n    const offset = offsetStart + Math.abs(wbits) - 1; // -1 because we skip zero\n    const isZero = wbits === 0; // is current window slice a 0?\n    const isNeg = wbits < 0; // is current window slice negative?\n    const isNegF = window % 2 !== 0; // fake random statement for noise\n    const offsetF = offsetStart; // fake offset for noise\n    return { nextN, offset, isZero, isNeg, isNegF, offsetF };\n}\nfunction validateMSMPoints(points, c) {\n    if (!Array.isArray(points))\n        throw new Error('array expected');\n    points.forEach((p, i) => {\n        if (!(p instanceof c))\n            throw new Error('invalid point at index ' + i);\n    });\n}\nfunction validateMSMScalars(scalars, field) {\n    if (!Array.isArray(scalars))\n        throw new Error('array of scalars expected');\n    scalars.forEach((s, i) => {\n        if (!field.isValid(s))\n            throw new Error('invalid scalar at index ' + i);\n    });\n}\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes.\n// Allows to make points frozen / immutable.\nconst pointPrecomputes = new WeakMap();\nconst pointWindowSizes = new WeakMap();\nfunction getW(P) {\n    // To disable precomputes:\n    // return 1;\n    return pointWindowSizes.get(P) || 1;\n}\nfunction assert0(n) {\n    if (n !== _0n)\n        throw new Error('invalid wNAF');\n}\n/**\n * Elliptic curve multiplication of Point by scalar. Fragile.\n * Table generation takes **30MB of ram and 10ms on high-end CPU**,\n * but may take much longer on slow devices. Actual generation will happen on\n * first call of `multiply()`. By default, `BASE` point is precomputed.\n *\n * Scalars should always be less than curve order: this should be checked inside of a curve itself.\n * Creates precomputation tables for fast multiplication:\n * - private scalar is split by fixed size windows of W bits\n * - every window point is collected from window's table & added to accumulator\n * - since windows are different, same point inside tables won't be accessed more than once per calc\n * - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n * - +1 window is neccessary for wNAF\n * - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n *\n * @todo Research returning 2d JS array of windows, instead of a single window.\n * This would allow windows to be in different memory locations\n */\nexport class wNAF {\n    // Parametrized with a given Point class (not individual point)\n    constructor(Point, bits) {\n        this.BASE = Point.BASE;\n        this.ZERO = Point.ZERO;\n        this.Fn = Point.Fn;\n        this.bits = bits;\n    }\n    // non-const time multiplication ladder\n    _unsafeLadder(elm, n, p = this.ZERO) {\n        let d = elm;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @param point Point instance\n     * @param W window size\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(point, W) {\n        const { windows, windowSize } = calcWOpts(W, this.bits);\n        const points = [];\n        let p = point;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            // i=1, bc we skip 0\n            for (let i = 1; i < windowSize; i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * More compact implementation:\n     * https://github.com/paulmillr/noble-secp256k1/blob/47cb1669b6e506ad66b35fe7d76132ae97465da2/index.ts#L502-L541\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W, precomputes, n) {\n        // Scalar should be smaller than field order\n        if (!this.Fn.isValid(n))\n            throw new Error('invalid scalar');\n        // Accumulators\n        let p = this.ZERO;\n        let f = this.BASE;\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n        const wo = calcWOpts(W, this.bits);\n        for (let window = 0; window < wo.windows; window++) {\n            // (n === _0n) is handled and not early-exited. isEven and offsetF are used for noise\n            const { nextN, offset, isZero, isNeg, isNegF, offsetF } = calcOffsets(n, window, wo);\n            n = nextN;\n            if (isZero) {\n                // bits are 0: add garbage to fake point\n                // Important part for const-time getPublicKey: add random \"noise\" point to f.\n                f = f.add(negateCt(isNegF, precomputes[offsetF]));\n            }\n            else {\n                // bits are 1: add to result point\n                p = p.add(negateCt(isNeg, precomputes[offset]));\n            }\n        }\n        assert0(n);\n        // Return both real and fake points: JIT won't eliminate f.\n        // At this point there is a way to F be infinity-point even if p is not,\n        // which makes it less const-time: around 1 bigint multiply.\n        return { p, f };\n    }\n    /**\n     * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param acc accumulator point to add result of multiplication\n     * @returns point\n     */\n    wNAFUnsafe(W, precomputes, n, acc = this.ZERO) {\n        const wo = calcWOpts(W, this.bits);\n        for (let window = 0; window < wo.windows; window++) {\n            if (n === _0n)\n                break; // Early-exit, skip 0 value\n            const { nextN, offset, isZero, isNeg } = calcOffsets(n, window, wo);\n            n = nextN;\n            if (isZero) {\n                // Window bits are 0: skip processing.\n                // Move to next window.\n                continue;\n            }\n            else {\n                const item = precomputes[offset];\n                acc = acc.add(isNeg ? item.negate() : item); // Re-using acc allows to save adds in MSM\n            }\n        }\n        assert0(n);\n        return acc;\n    }\n    getPrecomputes(W, point, transform) {\n        // Calculate precomputes on a first run, reuse them after\n        let comp = pointPrecomputes.get(point);\n        if (!comp) {\n            comp = this.precomputeWindow(point, W);\n            if (W !== 1) {\n                // Doing transform outside of if brings 15% perf hit\n                if (typeof transform === 'function')\n                    comp = transform(comp);\n                pointPrecomputes.set(point, comp);\n            }\n        }\n        return comp;\n    }\n    cached(point, scalar, transform) {\n        const W = getW(point);\n        return this.wNAF(W, this.getPrecomputes(W, point, transform), scalar);\n    }\n    unsafe(point, scalar, transform, prev) {\n        const W = getW(point);\n        if (W === 1)\n            return this._unsafeLadder(point, scalar, prev); // For W=1 ladder is ~x2 faster\n        return this.wNAFUnsafe(W, this.getPrecomputes(W, point, transform), scalar, prev);\n    }\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    createCache(P, W) {\n        validateW(W, this.bits);\n        pointWindowSizes.set(P, W);\n        pointPrecomputes.delete(P);\n    }\n    hasCache(elm) {\n        return getW(elm) !== 1;\n    }\n}\n/**\n * Endomorphism-specific multiplication for Koblitz curves.\n * Cost: 128 dbl, 0-256 adds.\n */\nexport function mulEndoUnsafe(Point, point, k1, k2) {\n    let acc = point;\n    let p1 = Point.ZERO;\n    let p2 = Point.ZERO;\n    while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n)\n            p1 = p1.add(acc);\n        if (k2 & _1n)\n            p2 = p2.add(acc);\n        acc = acc.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n    }\n    return { p1, p2 };\n}\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster than precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka secret keys / bigints)\n */\nexport function pippenger(c, fieldN, points, scalars) {\n    // If we split scalars by some window (let's say 8 bits), every chunk will only\n    // take 256 buckets even if there are 4096 scalars, also re-uses double.\n    // TODO:\n    // - https://eprint.iacr.org/2024/750.pdf\n    // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n    // 0 is accepted in scalars\n    validateMSMPoints(points, c);\n    validateMSMScalars(scalars, fieldN);\n    const plength = points.length;\n    const slength = scalars.length;\n    if (plength !== slength)\n        throw new Error('arrays of points and scalars must have equal length');\n    // if (plength === 0) throw new Error('array must be of length >= 2');\n    const zero = c.ZERO;\n    const wbits = bitLen(BigInt(plength));\n    let windowSize = 1; // bits\n    if (wbits > 12)\n        windowSize = wbits - 3;\n    else if (wbits > 4)\n        windowSize = wbits - 2;\n    else if (wbits > 0)\n        windowSize = 2;\n    const MASK = bitMask(windowSize);\n    const buckets = new Array(Number(MASK) + 1).fill(zero); // +1 for zero array\n    const lastBits = Math.floor((fieldN.BITS - 1) / windowSize) * windowSize;\n    let sum = zero;\n    for (let i = lastBits; i >= 0; i -= windowSize) {\n        buckets.fill(zero);\n        for (let j = 0; j < slength; j++) {\n            const scalar = scalars[j];\n            const wbits = Number((scalar >> BigInt(i)) & MASK);\n            buckets[wbits] = buckets[wbits].add(points[j]);\n        }\n        let resI = zero; // not using this will do small speed-up, but will lose ct\n        // Skip first bucket, because it is zero\n        for (let j = buckets.length - 1, sumI = zero; j > 0; j--) {\n            sumI = sumI.add(buckets[j]);\n            resI = resI.add(sumI);\n        }\n        sum = sum.add(resI);\n        if (i !== 0)\n            for (let j = 0; j < windowSize; j++)\n                sum = sum.double();\n    }\n    return sum;\n}\n/**\n * Precomputed multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @returns function which multiplies points with scaars\n */\nexport function precomputeMSMUnsafe(c, fieldN, points, windowSize) {\n    /**\n     * Performance Analysis of Window-based Precomputation\n     *\n     * Base Case (256-bit scalar, 8-bit window):\n     * - Standard precomputation requires:\n     *   - 31 additions per scalar × 256 scalars = 7,936 ops\n     *   - Plus 255 summary additions = 8,191 total ops\n     *   Note: Summary additions can be optimized via accumulator\n     *\n     * Chunked Precomputation Analysis:\n     * - Using 32 chunks requires:\n     *   - 255 additions per chunk\n     *   - 256 doublings\n     *   - Total: (255 × 32) + 256 = 8,416 ops\n     *\n     * Memory Usage Comparison:\n     * Window Size | Standard Points | Chunked Points\n     * ------------|-----------------|---------------\n     *     4-bit   |     520         |      15\n     *     8-bit   |    4,224        |     255\n     *    10-bit   |   13,824        |   1,023\n     *    16-bit   |  557,056        |  65,535\n     *\n     * Key Advantages:\n     * 1. Enables larger window sizes due to reduced memory overhead\n     * 2. More efficient for smaller scalar counts:\n     *    - 16 chunks: (16 × 255) + 256 = 4,336 ops\n     *    - ~2x faster than standard 8,191 ops\n     *\n     * Limitations:\n     * - Not suitable for plain precomputes (requires 256 constant doublings)\n     * - Performance degrades with larger scalar counts:\n     *   - Optimal for ~256 scalars\n     *   - Less efficient for 4096+ scalars (Pippenger preferred)\n     */\n    validateW(windowSize, fieldN.BITS);\n    validateMSMPoints(points, c);\n    const zero = c.ZERO;\n    const tableSize = 2 ** windowSize - 1; // table size (without zero)\n    const chunks = Math.ceil(fieldN.BITS / windowSize); // chunks of item\n    const MASK = bitMask(windowSize);\n    const tables = points.map((p) => {\n        const res = [];\n        for (let i = 0, acc = p; i < tableSize; i++) {\n            res.push(acc);\n            acc = acc.add(p);\n        }\n        return res;\n    });\n    return (scalars) => {\n        validateMSMScalars(scalars, fieldN);\n        if (scalars.length > points.length)\n            throw new Error('array of scalars must be smaller than array of points');\n        let res = zero;\n        for (let i = 0; i < chunks; i++) {\n            // No need to double if accumulator is still zero.\n            if (res !== zero)\n                for (let j = 0; j < windowSize; j++)\n                    res = res.double();\n            const shiftBy = BigInt(chunks * windowSize - (i + 1) * windowSize);\n            for (let j = 0; j < scalars.length; j++) {\n                const n = scalars[j];\n                const curr = Number((n >> shiftBy) & MASK);\n                if (!curr)\n                    continue; // skip zero scalars chunks\n                res = res.add(tables[j][curr - 1]);\n            }\n        }\n        return res;\n    };\n}\n// TODO: remove\n/** @deprecated */\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\nfunction createField(order, field, isLE) {\n    if (field) {\n        if (field.ORDER !== order)\n            throw new Error('Field.ORDER must match order: Fp == p, Fn == n');\n        validateField(field);\n        return field;\n    }\n    else {\n        return Field(order, { isLE });\n    }\n}\n/** Validates CURVE opts and creates fields */\nexport function _createCurveFields(type, CURVE, curveOpts = {}, FpFnLE) {\n    if (FpFnLE === undefined)\n        FpFnLE = type === 'edwards';\n    if (!CURVE || typeof CURVE !== 'object')\n        throw new Error(`expected valid ${type} CURVE object`);\n    for (const p of ['p', 'n', 'h']) {\n        const val = CURVE[p];\n        if (!(typeof val === 'bigint' && val > _0n))\n            throw new Error(`CURVE.${p} must be positive bigint`);\n    }\n    const Fp = createField(CURVE.p, curveOpts.Fp, FpFnLE);\n    const Fn = createField(CURVE.n, curveOpts.Fn, FpFnLE);\n    const _b = type === 'weierstrass' ? 'b' : 'd';\n    const params = ['Gx', 'Gy', 'a', _b];\n    for (const p of params) {\n        // @ts-ignore\n        if (!Fp.isValid(CURVE[p]))\n            throw new Error(`CURVE.${p} must be valid field element of CURVE.Fp`);\n    }\n    CURVE = Object.freeze(Object.assign({}, CURVE));\n    return { CURVE, Fp, Fn };\n}\n//# sourceMappingURL=curve.js.map","/**\n * Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y².\n * For design rationale of types / exports, see weierstrass module documentation.\n * Untwisted Edwards curves exist, but they aren't used in real-world protocols.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { _validateObject, _abool2 as abool, _abytes2 as abytes, aInRange, bytesToHex, bytesToNumberLE, concatBytes, copyBytes, ensureBytes, isBytes, memoized, notImplemented, randomBytes as randomBytesWeb, } from \"../utils.js\";\nimport { _createCurveFields, normalizeZ, pippenger, wNAF, } from \"./curve.js\";\nimport { Field } from \"./modular.js\";\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\nfunction isEdValidXY(Fp, CURVE, x, y) {\n    const x2 = Fp.sqr(x);\n    const y2 = Fp.sqr(y);\n    const left = Fp.add(Fp.mul(CURVE.a, x2), y2);\n    const right = Fp.add(Fp.ONE, Fp.mul(CURVE.d, Fp.mul(x2, y2)));\n    return Fp.eql(left, right);\n}\nexport function edwards(params, extraOpts = {}) {\n    const validated = _createCurveFields('edwards', params, extraOpts, extraOpts.FpFnLE);\n    const { Fp, Fn } = validated;\n    let CURVE = validated.CURVE;\n    const { h: cofactor } = CURVE;\n    _validateObject(extraOpts, {}, { uvRatio: 'function' });\n    // Important:\n    // There are some places where Fp.BYTES is used instead of nByteLength.\n    // So far, everything has been tested with curves of Fp.BYTES == nByteLength.\n    // TODO: test and find curves which behave otherwise.\n    const MASK = _2n << (BigInt(Fn.BYTES * 8) - _1n);\n    const modP = (n) => Fp.create(n); // Function overrides\n    // sqrt(u/v)\n    const uvRatio = extraOpts.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(Fp.div(u, v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    // Validate whether the passed curve params are valid.\n    // equation ax² + y² = 1 + dx²y² should work for generator point.\n    if (!isEdValidXY(Fp, CURVE, CURVE.Gx, CURVE.Gy))\n        throw new Error('bad curve params: generator point');\n    /**\n     * Asserts coordinate is valid: 0 <= n < MASK.\n     * Coordinates >= Fp.ORDER are allowed for zip215.\n     */\n    function acoord(title, n, banZero = false) {\n        const min = banZero ? _1n : _0n;\n        aInRange('coordinate ' + title, n, min, MASK);\n        return n;\n    }\n    function aextpoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    const toAffineMemo = memoized((p, iz) => {\n        const { X, Y, Z } = p;\n        const is0 = p.is0();\n        if (iz == null)\n            iz = is0 ? _8n : Fp.inv(Z); // 8 was chosen arbitrarily\n        const x = modP(X * iz);\n        const y = modP(Y * iz);\n        const zz = Fp.mul(Z, iz);\n        if (is0)\n            return { x: _0n, y: _1n };\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return { x, y };\n    });\n    const assertValidMemo = memoized((p) => {\n        const { a, d } = CURVE;\n        if (p.is0())\n            throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n        // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n        // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n        const { X, Y, Z, T } = p;\n        const X2 = modP(X * X); // X²\n        const Y2 = modP(Y * Y); // Y²\n        const Z2 = modP(Z * Z); // Z²\n        const Z4 = modP(Z2 * Z2); // Z⁴\n        const aX2 = modP(X2 * a); // aX²\n        const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n        const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n        if (left !== right)\n            throw new Error('bad point: equation left != right (1)');\n        // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n        const XY = modP(X * Y);\n        const ZT = modP(Z * T);\n        if (XY !== ZT)\n            throw new Error('bad point: equation left != right (2)');\n        return true;\n    });\n    // Extended Point works in extended coordinates: (X, Y, Z, T) ∋ (x=X/Z, y=Y/Z, T=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(X, Y, Z, T) {\n            this.X = acoord('x', X);\n            this.Y = acoord('y', Y);\n            this.Z = acoord('z', Z, true);\n            this.T = acoord('t', T);\n            Object.freeze(this);\n        }\n        static CURVE() {\n            return CURVE;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            acoord('x', x);\n            acoord('y', y);\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        // Uses algo from RFC8032 5.1.3.\n        static fromBytes(bytes, zip215 = false) {\n            const len = Fp.BYTES;\n            const { a, d } = CURVE;\n            bytes = copyBytes(abytes(bytes, len, 'point'));\n            abool(zip215, 'zip215');\n            const normed = copyBytes(bytes); // copy again, we'll manipulate it\n            const lastByte = bytes[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = bytesToNumberLE(normed);\n            // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n            // RFC8032 prohibits >= p, but ZIP215 doesn't\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            const max = zip215 ? MASK : Fp.ORDER;\n            aInRange('point.y', y, _0n, max);\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('bad point: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('bad point: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromHex(bytes, zip215 = false) {\n            return Point.fromBytes(ensureBytes('point', bytes), zip215);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        precompute(windowSize = 8, isLazy = true) {\n            wnaf.createCache(this, windowSize);\n            if (!isLazy)\n                this.multiply(_2n); // random number\n            return this;\n        }\n        // Useful in fromAffine() - not for fromBytes(), which always created valid points.\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        // Compare one point to another.\n        equals(other) {\n            aextpoint(other);\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            const { X: X2, Y: Y2, Z: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.X), this.Y, this.Z, modP(-this.T));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            aextpoint(other);\n            const { a, d } = CURVE;\n            const { X: X1, Y: Y1, Z: Z1, T: T1 } = this;\n            const { X: X2, Y: Y2, Z: Z2, T: T2 } = other;\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            // 1 <= scalar < L\n            if (!Fn.isValidNot0(scalar))\n                throw new Error('invalid scalar: expected 1 <= sc < curve.n');\n            const { p, f } = wnaf.cached(this, scalar, (p) => normalizeZ(Point, p));\n            return normalizeZ(Point, [p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        // Accepts optional accumulator to merge with multiply (important for sparse scalars)\n        multiplyUnsafe(scalar, acc = Point.ZERO) {\n            // 0 <= scalar < L\n            if (!Fn.isValid(scalar))\n                throw new Error('invalid scalar: expected 0 <= sc < curve.n');\n            if (scalar === _0n)\n                return Point.ZERO;\n            if (this.is0() || scalar === _1n)\n                return this;\n            return wnaf.unsafe(this, scalar, (p) => normalizeZ(Point, p), acc);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafe(this, CURVE.n).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(invertedZ) {\n            return toAffineMemo(this, invertedZ);\n        }\n        clearCofactor() {\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        toBytes() {\n            const { x, y } = this.toAffine();\n            // Fp.toBytes() allows non-canonical encoding of y (>= p).\n            const bytes = Fp.toBytes(y);\n            // Each y has 2 valid points: (x, y), (x,-y).\n            // When compressing, it's enough to store y and use the last byte to encode sign of x\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0;\n            return bytes;\n        }\n        toHex() {\n            return bytesToHex(this.toBytes());\n        }\n        toString() {\n            return `<Point ${this.is0() ? 'ZERO' : this.toHex()}>`;\n        }\n        // TODO: remove\n        get ex() {\n            return this.X;\n        }\n        get ey() {\n            return this.Y;\n        }\n        get ez() {\n            return this.Z;\n        }\n        get et() {\n            return this.T;\n        }\n        static normalizeZ(points) {\n            return normalizeZ(Point, points);\n        }\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        _setWindowSize(windowSize) {\n            this.precompute(windowSize);\n        }\n        toRawBytes() {\n            return this.toBytes();\n        }\n    }\n    // base / generator point\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    // zero / infinity / identity point\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    // math field\n    Point.Fp = Fp;\n    // scalar field\n    Point.Fn = Fn;\n    const wnaf = new wNAF(Point, Fn.BITS);\n    Point.BASE.precompute(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    return Point;\n}\n/**\n * Base class for prime-order points like Ristretto255 and Decaf448.\n * These points eliminate cofactor issues by representing equivalence classes\n * of Edwards curve points.\n */\nexport class PrimeEdwardsPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    // Static methods that must be implemented by subclasses\n    static fromBytes(_bytes) {\n        notImplemented();\n    }\n    static fromHex(_hex) {\n        notImplemented();\n    }\n    get x() {\n        return this.toAffine().x;\n    }\n    get y() {\n        return this.toAffine().y;\n    }\n    // Common implementations\n    clearCofactor() {\n        // no-op for prime-order groups\n        return this;\n    }\n    assertValidity() {\n        this.ep.assertValidity();\n    }\n    toAffine(invertedZ) {\n        return this.ep.toAffine(invertedZ);\n    }\n    toHex() {\n        return bytesToHex(this.toBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    isTorsionFree() {\n        return true;\n    }\n    isSmallOrder() {\n        return false;\n    }\n    add(other) {\n        this.assertSame(other);\n        return this.init(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        this.assertSame(other);\n        return this.init(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return this.init(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return this.init(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return this.init(this.ep.double());\n    }\n    negate() {\n        return this.init(this.ep.negate());\n    }\n    precompute(windowSize, isLazy) {\n        return this.init(this.ep.precompute(windowSize, isLazy));\n    }\n    /** @deprecated use `toBytes` */\n    toRawBytes() {\n        return this.toBytes();\n    }\n}\n/**\n * Initializes EdDSA signatures over given Edwards curve.\n */\nexport function eddsa(Point, cHash, eddsaOpts = {}) {\n    if (typeof cHash !== 'function')\n        throw new Error('\"hash\" function param is required');\n    _validateObject(eddsaOpts, {}, {\n        adjustScalarBytes: 'function',\n        randomBytes: 'function',\n        domain: 'function',\n        prehash: 'function',\n        mapToCurve: 'function',\n    });\n    const { prehash } = eddsaOpts;\n    const { BASE, Fp, Fn } = Point;\n    const randomBytes = eddsaOpts.randomBytes || randomBytesWeb;\n    const adjustScalarBytes = eddsaOpts.adjustScalarBytes || ((bytes) => bytes);\n    const domain = eddsaOpts.domain ||\n        ((data, ctx, phflag) => {\n            abool(phflag, 'phflag');\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return Fn.create(bytesToNumberLE(hash)); // Not Fn.fromBytes: it has length limit\n    }\n    // Get the hashed private scalar per RFC8032 5.1.5\n    function getPrivateScalar(key) {\n        const len = lengths.secretKey;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        return { head, prefix, scalar };\n    }\n    /** Convenience method that creates public key from scalar. RFC8032 5.1.5 */\n    function getExtendedPublicKey(secretKey) {\n        const { head, prefix, scalar } = getPrivateScalar(secretKey);\n        const point = BASE.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toBytes();\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    /** Calculates EdDSA pub key. RFC8032 5.1.5. */\n    function getPublicKey(secretKey) {\n        return getExtendedPublicKey(secretKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = Uint8Array.of(), ...msgs) {\n        const msg = concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, secretKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(secretKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = BASE.multiply(r).toBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = Fn.create(r + k * scalar); // S = (r + k * s) mod L\n        if (!Fn.isValid(s))\n            throw new Error('sign failed: invalid s'); // 0 <= s < L\n        const rs = concatBytes(R, Fn.toBytes(s));\n        return abytes(rs, lengths.signature, 'result');\n    }\n    // verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\n    const verifyOpts = { zip215: true };\n    /**\n     * Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n     * An extended group equation is checked.\n     */\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = lengths.signature;\n        sig = ensureBytes('signature', sig, len);\n        msg = ensureBytes('message', msg);\n        publicKey = ensureBytes('publicKey', publicKey, lengths.publicKey);\n        if (zip215 !== undefined)\n            abool(zip215, 'zip215');\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const mid = len / 2;\n        const r = sig.subarray(0, mid);\n        const s = bytesToNumberLE(sig.subarray(mid, len));\n        let A, R, SB;\n        try {\n            // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            A = Point.fromBytes(publicKey, zip215);\n            R = Point.fromBytes(r, zip215);\n            SB = BASE.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false; // zip215 allows public keys of small order\n        const k = hashDomainToScalar(context, R.toBytes(), A.toBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // Extended group equation\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().is0();\n    }\n    const _size = Fp.BYTES; // 32 for ed25519, 57 for ed448\n    const lengths = {\n        secretKey: _size,\n        publicKey: _size,\n        signature: 2 * _size,\n        seed: _size,\n    };\n    function randomSecretKey(seed = randomBytes(lengths.seed)) {\n        return abytes(seed, lengths.seed, 'seed');\n    }\n    function keygen(seed) {\n        const secretKey = utils.randomSecretKey(seed);\n        return { secretKey, publicKey: getPublicKey(secretKey) };\n    }\n    function isValidSecretKey(key) {\n        return isBytes(key) && key.length === Fn.BYTES;\n    }\n    function isValidPublicKey(key, zip215) {\n        try {\n            return !!Point.fromBytes(key, zip215);\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    const utils = {\n        getExtendedPublicKey,\n        randomSecretKey,\n        isValidSecretKey,\n        isValidPublicKey,\n        /**\n         * Converts ed public key to x public key. Uses formula:\n         * - ed25519:\n         *   - `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n         *   - `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n         * - ed448:\n         *   - `(u, v) = ((y-1)/(y+1), sqrt(156324)*u/x)`\n         *   - `(x, y) = (sqrt(156324)*u/v, (1+u)/(1-u))`\n         */\n        toMontgomery(publicKey) {\n            const { y } = Point.fromBytes(publicKey);\n            const size = lengths.publicKey;\n            const is25519 = size === 32;\n            if (!is25519 && size !== 57)\n                throw new Error('only defined for 25519 and 448');\n            const u = is25519 ? Fp.div(_1n + y, _1n - y) : Fp.div(y - _1n, y + _1n);\n            return Fp.toBytes(u);\n        },\n        toMontgomerySecret(secretKey) {\n            const size = lengths.secretKey;\n            abytes(secretKey, size);\n            const hashed = cHash(secretKey.subarray(0, size));\n            return adjustScalarBytes(hashed).subarray(0, size);\n        },\n        /** @deprecated */\n        randomPrivateKey: randomSecretKey,\n        /** @deprecated */\n        precompute(windowSize = 8, point = Point.BASE) {\n            return point.precompute(windowSize, false);\n        },\n    };\n    return Object.freeze({\n        keygen,\n        getPublicKey,\n        sign,\n        verify,\n        utils,\n        Point,\n        lengths,\n    });\n}\nfunction _eddsa_legacy_opts_to_new(c) {\n    const CURVE = {\n        a: c.a,\n        d: c.d,\n        p: c.Fp.ORDER,\n        n: c.n,\n        h: c.h,\n        Gx: c.Gx,\n        Gy: c.Gy,\n    };\n    const Fp = c.Fp;\n    const Fn = Field(CURVE.n, c.nBitLength, true);\n    const curveOpts = { Fp, Fn, uvRatio: c.uvRatio };\n    const eddsaOpts = {\n        randomBytes: c.randomBytes,\n        adjustScalarBytes: c.adjustScalarBytes,\n        domain: c.domain,\n        prehash: c.prehash,\n        mapToCurve: c.mapToCurve,\n    };\n    return { CURVE, curveOpts, hash: c.hash, eddsaOpts };\n}\nfunction _eddsa_new_output_to_legacy(c, eddsa) {\n    const Point = eddsa.Point;\n    const legacy = Object.assign({}, eddsa, {\n        ExtendedPoint: Point,\n        CURVE: c,\n        nBitLength: Point.Fn.BITS,\n        nByteLength: Point.Fn.BYTES,\n    });\n    return legacy;\n}\n// TODO: remove. Use eddsa\nexport function twistedEdwards(c) {\n    const { CURVE, curveOpts, hash, eddsaOpts } = _eddsa_legacy_opts_to_new(c);\n    const Point = edwards(CURVE, curveOpts);\n    const EDDSA = eddsa(Point, hash, eddsaOpts);\n    return _eddsa_new_output_to_legacy(c, EDDSA);\n}\n//# sourceMappingURL=edwards.js.map","import { _validateObject, abytes, bytesToNumberBE, concatBytes, isBytes, isHash, utf8ToBytes, } from \"../utils.js\";\nimport { FpInvertBatch, mod } from \"./modular.js\";\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value, length) {\n    anum(value);\n    anum(length);\n    if (value < 0 || value >= 1 << (8 * length))\n        throw new Error('invalid I2OSP input: ' + value);\n    const res = Array.from({ length }).fill(0);\n    for (let i = length - 1; i >= 0; i--) {\n        res[i] = value & 0xff;\n        value >>>= 8;\n    }\n    return new Uint8Array(res);\n}\nfunction strxor(a, b) {\n    const arr = new Uint8Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        arr[i] = a[i] ^ b[i];\n    }\n    return arr;\n}\nfunction anum(item) {\n    if (!Number.isSafeInteger(item))\n        throw new Error('number expected');\n}\nfunction normDST(DST) {\n    if (!isBytes(DST) && typeof DST !== 'string')\n        throw new Error('DST must be Uint8Array or string');\n    return typeof DST === 'string' ? utf8ToBytes(DST) : DST;\n}\n/**\n * Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits.\n * [RFC 9380 5.3.1](https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1).\n */\nexport function expand_message_xmd(msg, DST, lenInBytes, H) {\n    abytes(msg);\n    anum(lenInBytes);\n    DST = normDST(DST);\n    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n    if (DST.length > 255)\n        DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n    const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n    const ell = Math.ceil(lenInBytes / b_in_bytes);\n    if (lenInBytes > 65535 || ell > 255)\n        throw new Error('expand_message_xmd: invalid lenInBytes');\n    const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n    const Z_pad = i2osp(0, r_in_bytes);\n    const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n    const b = new Array(ell);\n    const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n    b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n    for (let i = 1; i <= ell; i++) {\n        const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n        b[i] = H(concatBytes(...args));\n    }\n    const pseudo_random_bytes = concatBytes(...b);\n    return pseudo_random_bytes.slice(0, lenInBytes);\n}\n/**\n * Produces a uniformly random byte string using an extendable-output function (XOF) H.\n * 1. The collision resistance of H MUST be at least k bits.\n * 2. H MUST be an XOF that has been proved indifferentiable from\n *    a random oracle under a reasonable cryptographic assumption.\n * [RFC 9380 5.3.2](https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2).\n */\nexport function expand_message_xof(msg, DST, lenInBytes, k, H) {\n    abytes(msg);\n    anum(lenInBytes);\n    DST = normDST(DST);\n    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n    // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n    if (DST.length > 255) {\n        const dkLen = Math.ceil((2 * k) / 8);\n        DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n    }\n    if (lenInBytes > 65535 || DST.length > 255)\n        throw new Error('expand_message_xof: invalid lenInBytes');\n    return (H.create({ dkLen: lenInBytes })\n        .update(msg)\n        .update(i2osp(lenInBytes, 2))\n        // 2. DST_prime = DST || I2OSP(len(DST), 1)\n        .update(DST)\n        .update(i2osp(DST.length, 1))\n        .digest());\n}\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F.\n * [RFC 9380 5.2](https://www.rfc-editor.org/rfc/rfc9380#section-5.2).\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg, count, options) {\n    _validateObject(options, {\n        p: 'bigint',\n        m: 'number',\n        k: 'number',\n        hash: 'function',\n    });\n    const { p, k, m, hash, expand, DST } = options;\n    if (!isHash(options.hash))\n        throw new Error('expected valid hash');\n    abytes(msg);\n    anum(count);\n    const log2p = p.toString(2).length;\n    const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n    const len_in_bytes = count * m * L;\n    let prb; // pseudo_random_bytes\n    if (expand === 'xmd') {\n        prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n    }\n    else if (expand === 'xof') {\n        prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n    }\n    else if (expand === '_internal_pass') {\n        // for internal tests only\n        prb = msg;\n    }\n    else {\n        throw new Error('expand must be \"xmd\" or \"xof\"');\n    }\n    const u = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const e = new Array(m);\n        for (let j = 0; j < m; j++) {\n            const elm_offset = L * (j + i * m);\n            const tv = prb.subarray(elm_offset, elm_offset + L);\n            e[j] = mod(os2ip(tv), p);\n        }\n        u[i] = e;\n    }\n    return u;\n}\nexport function isogenyMap(field, map) {\n    // Make same order as in spec\n    const coeff = map.map((i) => Array.from(i).reverse());\n    return (x, y) => {\n        const [xn, xd, yn, yd] = coeff.map((val) => val.reduce((acc, i) => field.add(field.mul(acc, x), i)));\n        // 6.6.3\n        // Exceptional cases of iso_map are inputs that cause the denominator of\n        // either rational function to evaluate to zero; such cases MUST return\n        // the identity point on E.\n        const [xd_inv, yd_inv] = FpInvertBatch(field, [xd, yd], true);\n        x = field.mul(xn, xd_inv); // xNum / xDen\n        y = field.mul(y, field.mul(yn, yd_inv)); // y * (yNum / yDev)\n        return { x, y };\n    };\n}\nexport const _DST_scalar = utf8ToBytes('HashToScalar-');\n/** Creates hash-to-curve methods from EC Point and mapToCurve function. See {@link H2CHasher}. */\nexport function createHasher(Point, mapToCurve, defaults) {\n    if (typeof mapToCurve !== 'function')\n        throw new Error('mapToCurve() must be defined');\n    function map(num) {\n        return Point.fromAffine(mapToCurve(num));\n    }\n    function clear(initial) {\n        const P = initial.clearCofactor();\n        if (P.equals(Point.ZERO))\n            return Point.ZERO; // zero will throw in assert\n        P.assertValidity();\n        return P;\n    }\n    return {\n        defaults,\n        hashToCurve(msg, options) {\n            const opts = Object.assign({}, defaults, options);\n            const u = hash_to_field(msg, 2, opts);\n            const u0 = map(u[0]);\n            const u1 = map(u[1]);\n            return clear(u0.add(u1));\n        },\n        encodeToCurve(msg, options) {\n            const optsDst = defaults.encodeDST ? { DST: defaults.encodeDST } : {};\n            const opts = Object.assign({}, defaults, optsDst, options);\n            const u = hash_to_field(msg, 1, opts);\n            const u0 = map(u[0]);\n            return clear(u0);\n        },\n        /** See {@link H2CHasher} */\n        mapToCurve(scalars) {\n            if (!Array.isArray(scalars))\n                throw new Error('expected array of bigints');\n            for (const i of scalars)\n                if (typeof i !== 'bigint')\n                    throw new Error('expected array of bigints');\n            return clear(map(scalars));\n        },\n        // hash_to_scalar can produce 0: https://www.rfc-editor.org/errata/eid8393\n        // RFC 9380, draft-irtf-cfrg-bbs-signatures-08\n        hashToScalar(msg, options) {\n            // @ts-ignore\n            const N = Point.Fn.ORDER;\n            const opts = Object.assign({}, defaults, { p: N, m: 1, DST: _DST_scalar }, options);\n            return hash_to_field(msg, 1, opts)[0][0];\n        },\n    };\n}\n//# sourceMappingURL=hash-to-curve.js.map","/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha2.js';\nimport { abytes, concatBytes, utf8ToBytes } from '@noble/hashes/utils.js';\nimport { pippenger } from \"./abstract/curve.js\";\nimport { PrimeEdwardsPoint, twistedEdwards, } from \"./abstract/edwards.js\";\nimport { _DST_scalar, createHasher, expand_message_xmd, } from \"./abstract/hash-to-curve.js\";\nimport { Field, FpInvertBatch, FpSqrtEven, isNegativeLE, mod, pow2, } from \"./abstract/modular.js\";\nimport { montgomery } from \"./abstract/montgomery.js\";\nimport { bytesToNumberLE, ensureBytes, equalBytes } from \"./utils.js\";\n// prettier-ignore\nconst _0n = /* @__PURE__ */ BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _5n = BigInt(5), _8n = BigInt(8);\n// P = 2n**255n-19n\nconst ed25519_CURVE_p = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed');\n// N = 2n**252n + 27742317777372353535851937790883648493n\n// a = Fp.create(BigInt(-1))\n// d = -121665/121666 a.k.a. Fp.neg(121665 * Fp.inv(121666))\nconst ed25519_CURVE = /* @__PURE__ */ (() => ({\n    p: ed25519_CURVE_p,\n    n: BigInt('0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed'),\n    h: _8n,\n    a: BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec'),\n    d: BigInt('0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3'),\n    Gx: BigInt('0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a'),\n    Gy: BigInt('0x6666666666666666666666666666666666666666666666666666666666666658'),\n}))();\nfunction ed25519_pow_2_252_3(x) {\n    // prettier-ignore\n    const _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\n    const P = ed25519_CURVE_p;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\n// Fp.sqrt(Fp.neg(1))\nconst ED25519_SQRT_M1 = /* @__PURE__ */ BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ed25519_CURVE_p;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nconst Fp = /* @__PURE__ */ (() => Field(ed25519_CURVE.p, { isLE: true }))();\nconst Fn = /* @__PURE__ */ (() => Field(ed25519_CURVE.n, { isLE: true }))();\nconst ed25519Defaults = /* @__PURE__ */ (() => ({\n    ...ed25519_CURVE,\n    Fp,\n    hash: sha512,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n}))();\n/**\n * ed25519 curve with EdDSA signatures.\n * @example\n * import { ed25519 } from '@noble/curves/ed25519';\n * const { secretKey, publicKey } = ed25519.keygen();\n * const msg = new TextEncoder().encode('hello');\n * const sig = ed25519.sign(msg, priv);\n * ed25519.verify(sig, msg, pub); // Default mode: follows ZIP215\n * ed25519.verify(sig, msg, pub, { zip215: false }); // RFC8032 / FIPS 186-5\n */\nexport const ed25519 = /* @__PURE__ */ (() => twistedEdwards(ed25519Defaults))();\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\n/** Context of ed25519. Uses context for domain separation. */\nexport const ed25519ctx = /* @__PURE__ */ (() => twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n}))();\n/** Prehashed version of ed25519. Accepts already-hashed messages in sign() and verify(). */\nexport const ed25519ph = /* @__PURE__ */ (() => twistedEdwards(Object.assign({}, ed25519Defaults, {\n    domain: ed25519_domain,\n    prehash: sha512,\n})))();\n/**\n * ECDH using curve25519 aka x25519.\n * @example\n * import { x25519 } from '@noble/curves/ed25519';\n * const priv = 'a546e36bf0527c9d3b16154b82465edd62144c0ac1fc5a18506a2244ba449ac4';\n * const pub = 'e6db6867583030db3594c1a424b15f7c726624ec26b3353b10a903a6d0ab1c4c';\n * x25519.getSharedSecret(priv, pub) === x25519.scalarMult(priv, pub); // aliases\n * x25519.getPublicKey(priv) === x25519.scalarMultBase(priv);\n * x25519.getPublicKey(x25519.utils.randomSecretKey());\n */\nexport const x25519 = /* @__PURE__ */ (() => {\n    const P = Fp.ORDER;\n    return montgomery({\n        P,\n        type: 'x25519',\n        powPminus2: (x) => {\n            // x^(p-2) aka x^(2^255-21)\n            const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n            return mod(pow2(pow_p_5_8, _3n, P) * b2, P);\n        },\n        adjustScalarBytes,\n    });\n})();\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = /* @__PURE__ */ (() => (ed25519_CURVE_p + _3n) / _8n)(); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = /* @__PURE__ */ (() => Fp.pow(_2n, ELL2_C1))(); // 2. c2 = 2^c1\nconst ELL2_C3 = /* @__PURE__ */ (() => Fp.sqrt(Fp.neg(Fp.ONE)))(); // 3. c3 = sqrt(-1)\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    const ELL2_C4 = (ed25519_CURVE_p - _5n) / _8n; // 4. c4 = (q - 5) / 8       # Integer arithmetic\n    const ELL2_J = BigInt(486662);\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = /* @__PURE__ */ (() => FpSqrtEven(Fp, Fp.neg(BigInt(486664))))(); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const [xd_inv, yd_inv] = FpInvertBatch(Fp, [xd, yd], true); // batch division\n    return { x: Fp.mul(xn, xd_inv), y: Fp.mul(yn, yd_inv) }; //  13. return (xn, xd, yn, yd)\n}\n/** Hashing to ed25519 points / field. RFC 9380 methods. */\nexport const ed25519_hasher = /* @__PURE__ */ (() => createHasher(ed25519.Point, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: ed25519_CURVE_p,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = /* @__PURE__ */ BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = /* @__PURE__ */ BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = /* @__PURE__ */ BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = /* @__PURE__ */ BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = /* @__PURE__ */ BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.Point.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n/**\n * Computes Elligator map for Ristretto255.\n * Described in [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#appendix-B) and on\n * the [website](https://ristretto.group/formulas/elligator.html).\n */\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519_CURVE;\n    const P = ed25519_CURVE_p;\n    const mod = (n) => Fp.create(n);\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.Point(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\nfunction ristretto255_map(bytes) {\n    abytes(bytes, 64);\n    const r1 = bytes255ToNumberLE(bytes.subarray(0, 32));\n    const R1 = calcElligatorRistrettoMap(r1);\n    const r2 = bytes255ToNumberLE(bytes.subarray(32, 64));\n    const R2 = calcElligatorRistrettoMap(r2);\n    return new _RistrettoPoint(R1.add(R2));\n}\n/**\n * Wrapper over Edwards Point for ristretto255.\n *\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * See [RFC9496](https://www.rfc-editor.org/rfc/rfc9496).\n */\nclass _RistrettoPoint extends PrimeEdwardsPoint {\n    constructor(ep) {\n        super(ep);\n    }\n    static fromAffine(ap) {\n        return new _RistrettoPoint(ed25519.Point.fromAffine(ap));\n    }\n    assertSame(other) {\n        if (!(other instanceof _RistrettoPoint))\n            throw new Error('RistrettoPoint expected');\n    }\n    init(ep) {\n        return new _RistrettoPoint(ep);\n    }\n    /** @deprecated use `import { ristretto255_hasher } from '@noble/curves/ed25519.js';` */\n    static hashToCurve(hex) {\n        return ristretto255_map(ensureBytes('ristrettoHash', hex, 64));\n    }\n    static fromBytes(bytes) {\n        abytes(bytes, 32);\n        const { a, d } = ed25519_CURVE;\n        const P = ed25519_CURVE_p;\n        const mod = (n) => Fp.create(n);\n        const s = bytes255ToNumberLE(bytes);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(Fp.toBytes(s), bytes) || isNegativeLE(s, P))\n            throw new Error('invalid ristretto255 encoding 1');\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error('invalid ristretto255 encoding 2');\n        return new _RistrettoPoint(new ed25519.Point(x, y, _1n, t));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-decode).\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        return _RistrettoPoint.fromBytes(ensureBytes('ristrettoHex', hex, 32));\n    }\n    static msm(points, scalars) {\n        return pippenger(_RistrettoPoint, ed25519.Point.Fn, points, scalars);\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-encode).\n     */\n    toBytes() {\n        let { X, Y, Z, T } = this.ep;\n        const P = ed25519_CURVE_p;\n        const mod = (n) => Fp.create(n);\n        const u1 = mod(mod(Z + Y) * mod(Z - Y)); // 1\n        const u2 = mod(X * Y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * T); // 6\n        let D; // 7\n        if (isNegativeLE(T * zInv, P)) {\n            let _x = mod(Y * SQRT_M1);\n            let _y = mod(X * SQRT_M1);\n            X = _x;\n            Y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(X * zInv, P))\n            Y = mod(-Y); // 9\n        let s = mod((Z - Y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return Fp.toBytes(s); // 11\n    }\n    /**\n     * Compares two Ristretto points.\n     * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-equals).\n     */\n    equals(other) {\n        this.assertSame(other);\n        const { X: X1, Y: Y1 } = this.ep;\n        const { X: X2, Y: Y2 } = other.ep;\n        const mod = (n) => Fp.create(n);\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    is0() {\n        return this.equals(_RistrettoPoint.ZERO);\n    }\n}\n// Do NOT change syntax: the following gymnastics is done,\n// because typescript strips comments, which makes bundlers disable tree-shaking.\n// prettier-ignore\n_RistrettoPoint.BASE = \n/* @__PURE__ */ (() => new _RistrettoPoint(ed25519.Point.BASE))();\n// prettier-ignore\n_RistrettoPoint.ZERO = \n/* @__PURE__ */ (() => new _RistrettoPoint(ed25519.Point.ZERO))();\n// prettier-ignore\n_RistrettoPoint.Fp = \n/* @__PURE__ */ (() => Fp)();\n// prettier-ignore\n_RistrettoPoint.Fn = \n/* @__PURE__ */ (() => Fn)();\nexport const ristretto255 = { Point: _RistrettoPoint };\n/** Hashing to ristretto255 points / field. RFC 9380 methods. */\nexport const ristretto255_hasher = {\n    hashToCurve(msg, options) {\n        const DST = options?.DST || 'ristretto255_XMD:SHA-512_R255MAP_RO_';\n        const xmd = expand_message_xmd(msg, DST, 64, sha512);\n        return ristretto255_map(xmd);\n    },\n    hashToScalar(msg, options = { DST: _DST_scalar }) {\n        const xmd = expand_message_xmd(msg, options.DST, 64, sha512);\n        return Fn.create(bytesToNumberLE(xmd));\n    },\n};\n// export const ristretto255_oprf: OPRF = createORPF({\n//   name: 'ristretto255-SHA512',\n//   Point: RistrettoPoint,\n//   hash: sha512,\n//   hashToGroup: ristretto255_hasher.hashToCurve,\n//   hashToScalar: ristretto255_hasher.hashToScalar,\n// });\n/**\n * Weird / bogus points, useful for debugging.\n * All 8 ed25519 points of 8-torsion subgroup can be generated from the point\n * T = `26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05`.\n * ⟨T⟩ = { O, T, 2T, 3T, 4T, 5T, 6T, 7T }\n */\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\n/** @deprecated use `ed25519.utils.toMontgomery` */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    return ed25519.utils.toMontgomery(ensureBytes('pub', edwardsPub));\n}\n/** @deprecated use `ed25519.utils.toMontgomery` */\nexport const edwardsToMontgomery = edwardsToMontgomeryPub;\n/** @deprecated use `ed25519.utils.toMontgomerySecret` */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    return ed25519.utils.toMontgomerySecret(ensureBytes('pub', edwardsPriv));\n}\n/** @deprecated use `ristretto255.Point` */\nexport const RistrettoPoint = _RistrettoPoint;\n/** @deprecated use `import { ed25519_hasher } from '@noble/curves/ed25519.js';` */\nexport const hashToCurve = /* @__PURE__ */ (() => ed25519_hasher.hashToCurve)();\n/** @deprecated use `import { ed25519_hasher } from '@noble/curves/ed25519.js';` */\nexport const encodeToCurve = /* @__PURE__ */ (() => ed25519_hasher.encodeToCurve)();\n/** @deprecated use `import { ristretto255_hasher } from '@noble/curves/ed25519.js';` */\nexport const hashToRistretto255 = /* @__PURE__ */ (() => ristretto255_hasher.hashToCurve)();\n/** @deprecated use `import { ristretto255_hasher } from '@noble/curves/ed25519.js';` */\nexport const hash_to_ristretto255 = /* @__PURE__ */ (() => ristretto255_hasher.hashToCurve)();\n//# sourceMappingURL=ed25519.js.map","// src/codes.ts\nvar SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED = 1;\nvar SOLANA_ERROR__INVALID_NONCE = 2;\nvar SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND = 3;\nvar SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE = 4;\nvar SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH = 5;\nvar SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE = 6;\nvar SOLANA_ERROR__MALFORMED_BIGINT_STRING = 7;\nvar SOLANA_ERROR__MALFORMED_NUMBER_STRING = 8;\nvar SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE = 9;\nvar SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR = 10;\nvar SOLANA_ERROR__JSON_RPC__PARSE_ERROR = -32700;\nvar SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR = -32603;\nvar SOLANA_ERROR__JSON_RPC__INVALID_PARAMS = -32602;\nvar SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND = -32601;\nvar SOLANA_ERROR__JSON_RPC__INVALID_REQUEST = -32600;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED = -32016;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION = -32015;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET = -32014;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH = -32013;\nvar SOLANA_ERROR__JSON_RPC__SCAN_ERROR = -32012;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE = -32011;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX = -32010;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED = -32009;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT = -32008;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED = -32007;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE = -32006;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY = -32005;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE = -32004;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE = -32003;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE = -32002;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP = -32001;\nvar SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH = 28e5;\nvar SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE = 2800001;\nvar SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS = 2800002;\nvar SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY = 2800003;\nvar SOLANA_ERROR__ADDRESSES__MALFORMED_PDA = 2800004;\nvar SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE = 2800005;\nvar SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED = 2800006;\nvar SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED = 2800007;\nvar SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE = 2800008;\nvar SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED = 2800009;\nvar SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER = 2800010;\nvar SOLANA_ERROR__ADDRESSES__INVALID_OFF_CURVE_ADDRESS = 2800011;\nvar SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND = 323e4;\nvar SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND = 32300001;\nvar SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT = 3230002;\nvar SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT = 3230003;\nvar SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED = 3230004;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT = 361e4;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED = 3610001;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED = 3610002;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED = 3610003;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED = 3610004;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED = 3610005;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED = 3610006;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY = 3610007;\nvar SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED = 3611e3;\nvar SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH = 3704e3;\nvar SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH = 3704001;\nvar SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH = 3704002;\nvar SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE = 3704003;\nvar SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY = 3704004;\nvar SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS = 4128e3;\nvar SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA = 4128001;\nvar SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH = 4128002;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN = 4615e3;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR = 4615001;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT = 4615002;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA = 4615003;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA = 4615004;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL = 4615005;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS = 4615006;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID = 4615007;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE = 4615008;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED = 4615009;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT = 4615010;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION = 4615011;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID = 4615012;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND = 4615013;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED = 4615014;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE = 4615015;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED = 4615016;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX = 4615017;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED = 4615018;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED = 4615019;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS = 4615020;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED = 4615021;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE = 4615022;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED = 4615023;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 4615024;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC = 4615025;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM = 4615026;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR = 4615027;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED = 4615028;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE = 4615029;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT = 4615030;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID = 4615031;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH = 4615032;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT = 4615033;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED = 4615034;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED = 4615035;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS = 4615036;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC = 4615037;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED = 4615038;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION = 4615039;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE = 4615040;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE = 4615041;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE = 4615042;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE = 4615043;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY = 4615044;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR = 4615045;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT = 4615046;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER = 4615047;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW = 4615048;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR = 4615049;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER = 4615050;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED = 4615051;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED = 4615052;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED = 4615053;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS = 4615054;\nvar SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS = 5508e3;\nvar SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER = 5508001;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER = 5508002;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER = 5508003;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER = 5508004;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER = 5508005;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER = 5508006;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER = 5508007;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER = 5508008;\nvar SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS = 5508009;\nvar SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING = 5508010;\nvar SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED = 5508011;\nvar SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES = 5663e3;\nvar SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE = 5663001;\nvar SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME = 5663002;\nvar SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME = 5663003;\nvar SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE = 5663004;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING = 5663005;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE = 5663006;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND = 5663007;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING = 5663008;\nvar SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING = 5663009;\nvar SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING = 5663010;\nvar SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING = 5663011;\nvar SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING = 5663012;\nvar SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING = 5663013;\nvar SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE = 5663014;\nvar SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION = 5663015;\nvar SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES = 5663016;\nvar SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH = 5663017;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT = 5663018;\nvar SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT = 5663019;\nvar SOLANA_ERROR__TRANSACTION__EXCEEDS_SIZE_LIMIT = 5663020;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN = 705e4;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE = 7050001;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE = 7050002;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND = 7050003;\nvar SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND = 7050004;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE = 7050005;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE = 7050006;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED = 7050007;\nvar SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND = 7050008;\nvar SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP = 7050009;\nvar SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE = 7050010;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX = 7050011;\nvar SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE = 7050012;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION = 7050013;\nvar SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE = 7050014;\nvar SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE = 7050015;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 7050016;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT = 7050017;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION = 7050018;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT = 7050019;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT = 7050020;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT = 7050021;\nvar SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS = 7050022;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND = 7050023;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER = 7050024;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA = 7050025;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX = 7050026;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT = 7050027;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT = 7050028;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT = 7050029;\nvar SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION = 7050030;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT = 7050031;\nvar SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED = 7050032;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT = 7050033;\nvar SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED = 7050034;\nvar SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED = 7050035;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION = 7050036;\nvar SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY = 8078e3;\nvar SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH = 8078001;\nvar SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH = 8078002;\nvar SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH = 8078003;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH = 8078004;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH = 8078005;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH = 8078006;\nvar SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS = 8078007;\nvar SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE = 8078008;\nvar SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT = 8078009;\nvar SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT = 8078010;\nvar SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE = 8078011;\nvar SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE = 8078012;\nvar SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH = 8078013;\nvar SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE = 8078014;\nvar SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT = 8078015;\nvar SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE = 8078016;\nvar SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE = 8078017;\nvar SOLANA_ERROR__CODECS__INVALID_CONSTANT = 8078018;\nvar SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE = 8078019;\nvar SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL = 8078020;\nvar SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES = 8078021;\nvar SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS = 8078022;\nvar SOLANA_ERROR__RPC__INTEGER_OVERFLOW = 81e5;\nvar SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN = 8100001;\nvar SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR = 8100002;\nvar SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD = 8100003;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN = 819e4;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID = 8190001;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CLOSED_BEFORE_MESSAGE_BUFFERED = 8190002;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CONNECTION_CLOSED = 8190003;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT = 8190004;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_STATE_MISSING = 99e5;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE = 9900001;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING = 9900002;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE = 9900003;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED = 9900004;\n\n// src/context.ts\nfunction encodeValue(value) {\n  if (Array.isArray(value)) {\n    const commaSeparatedValues = value.map(encodeValue).join(\n      \"%2C%20\"\n      /* \", \" */\n    );\n    return \"%5B\" + commaSeparatedValues + /* \"]\" */\n    \"%5D\";\n  } else if (typeof value === \"bigint\") {\n    return `${value}n`;\n  } else {\n    return encodeURIComponent(\n      String(\n        value != null && Object.getPrototypeOf(value) === null ? (\n          // Plain objects with no prototype don't have a `toString` method.\n          // Convert them before stringifying them.\n          { ...value }\n        ) : value\n      )\n    );\n  }\n}\nfunction encodeObjectContextEntry([key, value]) {\n  return `${key}=${encodeValue(value)}`;\n}\nfunction encodeContextObject(context) {\n  const searchParamsString = Object.entries(context).map(encodeObjectContextEntry).join(\"&\");\n  return btoa(searchParamsString);\n}\n\n// src/messages.ts\nvar SolanaErrorMessages = {\n  [SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND]: \"Account not found at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED]: \"Not all accounts were decoded. Encoded accounts found at addresses: $addresses.\",\n  [SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT]: \"Expected decoded account at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT]: \"Failed to decode account data at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND]: \"Accounts not found at addresses: $addresses\",\n  [SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED]: \"Unable to find a viable program address bump seed.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS]: \"$putativeAddress is not a base58-encoded address.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH]: \"Expected base58 encoded address to decode to a byte array of length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY]: \"The `CryptoKey` must be an `Ed25519` public key.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_OFF_CURVE_ADDRESS]: \"$putativeOffCurveAddress is not a base58-encoded off-curve address.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE]: \"Invalid seeds; point must fall off the Ed25519 curve.\",\n  [SOLANA_ERROR__ADDRESSES__MALFORMED_PDA]: \"Expected given program derived address to have the following format: [Address, ProgramDerivedAddressBump].\",\n  [SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED]: \"A maximum of $maxSeeds seeds, including the bump seed, may be supplied when creating an address. Received: $actual.\",\n  [SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED]: \"The seed at index $index with length $actual exceeds the maximum length of $maxSeedLength bytes.\",\n  [SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE]: \"Expected program derived address bump to be in the range [0, 255], got: $bump.\",\n  [SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER]: \"Program address cannot end with PDA marker.\",\n  [SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded address string of length in the range [32, 44]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded blockash string of length in the range [32, 44]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED]: \"The network has progressed past the last block for which this transaction could have been committed.\",\n  [SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY]: \"Codec [$codecDescription] cannot decode empty byte arrays.\",\n  [SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS]: \"Enum codec cannot use lexical values [$stringValues] as discriminators. Either remove all lexical values or set `useValuesAsDiscriminators` to `false`.\",\n  [SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL]: \"Sentinel [$hexSentinel] must not be present in encoded bytes [$hexEncodedBytes].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH]: \"Encoder and decoder must have the same fixed size, got [$encoderFixedSize] and [$decoderFixedSize].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH]: \"Encoder and decoder must have the same max size, got [$encoderMaxSize] and [$decoderMaxSize].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH]: \"Encoder and decoder must either both be fixed-size or variable-size.\",\n  [SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE]: \"Enum discriminator out of range. Expected a number in [$formattedValidDiscriminators], got $discriminator.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH]: \"Expected a fixed-size codec, got a variable-size one.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH]: \"Codec [$codecDescription] expected a positive byte length, got $bytesLength.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH]: \"Expected a variable-size codec, got a fixed-size one.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE]: \"Codec [$codecDescription] expected zero-value [$hexZeroValue] to have the same size as the provided fixed-size item [$expectedSize bytes].\",\n  [SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH]: \"Codec [$codecDescription] expected $expected bytes, got $bytesLength.\",\n  [SOLANA_ERROR__CODECS__INVALID_CONSTANT]: \"Expected byte array constant [$hexConstant] to be present in data [$hexData] at offset [$offset].\",\n  [SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT]: \"Invalid discriminated union variant. Expected one of [$variants], got $value.\",\n  [SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT]: \"Invalid enum variant. Expected one of [$stringValues] or a number in [$formattedNumericalValues], got $variant.\",\n  [SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT]: \"Invalid literal union variant. Expected one of [$variants], got $value.\",\n  [SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS]: \"Expected [$codecDescription] to have $expected items, got $actual.\",\n  [SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE]: \"Invalid value $value for base $base with alphabet $alphabet.\",\n  [SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE]: \"Literal union discriminator out of range. Expected a number between $minRange and $maxRange, got $discriminator.\",\n  [SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE]: \"Codec [$codecDescription] expected number to be in the range [$min, $max], got $value.\",\n  [SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE]: \"Codec [$codecDescription] expected offset to be in the range [0, $bytesLength], got $offset.\",\n  [SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES]: \"Expected sentinel [$hexSentinel] to be present in decoded bytes [$hexDecodedBytes].\",\n  [SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE]: \"Union variant out of range. Expected an index between $minRange and $maxRange, got $variant.\",\n  [SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED]: \"No random values implementation could be found.\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED]: \"instruction requires an uninitialized account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED]: \"instruction tries to borrow reference for an account which is already borrowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]: \"instruction left account with an outstanding borrowed reference\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED]: \"program other than the account's owner changed the size of the account data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL]: \"account data too small for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE]: \"instruction expected an executable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT]: \"An account does not have enough lamports to be rent-exempt\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW]: \"Program arithmetic overflowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR]: \"Failed to serialize or deserialize account data: $encodedData\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS]: \"Builtin programs must consume compute units\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH]: \"Cross-program invocation call depth too deep\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED]: \"Computational budget exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM]: \"custom program error: #$code\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX]: \"instruction contains duplicate accounts\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC]: \"instruction modifications of multiply-passed account differ\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT]: \"executable accounts must be rent exempt\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED]: \"instruction changed executable accounts data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE]: \"instruction changed the balance of an executable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED]: \"instruction changed executable bit of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED]: \"instruction modified data of an account it does not own\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND]: \"instruction spent from the balance of an account it does not own\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR]: \"generic instruction error\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER]: \"Provided owner is not allowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE]: \"Account is immutable\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY]: \"Incorrect authority provided\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID]: \"incorrect program id for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS]: \"insufficient funds for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA]: \"invalid account data for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER]: \"Invalid account owner\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT]: \"invalid program argument\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR]: \"program returned invalid error code\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA]: \"invalid instruction data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC]: \"Failed to reallocate account data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS]: \"Provided seeds do not result in a valid address\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED]: \"Accounts data allocations exceeded the maximum allowed per transaction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED]: \"Max accounts exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED]: \"Max instruction trace length exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED]: \"Length of the seed is too long for address generation\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT]: \"An account required by the instruction is missing\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE]: \"missing required signature for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID]: \"instruction illegally modified the program id of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS]: \"insufficient account keys for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION]: \"Cross-program invocation with unauthorized signer or writable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE]: \"Failed to create program execution environment\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE]: \"Program failed to compile\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE]: \"Program failed to complete\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED]: \"instruction modified data of a read-only account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE]: \"instruction changed the balance of a read-only account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED]: \"Cross-program invocation reentrancy not allowed for this instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED]: \"instruction modified rent epoch of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION]: \"sum of account balances before and after instruction do not match\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT]: \"instruction requires an initialized account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN]: \"\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID]: \"Unsupported program id\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR]: \"Unsupported sysvar\",\n  [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS]: \"The instruction does not have any accounts.\",\n  [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA]: \"The instruction does not have any data.\",\n  [SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH]: \"Expected instruction to have progress address $expectedProgramAddress, got $actualProgramAddress.\",\n  [SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH]: \"Expected base58 encoded blockhash to decode to a byte array of length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__INVALID_NONCE]: \"The nonce `$expectedNonceValue` is no longer valid. It has advanced to `$actualNonceValue`\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING]: \"Invariant violation: Found no abortable iterable cache entry for key `$cacheKey`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED]: \"Invariant violation: This data publisher does not publish to the channel named `$channelName`. Supported channels include $supportedChannelNames.\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE]: \"Invariant violation: WebSocket message iterator state is corrupt; iterated without first resolving existing message promise. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_STATE_MISSING]: \"Invariant violation: WebSocket message iterator is missing state storage. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE]: \"Invariant violation: Switch statement non-exhaustive. Received unexpected value `$unexpectedValue`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR]: \"JSON-RPC error: Internal JSON-RPC error ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__INVALID_PARAMS]: \"JSON-RPC error: Invalid method parameter(s) ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__INVALID_REQUEST]: \"JSON-RPC error: The JSON sent is not a valid `Request` object ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND]: \"JSON-RPC error: The method does not exist / is not available ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__PARSE_ERROR]: \"JSON-RPC error: An error occurred on the server while parsing the JSON text ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__SCAN_ERROR]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED]: \"Minimum context slot has not been reached\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY]: \"Node is unhealthy; behind by $numSlotsBehind slots\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT]: \"No snapshot\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE]: \"Transaction simulation failed\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE]: \"Transaction history is not available from this node\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH]: \"Transaction signature length mismatch\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE]: \"Transaction signature verification failure\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION]: \"$__serverMessage\",\n  [SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH]: \"Key pair bytes must be of length 64, got $byteLength.\",\n  [SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH]: \"Expected private key bytes with length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH]: \"Expected base58-encoded signature to decode to a byte array of length 64. Actual length: $actualLength.\",\n  [SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY]: \"The provided private key does not match the provided public key.\",\n  [SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded signature string of length in the range [64, 88]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE]: \"Lamports value must be in the range [0, 2e64-1]\",\n  [SOLANA_ERROR__MALFORMED_BIGINT_STRING]: \"`$value` cannot be parsed as a `BigInt`\",\n  [SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR]: \"$message\",\n  [SOLANA_ERROR__MALFORMED_NUMBER_STRING]: \"`$value` cannot be parsed as a `Number`\",\n  [SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND]: \"No nonce account could be found at address `$nonceAccountAddress`\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN]: \"The notification name must end in 'Notifications' and the API must supply a subscription plan creator function for the notification '$notificationName'.\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CLOSED_BEFORE_MESSAGE_BUFFERED]: \"WebSocket was closed before payload could be added to the send buffer\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CONNECTION_CLOSED]: \"WebSocket connection closed\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT]: \"WebSocket failed to connect\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID]: \"Failed to obtain a subscription id from the server\",\n  [SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD]: \"Could not find an API plan for RPC method: `$method`\",\n  [SOLANA_ERROR__RPC__INTEGER_OVERFLOW]: \"The $argumentLabel argument to the `$methodName` RPC method$optionalPathLabel was `$value`. This number is unsafe for use with the Solana JSON-RPC because it exceeds `Number.MAX_SAFE_INTEGER`.\",\n  [SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR]: \"HTTP error ($statusCode): $message\",\n  [SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN]: \"HTTP header(s) forbidden: $headers. Learn more at https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name.\",\n  [SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS]: \"Multiple distinct signers were identified for address `$address`. Please ensure that you are using the same signer instance for each address.\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER]: \"The provided value does not implement the `KeyPairSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER]: \"The provided value does not implement the `MessageModifyingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER]: \"The provided value does not implement the `MessagePartialSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER]: \"The provided value does not implement any of the `MessageSigner` interfaces\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER]: \"The provided value does not implement the `TransactionModifyingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER]: \"The provided value does not implement the `TransactionPartialSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER]: \"The provided value does not implement the `TransactionSendingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER]: \"The provided value does not implement any of the `TransactionSigner` interfaces\",\n  [SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS]: \"More than one `TransactionSendingSigner` was identified.\",\n  [SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING]: \"No `TransactionSendingSigner` was identified. Please provide a valid `TransactionWithSingleSendingSigner` transaction.\",\n  [SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED]: \"Wallet account signers do not support signing multiple messages/transactions in a single operation\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY]: \"Cannot export a non-extractable key.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED]: \"No digest implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT]: \"Cryptographic operations are only allowed in secure browser contexts. Read more here: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED]: \"This runtime does not support the generation of Ed25519 key pairs.\\n\\nInstall @solana/webcrypto-ed25519-polyfill and call its `install` function before generating keys in environments that do not support Ed25519.\\n\\nFor a list of runtimes that currently support Ed25519 operations, visit https://github.com/WICG/webcrypto-secure-curves/issues/20.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED]: \"No signature verification implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED]: \"No key generation implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED]: \"No signing implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED]: \"No key export implementation could be found.\",\n  [SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE]: \"Timestamp value must be in the range [-(2n ** 63n), (2n ** 63n) - 1]. `$value` given\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]: \"Transaction processing left an account with an outstanding borrowed reference\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE]: \"Account in use\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE]: \"Account loaded twice\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND]: \"Attempt to debit an account but found no record of a prior credit.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND]: \"Transaction loads an address table account that doesn't exist\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED]: \"This transaction has already been processed\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND]: \"Blockhash not found\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP]: \"Loader call chain is too deep\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE]: \"Transactions are currently disabled due to cluster maintenance\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION]: \"Transaction contains a duplicate instruction ($index) that is not allowed\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE]: \"Insufficient funds for fee\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT]: \"Transaction results in an account ($accountIndex) with insufficient funds for rent\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE]: \"This account may not be used to pay transaction fees\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX]: \"Transaction contains an invalid account reference\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA]: \"Transaction loads an address table account with invalid data\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX]: \"Transaction address table lookup uses an invalid index\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER]: \"Transaction loads an address table account with an invalid owner\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT]: \"LoadedAccountsDataSizeLimit set for transaction must be greater than 0.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION]: \"This program may not be used for executing instructions\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT]: \"Transaction leaves an account with a lower balance than rent-exempt minimum\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT]: \"Transaction loads a writable account that cannot be written\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED]: \"Transaction exceeded max loaded accounts data size cap\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE]: \"Transaction requires a fee but has no signature present\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND]: \"Attempt to load a program that does not exist\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED]: \"Execution of the program referenced by account at index $accountIndex is temporarily restricted.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED]: \"ResanitizationNeeded\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE]: \"Transaction failed to sanitize accounts offsets correctly\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE]: \"Transaction did not pass signature verification\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS]: \"Transaction locked too many accounts\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION]: \"Sum of account balances before and after transaction do not match\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN]: \"The transaction failed with the error `$errorName`\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION]: \"Transaction version is unsupported\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT]: \"Transaction would exceed account data limit within the block\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT]: \"Transaction would exceed total account data limit\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT]: \"Transaction would exceed max account limit within the block\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT]: \"Transaction would exceed max Block Cost Limit\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT]: \"Transaction would exceed max Vote Cost Limit\",\n  [SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION]: \"Attempted to sign a transaction with an address that is not a signer for it\",\n  [SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING]: \"Transaction is missing an address at index: $index.\",\n  [SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES]: \"Transaction has no expected signers therefore it cannot be encoded\",\n  [SOLANA_ERROR__TRANSACTION__EXCEEDS_SIZE_LIMIT]: \"Transaction size $transactionSize exceeds limit of $transactionSizeLimit bytes\",\n  [SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME]: \"Transaction does not have a blockhash lifetime\",\n  [SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME]: \"Transaction is not a durable nonce transaction\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING]: \"Contents of these address lookup tables unknown: $lookupTableAddresses\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE]: \"Lookup of address at index $highestRequestedIndex failed for lookup table `$lookupTableAddress`. Highest known index is $highestKnownIndex. The lookup table may have been extended since its contents were retrieved\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING]: \"No fee payer set in CompiledTransaction\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND]: \"Could not find program address at index $index\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT]: \"Failed to estimate the compute unit consumption for this transaction message. This is likely because simulating the transaction failed. Inspect the `cause` property of this error to learn more\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT]: \"Transaction failed when it was simulated in order to estimate the compute unit consumption. The compute unit estimate provided is for a transaction that failed when simulated and may not be representative of the compute units this transaction would consume if successful. Inspect the `cause` property of this error to learn more\",\n  [SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING]: \"Transaction is missing a fee payer.\",\n  [SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING]: \"Could not determine this transaction's signature. Make sure that the transaction has been signed by its fee payer.\",\n  [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE]: \"Transaction first instruction is not advance nonce account instruction.\",\n  [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING]: \"Transaction with no instructions cannot be durable nonce transaction.\",\n  [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES]: \"This transaction includes an address (`$programAddress`) which is both invoked and set as the fee payer. Program addresses may not pay fees\",\n  [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE]: \"This transaction includes an address (`$programAddress`) which is both invoked and marked writable. Program addresses may not be writable\",\n  [SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH]: \"The transaction message expected the transaction to have $signerAddressesLength signatures, got $signaturesLength.\",\n  [SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING]: \"Transaction is missing signatures for addresses: $addresses.\",\n  [SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE]: \"Transaction version must be in the range [0, 127]. `$actualVersion` given\"\n};\n\n// src/message-formatter.ts\nvar START_INDEX = \"i\";\nvar TYPE = \"t\";\nfunction getHumanReadableErrorMessage(code, context = {}) {\n  const messageFormatString = SolanaErrorMessages[code];\n  if (messageFormatString.length === 0) {\n    return \"\";\n  }\n  let state;\n  function commitStateUpTo(endIndex) {\n    if (state[TYPE] === 2 /* Variable */) {\n      const variableName = messageFormatString.slice(state[START_INDEX] + 1, endIndex);\n      fragments.push(\n        variableName in context ? (\n          // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          `${context[variableName]}`\n        ) : `$${variableName}`\n      );\n    } else if (state[TYPE] === 1 /* Text */) {\n      fragments.push(messageFormatString.slice(state[START_INDEX], endIndex));\n    }\n  }\n  const fragments = [];\n  messageFormatString.split(\"\").forEach((char, ii) => {\n    if (ii === 0) {\n      state = {\n        [START_INDEX]: 0,\n        [TYPE]: messageFormatString[0] === \"\\\\\" ? 0 /* EscapeSequence */ : messageFormatString[0] === \"$\" ? 2 /* Variable */ : 1 /* Text */\n      };\n      return;\n    }\n    let nextState;\n    switch (state[TYPE]) {\n      case 0 /* EscapeSequence */:\n        nextState = { [START_INDEX]: ii, [TYPE]: 1 /* Text */ };\n        break;\n      case 1 /* Text */:\n        if (char === \"\\\\\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 0 /* EscapeSequence */ };\n        } else if (char === \"$\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 2 /* Variable */ };\n        }\n        break;\n      case 2 /* Variable */:\n        if (char === \"\\\\\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 0 /* EscapeSequence */ };\n        } else if (char === \"$\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 2 /* Variable */ };\n        } else if (!char.match(/\\w/)) {\n          nextState = { [START_INDEX]: ii, [TYPE]: 1 /* Text */ };\n        }\n        break;\n    }\n    if (nextState) {\n      if (state !== nextState) {\n        commitStateUpTo(ii);\n      }\n      state = nextState;\n    }\n  });\n  commitStateUpTo();\n  return fragments.join(\"\");\n}\nfunction getErrorMessage(code, context = {}) {\n  if (process.env.NODE_ENV !== \"production\") {\n    return getHumanReadableErrorMessage(code, context);\n  } else {\n    let decodingAdviceMessage = `Solana error #${code}; Decode this error by running \\`npx @solana/errors decode -- ${code}`;\n    if (Object.keys(context).length) {\n      decodingAdviceMessage += ` '${encodeContextObject(context)}'`;\n    }\n    return `${decodingAdviceMessage}\\``;\n  }\n}\n\n// src/error.ts\nfunction isSolanaError(e, code) {\n  const isSolanaError2 = e instanceof Error && e.name === \"SolanaError\";\n  if (isSolanaError2) {\n    if (code !== void 0) {\n      return e.context.__code === code;\n    }\n    return true;\n  }\n  return false;\n}\nvar SolanaError = class extends Error {\n  /**\n   * Indicates the root cause of this {@link SolanaError}, if any.\n   *\n   * For example, a transaction error might have an instruction error as its root cause. In this\n   * case, you will be able to access the instruction error on the transaction error as `cause`.\n   */\n  cause = this.cause;\n  /**\n   * Contains context that can assist in understanding or recovering from a {@link SolanaError}.\n   */\n  context;\n  constructor(...[code, contextAndErrorOptions]) {\n    let context;\n    let errorOptions;\n    if (contextAndErrorOptions) {\n      const { cause, ...contextRest } = contextAndErrorOptions;\n      if (cause) {\n        errorOptions = { cause };\n      }\n      if (Object.keys(contextRest).length > 0) {\n        context = contextRest;\n      }\n    }\n    const message = getErrorMessage(code, context);\n    super(message, errorOptions);\n    this.context = {\n      __code: code,\n      ...context\n    };\n    this.name = \"SolanaError\";\n  }\n};\n\n// src/stack-trace.ts\nfunction safeCaptureStackTrace(...args) {\n  if (\"captureStackTrace\" in Error && typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(...args);\n  }\n}\n\n// src/rpc-enum-errors.ts\nfunction getSolanaErrorFromRpcError({ errorCodeBaseOffset, getErrorContext, orderedErrorNames, rpcEnumError }, constructorOpt) {\n  let rpcErrorName;\n  let rpcErrorContext;\n  if (typeof rpcEnumError === \"string\") {\n    rpcErrorName = rpcEnumError;\n  } else {\n    rpcErrorName = Object.keys(rpcEnumError)[0];\n    rpcErrorContext = rpcEnumError[rpcErrorName];\n  }\n  const codeOffset = orderedErrorNames.indexOf(rpcErrorName);\n  const errorCode = errorCodeBaseOffset + codeOffset;\n  const errorContext = getErrorContext(errorCode, rpcErrorName, rpcErrorContext);\n  const err = new SolanaError(errorCode, errorContext);\n  safeCaptureStackTrace(err, constructorOpt);\n  return err;\n}\n\n// src/instruction-error.ts\nvar ORDERED_ERROR_NAMES = [\n  // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/program/src/instruction.rs\n  // If this list ever gets too large, consider implementing a compression strategy like this:\n  // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n  \"GenericError\",\n  \"InvalidArgument\",\n  \"InvalidInstructionData\",\n  \"InvalidAccountData\",\n  \"AccountDataTooSmall\",\n  \"InsufficientFunds\",\n  \"IncorrectProgramId\",\n  \"MissingRequiredSignature\",\n  \"AccountAlreadyInitialized\",\n  \"UninitializedAccount\",\n  \"UnbalancedInstruction\",\n  \"ModifiedProgramId\",\n  \"ExternalAccountLamportSpend\",\n  \"ExternalAccountDataModified\",\n  \"ReadonlyLamportChange\",\n  \"ReadonlyDataModified\",\n  \"DuplicateAccountIndex\",\n  \"ExecutableModified\",\n  \"RentEpochModified\",\n  \"NotEnoughAccountKeys\",\n  \"AccountDataSizeChanged\",\n  \"AccountNotExecutable\",\n  \"AccountBorrowFailed\",\n  \"AccountBorrowOutstanding\",\n  \"DuplicateAccountOutOfSync\",\n  \"Custom\",\n  \"InvalidError\",\n  \"ExecutableDataModified\",\n  \"ExecutableLamportChange\",\n  \"ExecutableAccountNotRentExempt\",\n  \"UnsupportedProgramId\",\n  \"CallDepth\",\n  \"MissingAccount\",\n  \"ReentrancyNotAllowed\",\n  \"MaxSeedLengthExceeded\",\n  \"InvalidSeeds\",\n  \"InvalidRealloc\",\n  \"ComputationalBudgetExceeded\",\n  \"PrivilegeEscalation\",\n  \"ProgramEnvironmentSetupFailure\",\n  \"ProgramFailedToComplete\",\n  \"ProgramFailedToCompile\",\n  \"Immutable\",\n  \"IncorrectAuthority\",\n  \"BorshIoError\",\n  \"AccountNotRentExempt\",\n  \"InvalidAccountOwner\",\n  \"ArithmeticOverflow\",\n  \"UnsupportedSysvar\",\n  \"IllegalOwner\",\n  \"MaxAccountsDataAllocationsExceeded\",\n  \"MaxAccountsExceeded\",\n  \"MaxInstructionTraceLengthExceeded\",\n  \"BuiltinProgramsMustConsumeComputeUnits\"\n];\nfunction getSolanaErrorFromInstructionError(index, instructionError) {\n  const numberIndex = Number(index);\n  return getSolanaErrorFromRpcError(\n    {\n      errorCodeBaseOffset: 4615001,\n      getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n        if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN) {\n          return {\n            errorName: rpcErrorName,\n            index: numberIndex,\n            ...rpcErrorContext !== void 0 ? { instructionErrorContext: rpcErrorContext } : null\n          };\n        } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM) {\n          return {\n            code: Number(rpcErrorContext),\n            index: numberIndex\n          };\n        } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR) {\n          return {\n            encodedData: rpcErrorContext,\n            index: numberIndex\n          };\n        }\n        return { index: numberIndex };\n      },\n      orderedErrorNames: ORDERED_ERROR_NAMES,\n      rpcEnumError: instructionError\n    },\n    getSolanaErrorFromInstructionError\n  );\n}\n\n// src/transaction-error.ts\nvar ORDERED_ERROR_NAMES2 = [\n  // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/src/transaction/error.rs\n  // If this list ever gets too large, consider implementing a compression strategy like this:\n  // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n  \"AccountInUse\",\n  \"AccountLoadedTwice\",\n  \"AccountNotFound\",\n  \"ProgramAccountNotFound\",\n  \"InsufficientFundsForFee\",\n  \"InvalidAccountForFee\",\n  \"AlreadyProcessed\",\n  \"BlockhashNotFound\",\n  // `InstructionError` intentionally omitted; delegated to `getSolanaErrorFromInstructionError`\n  \"CallChainTooDeep\",\n  \"MissingSignatureForFee\",\n  \"InvalidAccountIndex\",\n  \"SignatureFailure\",\n  \"InvalidProgramForExecution\",\n  \"SanitizeFailure\",\n  \"ClusterMaintenance\",\n  \"AccountBorrowOutstanding\",\n  \"WouldExceedMaxBlockCostLimit\",\n  \"UnsupportedVersion\",\n  \"InvalidWritableAccount\",\n  \"WouldExceedMaxAccountCostLimit\",\n  \"WouldExceedAccountDataBlockLimit\",\n  \"TooManyAccountLocks\",\n  \"AddressLookupTableNotFound\",\n  \"InvalidAddressLookupTableOwner\",\n  \"InvalidAddressLookupTableData\",\n  \"InvalidAddressLookupTableIndex\",\n  \"InvalidRentPayingAccount\",\n  \"WouldExceedMaxVoteCostLimit\",\n  \"WouldExceedAccountDataTotalLimit\",\n  \"DuplicateInstruction\",\n  \"InsufficientFundsForRent\",\n  \"MaxLoadedAccountsDataSizeExceeded\",\n  \"InvalidLoadedAccountsDataSizeLimit\",\n  \"ResanitizationNeeded\",\n  \"ProgramExecutionTemporarilyRestricted\",\n  \"UnbalancedTransaction\"\n];\nfunction getSolanaErrorFromTransactionError(transactionError) {\n  if (typeof transactionError === \"object\" && \"InstructionError\" in transactionError) {\n    return getSolanaErrorFromInstructionError(\n      ...transactionError.InstructionError\n    );\n  }\n  return getSolanaErrorFromRpcError(\n    {\n      errorCodeBaseOffset: 7050001,\n      getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n        if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN) {\n          return {\n            errorName: rpcErrorName,\n            ...rpcErrorContext !== void 0 ? { transactionErrorContext: rpcErrorContext } : null\n          };\n        } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION) {\n          return {\n            index: Number(rpcErrorContext)\n          };\n        } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT || errorCode === SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED) {\n          return {\n            accountIndex: Number(rpcErrorContext.account_index)\n          };\n        }\n      },\n      orderedErrorNames: ORDERED_ERROR_NAMES2,\n      rpcEnumError: transactionError\n    },\n    getSolanaErrorFromTransactionError\n  );\n}\n\n// src/json-rpc-error.ts\nfunction getSolanaErrorFromJsonRpcError(putativeErrorResponse) {\n  let out;\n  if (isRpcErrorResponse(putativeErrorResponse)) {\n    const { code: rawCode, data, message } = putativeErrorResponse;\n    const code = Number(rawCode);\n    if (code === SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE) {\n      const { err, ...preflightErrorContext } = data;\n      const causeObject = err ? { cause: getSolanaErrorFromTransactionError(err) } : null;\n      out = new SolanaError(SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE, {\n        ...preflightErrorContext,\n        ...causeObject\n      });\n    } else {\n      let errorContext;\n      switch (code) {\n        case SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR:\n        case SOLANA_ERROR__JSON_RPC__INVALID_PARAMS:\n        case SOLANA_ERROR__JSON_RPC__INVALID_REQUEST:\n        case SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND:\n        case SOLANA_ERROR__JSON_RPC__PARSE_ERROR:\n        case SOLANA_ERROR__JSON_RPC__SCAN_ERROR:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:\n          errorContext = { __serverMessage: message };\n          break;\n        default:\n          if (typeof data === \"object\" && !Array.isArray(data)) {\n            errorContext = data;\n          }\n      }\n      out = new SolanaError(code, errorContext);\n    }\n  } else {\n    const message = typeof putativeErrorResponse === \"object\" && putativeErrorResponse !== null && \"message\" in putativeErrorResponse && typeof putativeErrorResponse.message === \"string\" ? putativeErrorResponse.message : \"Malformed JSON-RPC error with no message attribute\";\n    out = new SolanaError(SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR, { error: putativeErrorResponse, message });\n  }\n  safeCaptureStackTrace(out, getSolanaErrorFromJsonRpcError);\n  return out;\n}\nfunction isRpcErrorResponse(value) {\n  return typeof value === \"object\" && value !== null && \"code\" in value && \"message\" in value && (typeof value.code === \"number\" || typeof value.code === \"bigint\") && typeof value.message === \"string\";\n}\n\nexport { SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND, SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED, SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT, SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT, SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND, SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED, SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS, SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH, SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY, SOLANA_ERROR__ADDRESSES__INVALID_OFF_CURVE_ADDRESS, SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE, SOLANA_ERROR__ADDRESSES__MALFORMED_PDA, SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED, SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED, SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE, SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER, SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED, SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS, SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL, SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH, SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE, SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE, SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, SOLANA_ERROR__CODECS__INVALID_CONSTANT, SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT, SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT, SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT, SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS, SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE, SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES, SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE, SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT, SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW, SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS, SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH, SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM, SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX, SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND, SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER, SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE, SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY, SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT, SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE, SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS, SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE, SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE, SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED, SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION, SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT, SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN, SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR, SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS, SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA, SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH, SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH, SOLANA_ERROR__INVALID_NONCE, SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING, SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED, SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE, SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_STATE_MISSING, SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE, SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR, SOLANA_ERROR__JSON_RPC__INVALID_PARAMS, SOLANA_ERROR__JSON_RPC__INVALID_REQUEST, SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND, SOLANA_ERROR__JSON_RPC__PARSE_ERROR, SOLANA_ERROR__JSON_RPC__SCAN_ERROR, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION, SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH, SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH, SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH, SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY, SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE, SOLANA_ERROR__MALFORMED_BIGINT_STRING, SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR, SOLANA_ERROR__MALFORMED_NUMBER_STRING, SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CLOSED_BEFORE_MESSAGE_BUFFERED, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CONNECTION_CLOSED, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT, SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID, SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD, SOLANA_ERROR__RPC__INTEGER_OVERFLOW, SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR, SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN, SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS, SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER, SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS, SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING, SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY, SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT, SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED, SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP, SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE, SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION, SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT, SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED, SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED, SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED, SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE, SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE, SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS, SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION, SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN, SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT, SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION, SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING, SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES, SOLANA_ERROR__TRANSACTION__EXCEEDS_SIZE_LIMIT, SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME, SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND, SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT, SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT, SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING, SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING, SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE, SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING, SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES, SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE, SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH, SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING, SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE, SolanaError, getSolanaErrorFromInstructionError, getSolanaErrorFromJsonRpcError, getSolanaErrorFromTransactionError, isSolanaError, safeCaptureStackTrace };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","import { SolanaError, SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH, SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES, SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL } from '@solana/errors';\n\n// src/add-codec-sentinel.ts\n\n// src/bytes.ts\nvar mergeBytes = (byteArrays) => {\n  const nonEmptyByteArrays = byteArrays.filter((arr) => arr.length);\n  if (nonEmptyByteArrays.length === 0) {\n    return byteArrays.length ? byteArrays[0] : new Uint8Array();\n  }\n  if (nonEmptyByteArrays.length === 1) {\n    return nonEmptyByteArrays[0];\n  }\n  const totalLength = nonEmptyByteArrays.reduce((total, arr) => total + arr.length, 0);\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  nonEmptyByteArrays.forEach((arr) => {\n    result.set(arr, offset);\n    offset += arr.length;\n  });\n  return result;\n};\nvar padBytes = (bytes, length) => {\n  if (bytes.length >= length) return bytes;\n  const paddedBytes = new Uint8Array(length).fill(0);\n  paddedBytes.set(bytes);\n  return paddedBytes;\n};\nvar fixBytes = (bytes, length) => padBytes(bytes.length <= length ? bytes : bytes.slice(0, length), length);\nfunction containsBytes(data, bytes, offset) {\n  const slice = offset === 0 && data.length === bytes.length ? data : data.slice(offset, offset + bytes.length);\n  if (slice.length !== bytes.length) return false;\n  return bytes.every((b, i) => b === slice[i]);\n}\nfunction getEncodedSize(value, encoder) {\n  return \"fixedSize\" in encoder ? encoder.fixedSize : encoder.getSizeFromValue(value);\n}\nfunction createEncoder(encoder) {\n  return Object.freeze({\n    ...encoder,\n    encode: (value) => {\n      const bytes = new Uint8Array(getEncodedSize(value, encoder));\n      encoder.write(value, bytes, 0);\n      return bytes;\n    }\n  });\n}\nfunction createDecoder(decoder) {\n  return Object.freeze({\n    ...decoder,\n    decode: (bytes, offset = 0) => decoder.read(bytes, offset)[0]\n  });\n}\nfunction createCodec(codec) {\n  return Object.freeze({\n    ...codec,\n    decode: (bytes, offset = 0) => codec.read(bytes, offset)[0],\n    encode: (value) => {\n      const bytes = new Uint8Array(getEncodedSize(value, codec));\n      codec.write(value, bytes, 0);\n      return bytes;\n    }\n  });\n}\nfunction isFixedSize(codec) {\n  return \"fixedSize\" in codec && typeof codec.fixedSize === \"number\";\n}\nfunction assertIsFixedSize(codec) {\n  if (!isFixedSize(codec)) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH);\n  }\n}\nfunction isVariableSize(codec) {\n  return !isFixedSize(codec);\n}\nfunction assertIsVariableSize(codec) {\n  if (!isVariableSize(codec)) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH);\n  }\n}\nfunction combineCodec(encoder, decoder) {\n  if (isFixedSize(encoder) !== isFixedSize(decoder)) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH);\n  }\n  if (isFixedSize(encoder) && isFixedSize(decoder) && encoder.fixedSize !== decoder.fixedSize) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, {\n      decoderFixedSize: decoder.fixedSize,\n      encoderFixedSize: encoder.fixedSize\n    });\n  }\n  if (!isFixedSize(encoder) && !isFixedSize(decoder) && encoder.maxSize !== decoder.maxSize) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, {\n      decoderMaxSize: decoder.maxSize,\n      encoderMaxSize: encoder.maxSize\n    });\n  }\n  return {\n    ...decoder,\n    ...encoder,\n    decode: decoder.decode,\n    encode: encoder.encode,\n    read: decoder.read,\n    write: encoder.write\n  };\n}\n\n// src/add-codec-sentinel.ts\nfunction addEncoderSentinel(encoder, sentinel) {\n  const write = (value, bytes, offset) => {\n    const encoderBytes = encoder.encode(value);\n    if (findSentinelIndex(encoderBytes, sentinel) >= 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL, {\n        encodedBytes: encoderBytes,\n        hexEncodedBytes: hexBytes(encoderBytes),\n        hexSentinel: hexBytes(sentinel),\n        sentinel\n      });\n    }\n    bytes.set(encoderBytes, offset);\n    offset += encoderBytes.length;\n    bytes.set(sentinel, offset);\n    offset += sentinel.length;\n    return offset;\n  };\n  if (isFixedSize(encoder)) {\n    return createEncoder({ ...encoder, fixedSize: encoder.fixedSize + sentinel.length, write });\n  }\n  return createEncoder({\n    ...encoder,\n    ...encoder.maxSize != null ? { maxSize: encoder.maxSize + sentinel.length } : {},\n    getSizeFromValue: (value) => encoder.getSizeFromValue(value) + sentinel.length,\n    write\n  });\n}\nfunction addDecoderSentinel(decoder, sentinel) {\n  const read = (bytes, offset) => {\n    const candidateBytes = offset === 0 ? bytes : bytes.slice(offset);\n    const sentinelIndex = findSentinelIndex(candidateBytes, sentinel);\n    if (sentinelIndex === -1) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES, {\n        decodedBytes: candidateBytes,\n        hexDecodedBytes: hexBytes(candidateBytes),\n        hexSentinel: hexBytes(sentinel),\n        sentinel\n      });\n    }\n    const preSentinelBytes = candidateBytes.slice(0, sentinelIndex);\n    return [decoder.decode(preSentinelBytes), offset + preSentinelBytes.length + sentinel.length];\n  };\n  if (isFixedSize(decoder)) {\n    return createDecoder({ ...decoder, fixedSize: decoder.fixedSize + sentinel.length, read });\n  }\n  return createDecoder({\n    ...decoder,\n    ...decoder.maxSize != null ? { maxSize: decoder.maxSize + sentinel.length } : {},\n    read\n  });\n}\nfunction addCodecSentinel(codec, sentinel) {\n  return combineCodec(addEncoderSentinel(codec, sentinel), addDecoderSentinel(codec, sentinel));\n}\nfunction findSentinelIndex(bytes, sentinel) {\n  return bytes.findIndex((byte, index, arr) => {\n    if (sentinel.length === 1) return byte === sentinel[0];\n    return containsBytes(arr, sentinel, index);\n  });\n}\nfunction hexBytes(bytes) {\n  return bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n}\nfunction assertByteArrayIsNotEmptyForCodec(codecDescription, bytes, offset = 0) {\n  if (bytes.length - offset <= 0) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, {\n      codecDescription\n    });\n  }\n}\nfunction assertByteArrayHasEnoughBytesForCodec(codecDescription, expected, bytes, offset = 0) {\n  const bytesLength = bytes.length - offset;\n  if (bytesLength < expected) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, {\n      bytesLength,\n      codecDescription,\n      expected\n    });\n  }\n}\nfunction assertByteArrayOffsetIsNotOutOfRange(codecDescription, offset, bytesLength) {\n  if (offset < 0 || offset > bytesLength) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, {\n      bytesLength,\n      codecDescription,\n      offset\n    });\n  }\n}\n\n// src/add-codec-size-prefix.ts\nfunction addEncoderSizePrefix(encoder, prefix) {\n  const write = (value, bytes, offset) => {\n    const encoderBytes = encoder.encode(value);\n    offset = prefix.write(encoderBytes.length, bytes, offset);\n    bytes.set(encoderBytes, offset);\n    return offset + encoderBytes.length;\n  };\n  if (isFixedSize(prefix) && isFixedSize(encoder)) {\n    return createEncoder({ ...encoder, fixedSize: prefix.fixedSize + encoder.fixedSize, write });\n  }\n  const prefixMaxSize = isFixedSize(prefix) ? prefix.fixedSize : prefix.maxSize ?? null;\n  const encoderMaxSize = isFixedSize(encoder) ? encoder.fixedSize : encoder.maxSize ?? null;\n  const maxSize = prefixMaxSize !== null && encoderMaxSize !== null ? prefixMaxSize + encoderMaxSize : null;\n  return createEncoder({\n    ...encoder,\n    ...maxSize !== null ? { maxSize } : {},\n    getSizeFromValue: (value) => {\n      const encoderSize = getEncodedSize(value, encoder);\n      return getEncodedSize(encoderSize, prefix) + encoderSize;\n    },\n    write\n  });\n}\nfunction addDecoderSizePrefix(decoder, prefix) {\n  const read = (bytes, offset) => {\n    const [bigintSize, decoderOffset] = prefix.read(bytes, offset);\n    const size = Number(bigintSize);\n    offset = decoderOffset;\n    if (offset > 0 || bytes.length > size) {\n      bytes = bytes.slice(offset, offset + size);\n    }\n    assertByteArrayHasEnoughBytesForCodec(\"addDecoderSizePrefix\", size, bytes);\n    return [decoder.decode(bytes), offset + size];\n  };\n  if (isFixedSize(prefix) && isFixedSize(decoder)) {\n    return createDecoder({ ...decoder, fixedSize: prefix.fixedSize + decoder.fixedSize, read });\n  }\n  const prefixMaxSize = isFixedSize(prefix) ? prefix.fixedSize : prefix.maxSize ?? null;\n  const decoderMaxSize = isFixedSize(decoder) ? decoder.fixedSize : decoder.maxSize ?? null;\n  const maxSize = prefixMaxSize !== null && decoderMaxSize !== null ? prefixMaxSize + decoderMaxSize : null;\n  return createDecoder({ ...decoder, ...maxSize !== null ? { maxSize } : {}, read });\n}\nfunction addCodecSizePrefix(codec, prefix) {\n  return combineCodec(addEncoderSizePrefix(codec, prefix), addDecoderSizePrefix(codec, prefix));\n}\n\n// src/fix-codec-size.ts\nfunction fixEncoderSize(encoder, fixedBytes) {\n  return createEncoder({\n    fixedSize: fixedBytes,\n    write: (value, bytes, offset) => {\n      const variableByteArray = encoder.encode(value);\n      const fixedByteArray = variableByteArray.length > fixedBytes ? variableByteArray.slice(0, fixedBytes) : variableByteArray;\n      bytes.set(fixedByteArray, offset);\n      return offset + fixedBytes;\n    }\n  });\n}\nfunction fixDecoderSize(decoder, fixedBytes) {\n  return createDecoder({\n    fixedSize: fixedBytes,\n    read: (bytes, offset) => {\n      assertByteArrayHasEnoughBytesForCodec(\"fixCodecSize\", fixedBytes, bytes, offset);\n      if (offset > 0 || bytes.length > fixedBytes) {\n        bytes = bytes.slice(offset, offset + fixedBytes);\n      }\n      if (isFixedSize(decoder)) {\n        bytes = fixBytes(bytes, decoder.fixedSize);\n      }\n      const [value] = decoder.read(bytes, 0);\n      return [value, offset + fixedBytes];\n    }\n  });\n}\nfunction fixCodecSize(codec, fixedBytes) {\n  return combineCodec(fixEncoderSize(codec, fixedBytes), fixDecoderSize(codec, fixedBytes));\n}\n\n// src/offset-codec.ts\nfunction offsetEncoder(encoder, config) {\n  return createEncoder({\n    ...encoder,\n    write: (value, bytes, preOffset) => {\n      const wrapBytes = (offset) => modulo(offset, bytes.length);\n      const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetEncoder\", newPreOffset, bytes.length);\n      const postOffset = encoder.write(value, bytes, newPreOffset);\n      const newPostOffset = config.postOffset ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes }) : postOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetEncoder\", newPostOffset, bytes.length);\n      return newPostOffset;\n    }\n  });\n}\nfunction offsetDecoder(decoder, config) {\n  return createDecoder({\n    ...decoder,\n    read: (bytes, preOffset) => {\n      const wrapBytes = (offset) => modulo(offset, bytes.length);\n      const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetDecoder\", newPreOffset, bytes.length);\n      const [value, postOffset] = decoder.read(bytes, newPreOffset);\n      const newPostOffset = config.postOffset ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes }) : postOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetDecoder\", newPostOffset, bytes.length);\n      return [value, newPostOffset];\n    }\n  });\n}\nfunction offsetCodec(codec, config) {\n  return combineCodec(offsetEncoder(codec, config), offsetDecoder(codec, config));\n}\nfunction modulo(dividend, divisor) {\n  if (divisor === 0) return 0;\n  return (dividend % divisor + divisor) % divisor;\n}\nfunction resizeEncoder(encoder, resize) {\n  if (isFixedSize(encoder)) {\n    const fixedSize = resize(encoder.fixedSize);\n    if (fixedSize < 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n        bytesLength: fixedSize,\n        codecDescription: \"resizeEncoder\"\n      });\n    }\n    return createEncoder({ ...encoder, fixedSize });\n  }\n  return createEncoder({\n    ...encoder,\n    getSizeFromValue: (value) => {\n      const newSize = resize(encoder.getSizeFromValue(value));\n      if (newSize < 0) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n          bytesLength: newSize,\n          codecDescription: \"resizeEncoder\"\n        });\n      }\n      return newSize;\n    }\n  });\n}\nfunction resizeDecoder(decoder, resize) {\n  if (isFixedSize(decoder)) {\n    const fixedSize = resize(decoder.fixedSize);\n    if (fixedSize < 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n        bytesLength: fixedSize,\n        codecDescription: \"resizeDecoder\"\n      });\n    }\n    return createDecoder({ ...decoder, fixedSize });\n  }\n  return decoder;\n}\nfunction resizeCodec(codec, resize) {\n  return combineCodec(resizeEncoder(codec, resize), resizeDecoder(codec, resize));\n}\n\n// src/pad-codec.ts\nfunction padLeftEncoder(encoder, offset) {\n  return offsetEncoder(\n    resizeEncoder(encoder, (size) => size + offset),\n    { preOffset: ({ preOffset }) => preOffset + offset }\n  );\n}\nfunction padRightEncoder(encoder, offset) {\n  return offsetEncoder(\n    resizeEncoder(encoder, (size) => size + offset),\n    { postOffset: ({ postOffset }) => postOffset + offset }\n  );\n}\nfunction padLeftDecoder(decoder, offset) {\n  return offsetDecoder(\n    resizeDecoder(decoder, (size) => size + offset),\n    { preOffset: ({ preOffset }) => preOffset + offset }\n  );\n}\nfunction padRightDecoder(decoder, offset) {\n  return offsetDecoder(\n    resizeDecoder(decoder, (size) => size + offset),\n    { postOffset: ({ postOffset }) => postOffset + offset }\n  );\n}\nfunction padLeftCodec(codec, offset) {\n  return combineCodec(padLeftEncoder(codec, offset), padLeftDecoder(codec, offset));\n}\nfunction padRightCodec(codec, offset) {\n  return combineCodec(padRightEncoder(codec, offset), padRightDecoder(codec, offset));\n}\n\n// src/reverse-codec.ts\nfunction copySourceToTargetInReverse(source, target_WILL_MUTATE, sourceOffset, sourceLength, targetOffset = 0) {\n  while (sourceOffset < --sourceLength) {\n    const leftValue = source[sourceOffset];\n    target_WILL_MUTATE[sourceOffset + targetOffset] = source[sourceLength];\n    target_WILL_MUTATE[sourceLength + targetOffset] = leftValue;\n    sourceOffset++;\n  }\n  if (sourceOffset === sourceLength) {\n    target_WILL_MUTATE[sourceOffset + targetOffset] = source[sourceOffset];\n  }\n}\nfunction reverseEncoder(encoder) {\n  assertIsFixedSize(encoder);\n  return createEncoder({\n    ...encoder,\n    write: (value, bytes, offset) => {\n      const newOffset = encoder.write(value, bytes, offset);\n      copySourceToTargetInReverse(\n        bytes,\n        bytes,\n        offset,\n        offset + encoder.fixedSize\n      );\n      return newOffset;\n    }\n  });\n}\nfunction reverseDecoder(decoder) {\n  assertIsFixedSize(decoder);\n  return createDecoder({\n    ...decoder,\n    read: (bytes, offset) => {\n      const reversedBytes = bytes.slice();\n      copySourceToTargetInReverse(\n        bytes,\n        reversedBytes,\n        offset,\n        offset + decoder.fixedSize\n      );\n      return decoder.read(reversedBytes, offset);\n    }\n  });\n}\nfunction reverseCodec(codec) {\n  return combineCodec(reverseEncoder(codec), reverseDecoder(codec));\n}\n\n// src/transform-codec.ts\nfunction transformEncoder(encoder, unmap) {\n  return createEncoder({\n    ...isVariableSize(encoder) ? { ...encoder, getSizeFromValue: (value) => encoder.getSizeFromValue(unmap(value)) } : encoder,\n    write: (value, bytes, offset) => encoder.write(unmap(value), bytes, offset)\n  });\n}\nfunction transformDecoder(decoder, map) {\n  return createDecoder({\n    ...decoder,\n    read: (bytes, offset) => {\n      const [value, newOffset] = decoder.read(bytes, offset);\n      return [map(value, bytes, offset), newOffset];\n    }\n  });\n}\nfunction transformCodec(codec, unmap, map) {\n  return createCodec({\n    ...transformEncoder(codec, unmap),\n    read: map ? transformDecoder(codec, map).read : codec.read\n  });\n}\n\nexport { addCodecSentinel, addCodecSizePrefix, addDecoderSentinel, addDecoderSizePrefix, addEncoderSentinel, addEncoderSizePrefix, assertByteArrayHasEnoughBytesForCodec, assertByteArrayIsNotEmptyForCodec, assertByteArrayOffsetIsNotOutOfRange, assertIsFixedSize, assertIsVariableSize, combineCodec, containsBytes, createCodec, createDecoder, createEncoder, fixBytes, fixCodecSize, fixDecoderSize, fixEncoderSize, getEncodedSize, isFixedSize, isVariableSize, mergeBytes, offsetCodec, offsetDecoder, offsetEncoder, padBytes, padLeftCodec, padLeftDecoder, padLeftEncoder, padRightCodec, padRightDecoder, padRightEncoder, resizeCodec, resizeDecoder, resizeEncoder, reverseCodec, reverseDecoder, reverseEncoder, transformCodec, transformDecoder, transformEncoder };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","import { SolanaError, SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE } from '@solana/errors';\nimport { combineCodec, createDecoder, createEncoder, assertByteArrayIsNotEmptyForCodec, assertByteArrayHasEnoughBytesForCodec } from '@solana/codecs-core';\n\n// src/assertions.ts\nfunction assertNumberIsBetweenForCodec(codecDescription, min, max, value) {\n  if (value < min || value > max) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, {\n      codecDescription,\n      max,\n      min,\n      value\n    });\n  }\n}\n\n// src/common.ts\nvar Endian = /* @__PURE__ */ ((Endian2) => {\n  Endian2[Endian2[\"Little\"] = 0] = \"Little\";\n  Endian2[Endian2[\"Big\"] = 1] = \"Big\";\n  return Endian2;\n})(Endian || {});\nfunction isLittleEndian(config) {\n  return config?.endian === 1 /* Big */ ? false : true;\n}\nfunction numberEncoderFactory(input) {\n  return createEncoder({\n    fixedSize: input.size,\n    write(value, bytes, offset) {\n      if (input.range) {\n        assertNumberIsBetweenForCodec(input.name, input.range[0], input.range[1], value);\n      }\n      const arrayBuffer = new ArrayBuffer(input.size);\n      input.set(new DataView(arrayBuffer), value, isLittleEndian(input.config));\n      bytes.set(new Uint8Array(arrayBuffer), offset);\n      return offset + input.size;\n    }\n  });\n}\nfunction numberDecoderFactory(input) {\n  return createDecoder({\n    fixedSize: input.size,\n    read(bytes, offset = 0) {\n      assertByteArrayIsNotEmptyForCodec(input.name, bytes, offset);\n      assertByteArrayHasEnoughBytesForCodec(input.name, input.size, bytes, offset);\n      const view = new DataView(toArrayBuffer(bytes, offset, input.size));\n      return [input.get(view, isLittleEndian(input.config)), offset + input.size];\n    }\n  });\n}\nfunction toArrayBuffer(bytes, offset, length) {\n  const bytesOffset = bytes.byteOffset + (offset ?? 0);\n  const bytesLength = length ?? bytes.byteLength;\n  return bytes.buffer.slice(bytesOffset, bytesOffset + bytesLength);\n}\n\n// src/f32.ts\nvar getF32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"f32\",\n  set: (view, value, le) => view.setFloat32(0, Number(value), le),\n  size: 4\n});\nvar getF32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getFloat32(0, le),\n  name: \"f32\",\n  size: 4\n});\nvar getF32Codec = (config = {}) => combineCodec(getF32Encoder(config), getF32Decoder(config));\nvar getF64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"f64\",\n  set: (view, value, le) => view.setFloat64(0, Number(value), le),\n  size: 8\n});\nvar getF64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getFloat64(0, le),\n  name: \"f64\",\n  size: 8\n});\nvar getF64Codec = (config = {}) => combineCodec(getF64Encoder(config), getF64Decoder(config));\nvar getI128Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i128\",\n  range: [-BigInt(\"0x7fffffffffffffffffffffffffffffff\") - 1n, BigInt(\"0x7fffffffffffffffffffffffffffffff\")],\n  set: (view, value, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const rightMask = 0xffffffffffffffffn;\n    view.setBigInt64(leftOffset, BigInt(value) >> 64n, le);\n    view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n  },\n  size: 16\n});\nvar getI128Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const left = view.getBigInt64(leftOffset, le);\n    const right = view.getBigUint64(rightOffset, le);\n    return (left << 64n) + right;\n  },\n  name: \"i128\",\n  size: 16\n});\nvar getI128Codec = (config = {}) => combineCodec(getI128Encoder(config), getI128Decoder(config));\nvar getI16Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i16\",\n  range: [-Number(\"0x7fff\") - 1, Number(\"0x7fff\")],\n  set: (view, value, le) => view.setInt16(0, Number(value), le),\n  size: 2\n});\nvar getI16Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getInt16(0, le),\n  name: \"i16\",\n  size: 2\n});\nvar getI16Codec = (config = {}) => combineCodec(getI16Encoder(config), getI16Decoder(config));\nvar getI32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i32\",\n  range: [-Number(\"0x7fffffff\") - 1, Number(\"0x7fffffff\")],\n  set: (view, value, le) => view.setInt32(0, Number(value), le),\n  size: 4\n});\nvar getI32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getInt32(0, le),\n  name: \"i32\",\n  size: 4\n});\nvar getI32Codec = (config = {}) => combineCodec(getI32Encoder(config), getI32Decoder(config));\nvar getI64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i64\",\n  range: [-BigInt(\"0x7fffffffffffffff\") - 1n, BigInt(\"0x7fffffffffffffff\")],\n  set: (view, value, le) => view.setBigInt64(0, BigInt(value), le),\n  size: 8\n});\nvar getI64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getBigInt64(0, le),\n  name: \"i64\",\n  size: 8\n});\nvar getI64Codec = (config = {}) => combineCodec(getI64Encoder(config), getI64Decoder(config));\nvar getI8Encoder = () => numberEncoderFactory({\n  name: \"i8\",\n  range: [-Number(\"0x7f\") - 1, Number(\"0x7f\")],\n  set: (view, value) => view.setInt8(0, Number(value)),\n  size: 1\n});\nvar getI8Decoder = () => numberDecoderFactory({\n  get: (view) => view.getInt8(0),\n  name: \"i8\",\n  size: 1\n});\nvar getI8Codec = () => combineCodec(getI8Encoder(), getI8Decoder());\nvar getShortU16Encoder = () => createEncoder({\n  getSizeFromValue: (value) => {\n    if (value <= 127) return 1;\n    if (value <= 16383) return 2;\n    return 3;\n  },\n  maxSize: 3,\n  write: (value, bytes, offset) => {\n    assertNumberIsBetweenForCodec(\"shortU16\", 0, 65535, value);\n    const shortU16Bytes = [0];\n    for (let ii = 0; ; ii += 1) {\n      const alignedValue = Number(value) >> ii * 7;\n      if (alignedValue === 0) {\n        break;\n      }\n      const nextSevenBits = 127 & alignedValue;\n      shortU16Bytes[ii] = nextSevenBits;\n      if (ii > 0) {\n        shortU16Bytes[ii - 1] |= 128;\n      }\n    }\n    bytes.set(shortU16Bytes, offset);\n    return offset + shortU16Bytes.length;\n  }\n});\nvar getShortU16Decoder = () => createDecoder({\n  maxSize: 3,\n  read: (bytes, offset) => {\n    let value = 0;\n    let byteCount = 0;\n    while (++byteCount) {\n      const byteIndex = byteCount - 1;\n      const currentByte = bytes[offset + byteIndex];\n      const nextSevenBits = 127 & currentByte;\n      value |= nextSevenBits << byteIndex * 7;\n      if ((currentByte & 128) === 0) {\n        break;\n      }\n    }\n    return [value, offset + byteCount];\n  }\n});\nvar getShortU16Codec = () => combineCodec(getShortU16Encoder(), getShortU16Decoder());\nvar getU128Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u128\",\n  range: [0n, BigInt(\"0xffffffffffffffffffffffffffffffff\")],\n  set: (view, value, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const rightMask = 0xffffffffffffffffn;\n    view.setBigUint64(leftOffset, BigInt(value) >> 64n, le);\n    view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n  },\n  size: 16\n});\nvar getU128Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const left = view.getBigUint64(leftOffset, le);\n    const right = view.getBigUint64(rightOffset, le);\n    return (left << 64n) + right;\n  },\n  name: \"u128\",\n  size: 16\n});\nvar getU128Codec = (config = {}) => combineCodec(getU128Encoder(config), getU128Decoder(config));\nvar getU16Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u16\",\n  range: [0, Number(\"0xffff\")],\n  set: (view, value, le) => view.setUint16(0, Number(value), le),\n  size: 2\n});\nvar getU16Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getUint16(0, le),\n  name: \"u16\",\n  size: 2\n});\nvar getU16Codec = (config = {}) => combineCodec(getU16Encoder(config), getU16Decoder(config));\nvar getU32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u32\",\n  range: [0, Number(\"0xffffffff\")],\n  set: (view, value, le) => view.setUint32(0, Number(value), le),\n  size: 4\n});\nvar getU32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getUint32(0, le),\n  name: \"u32\",\n  size: 4\n});\nvar getU32Codec = (config = {}) => combineCodec(getU32Encoder(config), getU32Decoder(config));\nvar getU64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u64\",\n  range: [0n, BigInt(\"0xffffffffffffffff\")],\n  set: (view, value, le) => view.setBigUint64(0, BigInt(value), le),\n  size: 8\n});\nvar getU64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getBigUint64(0, le),\n  name: \"u64\",\n  size: 8\n});\nvar getU64Codec = (config = {}) => combineCodec(getU64Encoder(config), getU64Decoder(config));\nvar getU8Encoder = () => numberEncoderFactory({\n  name: \"u8\",\n  range: [0, Number(\"0xff\")],\n  set: (view, value) => view.setUint8(0, Number(value)),\n  size: 1\n});\nvar getU8Decoder = () => numberDecoderFactory({\n  get: (view) => view.getUint8(0),\n  name: \"u8\",\n  size: 1\n});\nvar getU8Codec = () => combineCodec(getU8Encoder(), getU8Decoder());\n\nexport { Endian, assertNumberIsBetweenForCodec, getF32Codec, getF32Decoder, getF32Encoder, getF64Codec, getF64Decoder, getF64Encoder, getI128Codec, getI128Decoder, getI128Encoder, getI16Codec, getI16Decoder, getI16Encoder, getI32Codec, getI32Decoder, getI32Encoder, getI64Codec, getI64Decoder, getI64Encoder, getI8Codec, getI8Decoder, getI8Encoder, getShortU16Codec, getShortU16Decoder, getShortU16Encoder, getU128Codec, getU128Decoder, getU128Encoder, getU16Codec, getU16Decoder, getU16Encoder, getU32Codec, getU32Decoder, getU32Encoder, getU64Codec, getU64Decoder, getU64Encoder, getU8Codec, getU8Decoder, getU8Encoder };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n    constructor(failure, failures) {\n        let cached;\n        const { message, explanation, ...rest } = failure;\n        const { path } = failure;\n        const msg = path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`;\n        super(explanation ?? msg);\n        if (explanation != null)\n            this.cause = msg;\n        Object.assign(this, rest);\n        this.name = this.constructor.name;\n        this.failures = () => {\n            return (cached ?? (cached = [failure, ...failures()]));\n        };\n    }\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n    return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isObject(x) {\n    return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a non-array object.\n */\nfunction isNonArrayObject(x) {\n    return isObject(x) && !Array.isArray(x);\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isPlainObject(x) {\n    if (Object.prototype.toString.call(x) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(x);\n    return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\nfunction print(value) {\n    if (typeof value === 'symbol') {\n        return value.toString();\n    }\n    return typeof value === 'string' ? JSON.stringify(value) : `${value}`;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\nfunction shiftIterator(input) {\n    const { done, value } = input.next();\n    return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\nfunction toFailure(result, context, struct, value) {\n    if (result === true) {\n        return;\n    }\n    else if (result === false) {\n        result = {};\n    }\n    else if (typeof result === 'string') {\n        result = { message: result };\n    }\n    const { path, branch } = context;\n    const { type } = struct;\n    const { refinement, message = `Expected a value of type \\`${type}\\`${refinement ? ` with refinement \\`${refinement}\\`` : ''}, but received: \\`${print(value)}\\``, } = result;\n    return {\n        value,\n        type,\n        refinement,\n        key: path[path.length - 1],\n        path,\n        branch,\n        ...result,\n        message,\n    };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\nfunction* toFailures(result, context, struct, value) {\n    if (!isIterable(result)) {\n        result = [result];\n    }\n    for (const r of result) {\n        const failure = toFailure(r, context, struct, value);\n        if (failure) {\n            yield failure;\n        }\n    }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\nfunction* run(value, struct, options = {}) {\n    const { path = [], branch = [value], coerce = false, mask = false } = options;\n    const ctx = { path, branch, mask };\n    if (coerce) {\n        value = struct.coercer(value, ctx);\n    }\n    let status = 'valid';\n    for (const failure of struct.validator(value, ctx)) {\n        failure.explanation = options.message;\n        status = 'not_valid';\n        yield [failure, undefined];\n    }\n    for (let [k, v, s] of struct.entries(value, ctx)) {\n        const ts = run(v, s, {\n            path: k === undefined ? path : [...path, k],\n            branch: k === undefined ? branch : [...branch, v],\n            coerce,\n            mask,\n            message: options.message,\n        });\n        for (const t of ts) {\n            if (t[0]) {\n                status = t[0].refinement != null ? 'not_refined' : 'not_valid';\n                yield [t[0], undefined];\n            }\n            else if (coerce) {\n                v = t[1];\n                if (k === undefined) {\n                    value = v;\n                }\n                else if (value instanceof Map) {\n                    value.set(k, v);\n                }\n                else if (value instanceof Set) {\n                    value.add(v);\n                }\n                else if (isObject(value)) {\n                    if (v !== undefined || k in value)\n                        value[k] = v;\n                }\n            }\n        }\n    }\n    if (status !== 'not_valid') {\n        for (const failure of struct.refiner(value, ctx)) {\n            failure.explanation = options.message;\n            status = 'not_refined';\n            yield [failure, undefined];\n        }\n    }\n    if (status === 'valid') {\n        yield [undefined, value];\n    }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\nclass Struct {\n    constructor(props) {\n        const { type, schema, validator, refiner, coercer = (value) => value, entries = function* () { }, } = props;\n        this.type = type;\n        this.schema = schema;\n        this.entries = entries;\n        this.coercer = coercer;\n        if (validator) {\n            this.validator = (value, context) => {\n                const result = validator(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.validator = () => [];\n        }\n        if (refiner) {\n            this.refiner = (value, context) => {\n                const result = refiner(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.refiner = () => [];\n        }\n    }\n    /**\n     * Assert that a value passes the struct's validation, throwing if it doesn't.\n     */\n    assert(value, message) {\n        return assert(value, this, message);\n    }\n    /**\n     * Create a value with the struct's coercion logic, then validate it.\n     */\n    create(value, message) {\n        return create(value, this, message);\n    }\n    /**\n     * Check if a value passes the struct's validation.\n     */\n    is(value) {\n        return is(value, this);\n    }\n    /**\n     * Mask a value, coercing and validating it, but returning only the subset of\n     * properties defined by the struct's schema. Masking applies recursively to\n     * props of `object` structs only.\n     */\n    mask(value, message) {\n        return mask(value, this, message);\n    }\n    /**\n     * Validate a value with the struct's validation logic, returning a tuple\n     * representing the result.\n     *\n     * You may optionally pass `true` for the `coerce` argument to coerce\n     * the value before attempting to validate it. If you do, the result will\n     * contain the coerced result when successful. Also, `mask` will turn on\n     * masking of the unknown `object` props recursively if passed.\n     */\n    validate(value, options = {}) {\n        return validate(value, this, options);\n    }\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\nfunction assert(value, struct, message) {\n    const result = validate(value, struct, { message });\n    if (result[0]) {\n        throw result[0];\n    }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\nfunction create(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\nfunction mask(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, mask: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Check if a value passes a struct.\n */\nfunction is(value, struct) {\n    const result = validate(value, struct);\n    return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\nfunction validate(value, struct, options = {}) {\n    const tuples = run(value, struct, options);\n    const tuple = shiftIterator(tuples);\n    if (tuple[0]) {\n        const error = new StructError(tuple[0], function* () {\n            for (const t of tuples) {\n                if (t[0]) {\n                    yield t[0];\n                }\n            }\n        });\n        return [error, undefined];\n    }\n    else {\n        const v = tuple[1];\n        return [undefined, v];\n    }\n}\n\nfunction assign(...Structs) {\n    const isType = Structs[0].type === 'type';\n    const schemas = Structs.map((s) => s.schema);\n    const schema = Object.assign({}, ...schemas);\n    return isType ? type(schema) : object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\nfunction define(name, validator) {\n    return new Struct({ type: name, schema: null, validator });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\nfunction deprecated(struct, log) {\n    return new Struct({\n        ...struct,\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n        validator(value, ctx) {\n            if (value === undefined) {\n                return true;\n            }\n            else {\n                log(value, ctx);\n                return struct.validator(value, ctx);\n            }\n        },\n    });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\nfunction dynamic(fn) {\n    return new Struct({\n        type: 'dynamic',\n        schema: null,\n        *entries(value, ctx) {\n            const struct = fn(value, ctx);\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\nfunction lazy(fn) {\n    let struct;\n    return new Struct({\n        type: 'lazy',\n        schema: null,\n        *entries(value, ctx) {\n            struct ?? (struct = fn());\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\nfunction omit(struct, keys) {\n    const { schema } = struct;\n    const subschema = { ...schema };\n    for (const key of keys) {\n        delete subschema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\nfunction partial(struct) {\n    const isStruct = struct instanceof Struct;\n    const schema = isStruct ? { ...struct.schema } : { ...struct };\n    for (const key in schema) {\n        schema[key] = optional(schema[key]);\n    }\n    if (isStruct && struct.type === 'type') {\n        return type(schema);\n    }\n    return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\nfunction pick(struct, keys) {\n    const { schema } = struct;\n    const subschema = {};\n    for (const key of keys) {\n        subschema[key] = schema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\nfunction struct(name, validator) {\n    console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n    return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\nfunction any() {\n    return define('any', () => true);\n}\nfunction array(Element) {\n    return new Struct({\n        type: 'array',\n        schema: Element,\n        *entries(value) {\n            if (Element && Array.isArray(value)) {\n                for (const [i, v] of value.entries()) {\n                    yield [i, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return Array.isArray(value) ? value.slice() : value;\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array value, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a bigint.\n */\nfunction bigint() {\n    return define('bigint', (value) => {\n        return typeof value === 'bigint';\n    });\n}\n/**\n * Ensure that a value is a boolean.\n */\nfunction boolean() {\n    return define('boolean', (value) => {\n        return typeof value === 'boolean';\n    });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\nfunction date() {\n    return define('date', (value) => {\n        return ((value instanceof Date && !isNaN(value.getTime())) ||\n            `Expected a valid \\`Date\\` object, but received: ${print(value)}`);\n    });\n}\nfunction enums(values) {\n    const schema = {};\n    const description = values.map((v) => print(v)).join();\n    for (const key of values) {\n        schema[key] = key;\n    }\n    return new Struct({\n        type: 'enums',\n        schema,\n        validator(value) {\n            return (values.includes(value) ||\n                `Expected one of \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a function.\n */\nfunction func() {\n    return define('func', (value) => {\n        return (typeof value === 'function' ||\n            `Expected a function, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\nfunction instance(Class) {\n    return define('instance', (value) => {\n        return (value instanceof Class ||\n            `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an integer.\n */\nfunction integer() {\n    return define('integer', (value) => {\n        return ((typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n            `Expected an integer, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value matches all of a set of types.\n */\nfunction intersection(Structs) {\n    return new Struct({\n        type: 'intersection',\n        schema: null,\n        *entries(value, ctx) {\n            for (const S of Structs) {\n                yield* S.entries(value, ctx);\n            }\n        },\n        *validator(value, ctx) {\n            for (const S of Structs) {\n                yield* S.validator(value, ctx);\n            }\n        },\n        *refiner(value, ctx) {\n            for (const S of Structs) {\n                yield* S.refiner(value, ctx);\n            }\n        },\n    });\n}\nfunction literal(constant) {\n    const description = print(constant);\n    const t = typeof constant;\n    return new Struct({\n        type: 'literal',\n        schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n        validator(value) {\n            return (value === constant ||\n                `Expected the literal \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\nfunction map(Key, Value) {\n    return new Struct({\n        type: 'map',\n        schema: null,\n        *entries(value) {\n            if (Key && Value && value instanceof Map) {\n                for (const [k, v] of value.entries()) {\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Map ? new Map(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Map ||\n                `Expected a \\`Map\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that no value ever passes validation.\n */\nfunction never() {\n    return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\nfunction nullable(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === null || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is a number.\n */\nfunction number() {\n    return define('number', (value) => {\n        return ((typeof value === 'number' && !isNaN(value)) ||\n            `Expected a number, but received: ${print(value)}`);\n    });\n}\nfunction object(schema) {\n    const knowns = schema ? Object.keys(schema) : [];\n    const Never = never();\n    return new Struct({\n        type: 'object',\n        schema: schema ? schema : null,\n        *entries(value) {\n            if (schema && isObject(value)) {\n                const unknowns = new Set(Object.keys(value));\n                for (const key of knowns) {\n                    unknowns.delete(key);\n                    yield [key, value[key], schema[key]];\n                }\n                for (const key of unknowns) {\n                    yield [key, value[key], Never];\n                }\n            }\n        },\n        validator(value) {\n            return (isNonArrayObject(value) ||\n                `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value, ctx) {\n            if (!isNonArrayObject(value)) {\n                return value;\n            }\n            const coerced = { ...value };\n            // The `object` struct has special behaviour enabled by the mask flag.\n            // When masking, properties that are not in the schema are deleted from\n            // the coerced object instead of eventually failing validaiton.\n            if (ctx.mask && schema) {\n                for (const key in coerced) {\n                    if (schema[key] === undefined) {\n                        delete coerced[key];\n                    }\n                }\n            }\n            return coerced;\n        },\n    });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\nfunction optional(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\nfunction record(Key, Value) {\n    return new Struct({\n        type: 'record',\n        schema: null,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k in value) {\n                    const v = value[k];\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        validator(value) {\n            return (isNonArrayObject(value) ||\n                `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isNonArrayObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\nfunction regexp() {\n    return define('regexp', (value) => {\n        return value instanceof RegExp;\n    });\n}\nfunction set(Element) {\n    return new Struct({\n        type: 'set',\n        schema: null,\n        *entries(value) {\n            if (Element && value instanceof Set) {\n                for (const v of value) {\n                    yield [v, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Set ? new Set(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Set ||\n                `Expected a \\`Set\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a string.\n */\nfunction string() {\n    return define('string', (value) => {\n        return (typeof value === 'string' ||\n            `Expected a string, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\nfunction tuple(Structs) {\n    const Never = never();\n    return new Struct({\n        type: 'tuple',\n        schema: null,\n        *entries(value) {\n            if (Array.isArray(value)) {\n                const length = Math.max(Structs.length, value.length);\n                for (let i = 0; i < length; i++) {\n                    yield [i, value[i], Structs[i] || Never];\n                }\n            }\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return Array.isArray(value) ? value.slice() : value;\n        },\n    });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\nfunction type(schema) {\n    const keys = Object.keys(schema);\n    return new Struct({\n        type: 'type',\n        schema,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k of keys) {\n                    yield [k, value[k], schema[k]];\n                }\n            }\n        },\n        validator(value) {\n            return (isNonArrayObject(value) ||\n                `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isNonArrayObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Ensure that a value matches one of a set of types.\n */\nfunction union(Structs) {\n    const description = Structs.map((s) => s.type).join(' | ');\n    return new Struct({\n        type: 'union',\n        schema: null,\n        coercer(value, ctx) {\n            for (const S of Structs) {\n                const [error, coerced] = S.validate(value, {\n                    coerce: true,\n                    mask: ctx.mask,\n                });\n                if (!error) {\n                    return coerced;\n                }\n            }\n            return value;\n        },\n        validator(value, ctx) {\n            const failures = [];\n            for (const S of Structs) {\n                const [...tuples] = run(value, S, ctx);\n                const [first] = tuples;\n                if (!first[0]) {\n                    return [];\n                }\n                else {\n                    for (const [failure] of tuples) {\n                        if (failure) {\n                            failures.push(failure);\n                        }\n                    }\n                }\n            }\n            return [\n                `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(value)}`,\n                ...failures,\n            ];\n        },\n    });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\nfunction unknown() {\n    return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction coerce(struct, condition, coercer) {\n    return new Struct({\n        ...struct,\n        coercer: (value, ctx) => {\n            return is(value, condition)\n                ? struct.coercer(coercer(value, ctx), ctx)\n                : struct.coercer(value, ctx);\n        },\n    });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction defaulted(struct, fallback, options = {}) {\n    return coerce(struct, unknown(), (x) => {\n        const f = typeof fallback === 'function' ? fallback() : fallback;\n        if (x === undefined) {\n            return f;\n        }\n        if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n            const ret = { ...x };\n            let changed = false;\n            for (const key in f) {\n                if (ret[key] === undefined) {\n                    ret[key] = f[key];\n                    changed = true;\n                }\n            }\n            if (changed) {\n                return ret;\n            }\n        }\n        return x;\n    });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction trimmed(struct) {\n    return coerce(struct, string(), (x) => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\nfunction empty(struct) {\n    return refine(struct, 'empty', (value) => {\n        const size = getSize(value);\n        return (size === 0 ||\n            `Expected an empty ${struct.type} but received one with a size of \\`${size}\\``);\n    });\n}\nfunction getSize(value) {\n    if (value instanceof Map || value instanceof Set) {\n        return value.size;\n    }\n    else {\n        return value.length;\n    }\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\nfunction max(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'max', (value) => {\n        return exclusive\n            ? value < threshold\n            : value <= threshold ||\n                `Expected a ${struct.type} less than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\nfunction min(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'min', (value) => {\n        return exclusive\n            ? value > threshold\n            : value >= threshold ||\n                `Expected a ${struct.type} greater than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a string, array, map or set is not empty.\n */\nfunction nonempty(struct) {\n    return refine(struct, 'nonempty', (value) => {\n        const size = getSize(value);\n        return (size > 0 || `Expected a nonempty ${struct.type} but received an empty one`);\n    });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\nfunction pattern(struct, regexp) {\n    return refine(struct, 'pattern', (value) => {\n        return (regexp.test(value) ||\n            `Expected a ${struct.type} matching \\`/${regexp.source}/\\` but received \"${value}\"`);\n    });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\nfunction size(struct, min, max = min) {\n    const expected = `Expected a ${struct.type}`;\n    const of = min === max ? `of \\`${min}\\`` : `between \\`${min}\\` and \\`${max}\\``;\n    return refine(struct, 'size', (value) => {\n        if (typeof value === 'number' || value instanceof Date) {\n            return ((min <= value && value <= max) ||\n                `${expected} ${of} but received \\`${value}\\``);\n        }\n        else if (value instanceof Map || value instanceof Set) {\n            const { size } = value;\n            return ((min <= size && size <= max) ||\n                `${expected} with a size ${of} but received one with a size of \\`${size}\\``);\n        }\n        else {\n            const { length } = value;\n            return ((min <= length && length <= max) ||\n                `${expected} with a length ${of} but received one with a length of \\`${length}\\``);\n        }\n    });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\nfunction refine(struct, name, refiner) {\n    return new Struct({\n        ...struct,\n        *refiner(value, ctx) {\n            yield* struct.refiner(value, ctx);\n            const result = refiner(value, ctx);\n            const failures = toFailures(result, ctx, struct, value);\n            for (const failure of failures) {\n                yield { ...failure, refinement: name };\n            }\n        },\n    });\n}\n\nexport { Struct, StructError, any, array, assert, assign, bigint, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nonempty, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.mjs.map\n","import { Buffer } from 'buffer';\nimport { EventEmitter } from 'eventemitter3';\n\n// node_modules/esbuild-plugin-polyfill-node/polyfills/buffer.js\nvar WebSocketBrowserImpl = class extends EventEmitter {\n  socket;\n  /** Instantiate a WebSocket class\n  * @constructor\n  * @param {String} address - url to a websocket server\n  * @param {(Object)} options - websocket options\n  * @param {(String|Array)} protocols - a list of protocols\n  * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n  */\n  constructor(address, options, protocols) {\n    super();\n    this.socket = new window.WebSocket(address, protocols);\n    this.socket.onopen = () => this.emit(\"open\");\n    this.socket.onmessage = (event) => this.emit(\"message\", event.data);\n    this.socket.onerror = (error) => this.emit(\"error\", error);\n    this.socket.onclose = (event) => {\n      this.emit(\"close\", event.code, event.reason);\n    };\n  }\n  /**\n  * Sends data through a websocket connection\n  * @method\n  * @param {(String|Object)} data - data to be sent via websocket\n  * @param {Object} optionsOrCallback - ws options\n  * @param {Function} callback - a callback called once the data is sent\n  * @return {Undefined}\n  */\n  send(data, optionsOrCallback, callback) {\n    const cb = callback || optionsOrCallback;\n    try {\n      this.socket.send(data);\n      cb();\n    } catch (error) {\n      cb(error);\n    }\n  }\n  /**\n  * Closes an underlying socket\n  * @method\n  * @param {Number} code - status code explaining why the connection is being closed\n  * @param {String} reason - a description why the connection is closing\n  * @return {Undefined}\n  * @throws {Error}\n  */\n  close(code, reason) {\n    this.socket.close(code, reason);\n  }\n  addEventListener(type, listener, options) {\n    this.socket.addEventListener(type, listener, options);\n  }\n};\nfunction WebSocket(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}\n\n// src/lib/utils.ts\nvar DefaultDataPack = class {\n  encode(value) {\n    return JSON.stringify(value);\n  }\n  decode(value) {\n    return JSON.parse(value);\n  }\n};\n\n// src/lib/client.ts\nvar CommonClient = class extends EventEmitter {\n  address;\n  rpc_id;\n  queue;\n  options;\n  autoconnect;\n  ready;\n  reconnect;\n  reconnect_timer_id;\n  reconnect_interval;\n  max_reconnects;\n  rest_options;\n  current_reconnects;\n  generate_request_id;\n  socket;\n  webSocketFactory;\n  dataPack;\n  /**\n  * Instantiate a Client class.\n  * @constructor\n  * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n  * @param {String} address - url to a websocket server\n  * @param {Object} options - ws options object with reconnect parameters\n  * @param {Function} generate_request_id - custom generation request Id\n  * @param {DataPack} dataPack - data pack contains encoder and decoder\n  * @return {CommonClient}\n  */\n  constructor(webSocketFactory, address = \"ws://localhost:8080\", {\n    autoconnect = true,\n    reconnect = true,\n    reconnect_interval = 1e3,\n    max_reconnects = 5,\n    ...rest_options\n  } = {}, generate_request_id, dataPack) {\n    super();\n    this.webSocketFactory = webSocketFactory;\n    this.queue = {};\n    this.rpc_id = 0;\n    this.address = address;\n    this.autoconnect = autoconnect;\n    this.ready = false;\n    this.reconnect = reconnect;\n    this.reconnect_timer_id = void 0;\n    this.reconnect_interval = reconnect_interval;\n    this.max_reconnects = max_reconnects;\n    this.rest_options = rest_options;\n    this.current_reconnects = 0;\n    this.generate_request_id = generate_request_id || (() => typeof this.rpc_id === \"number\" ? ++this.rpc_id : Number(this.rpc_id) + 1);\n    if (!dataPack) this.dataPack = new DefaultDataPack();\n    else this.dataPack = dataPack;\n    if (this.autoconnect)\n      this._connect(this.address, {\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects,\n        ...this.rest_options\n      });\n  }\n  /**\n  * Connects to a defined server if not connected already.\n  * @method\n  * @return {Undefined}\n  */\n  connect() {\n    if (this.socket) return;\n    this._connect(this.address, {\n      autoconnect: this.autoconnect,\n      reconnect: this.reconnect,\n      reconnect_interval: this.reconnect_interval,\n      max_reconnects: this.max_reconnects,\n      ...this.rest_options\n    });\n  }\n  /**\n  * Calls a registered RPC method on server.\n  * @method\n  * @param {String} method - RPC method name\n  * @param {Object|Array} params - optional method parameters\n  * @param {Number} timeout - RPC reply timeout value\n  * @param {Object} ws_opts - options passed to ws\n  * @return {Promise}\n  */\n  call(method, params, timeout, ws_opts) {\n    if (!ws_opts && \"object\" === typeof timeout) {\n      ws_opts = timeout;\n      timeout = null;\n    }\n    return new Promise((resolve, reject) => {\n      if (!this.ready) return reject(new Error(\"socket not ready\"));\n      const rpc_id = this.generate_request_id(method, params);\n      const message = {\n        jsonrpc: \"2.0\",\n        method,\n        params: params || void 0,\n        id: rpc_id\n      };\n      this.socket.send(this.dataPack.encode(message), ws_opts, (error) => {\n        if (error) return reject(error);\n        this.queue[rpc_id] = { promise: [resolve, reject] };\n        if (timeout) {\n          this.queue[rpc_id].timeout = setTimeout(() => {\n            delete this.queue[rpc_id];\n            reject(new Error(\"reply timeout\"));\n          }, timeout);\n        }\n      });\n    });\n  }\n  /**\n  * Logins with the other side of the connection.\n  * @method\n  * @param {Object} params - Login credentials object\n  * @return {Promise}\n  */\n  async login(params) {\n    const resp = await this.call(\"rpc.login\", params);\n    if (!resp) throw new Error(\"authentication failed\");\n    return resp;\n  }\n  /**\n  * Fetches a list of client's methods registered on server.\n  * @method\n  * @return {Array}\n  */\n  async listMethods() {\n    return await this.call(\"__listMethods\");\n  }\n  /**\n  * Sends a JSON-RPC 2.0 notification to server.\n  * @method\n  * @param {String} method - RPC method name\n  * @param {Object} params - optional method parameters\n  * @return {Promise}\n  */\n  notify(method, params) {\n    return new Promise((resolve, reject) => {\n      if (!this.ready) return reject(new Error(\"socket not ready\"));\n      const message = {\n        jsonrpc: \"2.0\",\n        method,\n        params\n      };\n      this.socket.send(this.dataPack.encode(message), (error) => {\n        if (error) return reject(error);\n        resolve();\n      });\n    });\n  }\n  /**\n  * Subscribes for a defined event.\n  * @method\n  * @param {String|Array} event - event name\n  * @return {Undefined}\n  * @throws {Error}\n  */\n  async subscribe(event) {\n    if (typeof event === \"string\") event = [event];\n    const result = await this.call(\"rpc.on\", event);\n    if (typeof event === \"string\" && result[event] !== \"ok\")\n      throw new Error(\n        \"Failed subscribing to an event '\" + event + \"' with: \" + result[event]\n      );\n    return result;\n  }\n  /**\n  * Unsubscribes from a defined event.\n  * @method\n  * @param {String|Array} event - event name\n  * @return {Undefined}\n  * @throws {Error}\n  */\n  async unsubscribe(event) {\n    if (typeof event === \"string\") event = [event];\n    const result = await this.call(\"rpc.off\", event);\n    if (typeof event === \"string\" && result[event] !== \"ok\")\n      throw new Error(\"Failed unsubscribing from an event with: \" + result);\n    return result;\n  }\n  /**\n  * Closes a WebSocket connection gracefully.\n  * @method\n  * @param {Number} code - socket close code\n  * @param {String} data - optional data to be sent before closing\n  * @return {Undefined}\n  */\n  close(code, data) {\n    if (this.socket) this.socket.close(code || 1e3, data);\n  }\n  /**\n  * Enable / disable automatic reconnection.\n  * @method\n  * @param {Boolean} reconnect - enable / disable reconnection\n  * @return {Undefined}\n  */\n  setAutoReconnect(reconnect) {\n    this.reconnect = reconnect;\n  }\n  /**\n  * Set the interval between reconnection attempts.\n  * @method\n  * @param {Number} interval - reconnection interval in milliseconds\n  * @return {Undefined}\n  */\n  setReconnectInterval(interval) {\n    this.reconnect_interval = interval;\n  }\n  /**\n  * Set the maximum number of reconnection attempts.\n  * @method\n  * @param {Number} max_reconnects - maximum reconnection attempts\n  * @return {Undefined}\n  */\n  setMaxReconnects(max_reconnects) {\n    this.max_reconnects = max_reconnects;\n  }\n  /**\n  * Get the current number of reconnection attempts made.\n  * @method\n  * @return {Number} current reconnection attempts\n  */\n  getCurrentReconnects() {\n    return this.current_reconnects;\n  }\n  /**\n  * Get the maximum number of reconnection attempts.\n  * @method\n  * @return {Number} maximum reconnection attempts\n  */\n  getMaxReconnects() {\n    return this.max_reconnects;\n  }\n  /**\n  * Check if the client is currently attempting to reconnect.\n  * @method\n  * @return {Boolean} true if reconnection is in progress\n  */\n  isReconnecting() {\n    return this.reconnect_timer_id !== void 0;\n  }\n  /**\n  * Check if the client will attempt to reconnect on the next close event.\n  * @method\n  * @return {Boolean} true if reconnection will be attempted\n  */\n  willReconnect() {\n    return this.reconnect && (this.max_reconnects === 0 || this.current_reconnects < this.max_reconnects);\n  }\n  /**\n  * Connection/Message handler.\n  * @method\n  * @private\n  * @param {String} address - WebSocket API address\n  * @param {Object} options - ws options object\n  * @return {Undefined}\n  */\n  _connect(address, options) {\n    clearTimeout(this.reconnect_timer_id);\n    this.socket = this.webSocketFactory(address, options);\n    this.socket.addEventListener(\"open\", () => {\n      this.ready = true;\n      this.emit(\"open\");\n      this.current_reconnects = 0;\n    });\n    this.socket.addEventListener(\"message\", ({ data: message }) => {\n      if (message instanceof ArrayBuffer)\n        message = Buffer.from(message).toString();\n      try {\n        message = this.dataPack.decode(message);\n      } catch (error) {\n        return;\n      }\n      if (message.notification && this.listeners(message.notification).length) {\n        if (!Object.keys(message.params).length)\n          return this.emit(message.notification);\n        const args = [message.notification];\n        if (message.params.constructor === Object) args.push(message.params);\n        else\n          for (let i = 0; i < message.params.length; i++)\n            args.push(message.params[i]);\n        return Promise.resolve().then(() => {\n          this.emit.apply(this, args);\n        });\n      }\n      if (!this.queue[message.id]) {\n        if (message.method) {\n          return Promise.resolve().then(() => {\n            this.emit(message.method, message?.params);\n          });\n        }\n        return;\n      }\n      if (\"error\" in message === \"result\" in message)\n        this.queue[message.id].promise[1](\n          new Error(\n            'Server response malformed. Response must include either \"result\" or \"error\", but not both.'\n          )\n        );\n      if (this.queue[message.id].timeout)\n        clearTimeout(this.queue[message.id].timeout);\n      if (message.error) this.queue[message.id].promise[1](message.error);\n      else this.queue[message.id].promise[0](message.result);\n      delete this.queue[message.id];\n    });\n    this.socket.addEventListener(\"error\", (error) => this.emit(\"error\", error));\n    this.socket.addEventListener(\"close\", ({ code, reason }) => {\n      if (this.ready)\n        setTimeout(() => this.emit(\"close\", code, reason), 0);\n      this.ready = false;\n      this.socket = void 0;\n      if (code === 1e3) return;\n      this.current_reconnects++;\n      if (this.reconnect && (this.max_reconnects > this.current_reconnects || this.max_reconnects === 0))\n        this.reconnect_timer_id = setTimeout(\n          () => this._connect(address, options),\n          this.reconnect_interval\n        );\n      else if (this.reconnect && this.max_reconnects > 0 && this.current_reconnects >= this.max_reconnects) {\n        setTimeout(() => this.emit(\"max_reconnects_reached\", code, reason), 1);\n      }\n    });\n  }\n};\n\n// src/index.browser.ts\nvar Client = class extends CommonClient {\n  constructor(address = \"ws://localhost:8080\", {\n    autoconnect = true,\n    reconnect = true,\n    reconnect_interval = 1e3,\n    max_reconnects = 5\n  } = {}, generate_request_id) {\n    super(\n      WebSocket,\n      address,\n      {\n        autoconnect,\n        reconnect,\n        reconnect_interval,\n        max_reconnects\n      },\n      generate_request_id\n    );\n  }\n};\n\nexport { Client, CommonClient, DefaultDataPack, WebSocket };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from \"./_u64.js\";\n// prettier-ignore\nimport { abytes, aexists, anumber, aoutput, clean, createHasher, createXOFer, Hash, swap32IfBE, toBytes, u32 } from \"./utils.js\";\n// No __PURE__ annotations in sha3 header:\n// EVERYTHING is in fact used on every export.\n// Various per round constants calculations\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst IOTAS = split(_SHA3_IOTA, true);\nconst SHA3_IOTA_H = IOTAS[0];\nconst SHA3_IOTA_L = IOTAS[1];\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    clean(B);\n}\n/** Keccak sponge function. */\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        this.enableXOF = false;\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        // Can be passed from user as dkLen\n        anumber(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        // 0 < blockLen < 200\n        if (!(0 < blockLen && blockLen < 200))\n            throw new Error('only keccak-f1600 function is supported');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    clone() {\n        return this._cloneInto();\n    }\n    keccak() {\n        swap32IfBE(this.state32);\n        keccakP(this.state32, this.rounds);\n        swap32IfBE(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { blockLen, state } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        aexists(this, false);\n        abytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        anumber(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        aoutput(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        clean(this.state);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => createHasher(() => new Keccak(blockLen, suffix, outputLen));\n/** SHA3-224 hash function. */\nexport const sha3_224 = /* @__PURE__ */ (() => gen(0x06, 144, 224 / 8))();\n/** SHA3-256 hash function. Different from keccak-256. */\nexport const sha3_256 = /* @__PURE__ */ (() => gen(0x06, 136, 256 / 8))();\n/** SHA3-384 hash function. */\nexport const sha3_384 = /* @__PURE__ */ (() => gen(0x06, 104, 384 / 8))();\n/** SHA3-512 hash function. */\nexport const sha3_512 = /* @__PURE__ */ (() => gen(0x06, 72, 512 / 8))();\n/** keccak-224 hash function. */\nexport const keccak_224 = /* @__PURE__ */ (() => gen(0x01, 144, 224 / 8))();\n/** keccak-256 hash function. Different from SHA3-256. */\nexport const keccak_256 = /* @__PURE__ */ (() => gen(0x01, 136, 256 / 8))();\n/** keccak-384 hash function. */\nexport const keccak_384 = /* @__PURE__ */ (() => gen(0x01, 104, 384 / 8))();\n/** keccak-512 hash function. */\nexport const keccak_512 = /* @__PURE__ */ (() => gen(0x01, 72, 512 / 8))();\nconst genShake = (suffix, blockLen, outputLen) => createXOFer((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\n/** SHAKE128 XOF with 128-bit security. */\nexport const shake128 = /* @__PURE__ */ (() => genShake(0x1f, 168, 128 / 8))();\n/** SHAKE256 XOF with 256-bit security. */\nexport const shake256 = /* @__PURE__ */ (() => genShake(0x1f, 136, 256 / 8))();\n//# sourceMappingURL=sha3.js.map","/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\nimport { abytes, aexists, ahash, clean, Hash, toBytes } from \"./utils.js\";\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        ahash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        clean(pad);\n    }\n    update(buf) {\n        aexists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        abytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/**\n * Short Weierstrass curve methods. The formula is: y² = x³ + ax + b.\n *\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance\n * of nominative types in TypeScript and interfaces only check for shape, so it's hard to create\n * unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * @todo https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac as nobleHmac } from '@noble/hashes/hmac.js';\nimport { ahash } from '@noble/hashes/utils';\nimport { _validateObject, _abool2 as abool, _abytes2 as abytes, aInRange, bitLen, bitMask, bytesToHex, bytesToNumberBE, concatBytes, createHmacDrbg, ensureBytes, hexToBytes, inRange, isBytes, memoized, numberToHexUnpadded, randomBytes as randomBytesWeb, } from \"../utils.js\";\nimport { _createCurveFields, mulEndoUnsafe, negateCt, normalizeZ, pippenger, wNAF, } from \"./curve.js\";\nimport { Field, FpInvertBatch, getMinHashLength, mapHashToField, nLength, validateField, } from \"./modular.js\";\n// We construct basis in such way that den is always positive and equals n, but num sign depends on basis (not on secret value)\nconst divNearest = (num, den) => (num + (num >= 0 ? den : -den) / _2n) / den;\n/**\n * Splits scalar for GLV endomorphism.\n */\nexport function _splitEndoScalar(k, basis, n) {\n    // Split scalar into two such that part is ~half bits: `abs(part) < sqrt(N)`\n    // Since part can be negative, we need to do this on point.\n    // TODO: verifyScalar function which consumes lambda\n    const [[a1, b1], [a2, b2]] = basis;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    // |k1|/|k2| is < sqrt(N), but can be negative.\n    // If we do `k1 mod N`, we'll get big scalar (`> sqrt(N)`): so, we do cheaper negation instead.\n    let k1 = k - c1 * a1 - c2 * a2;\n    let k2 = -c1 * b1 - c2 * b2;\n    const k1neg = k1 < _0n;\n    const k2neg = k2 < _0n;\n    if (k1neg)\n        k1 = -k1;\n    if (k2neg)\n        k2 = -k2;\n    // Double check that resulting scalar less than half bits of N: otherwise wNAF will fail.\n    // This should only happen on wrong basises. Also, math inside is too complex and I don't trust it.\n    const MAX_NUM = bitMask(Math.ceil(bitLen(n) / 2)) + _1n; // Half bits of N\n    if (k1 < _0n || k1 >= MAX_NUM || k2 < _0n || k2 >= MAX_NUM) {\n        throw new Error('splitScalar (endomorphism): failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction validateSigFormat(format) {\n    if (!['compact', 'recovered', 'der'].includes(format))\n        throw new Error('Signature format must be \"compact\", \"recovered\", or \"der\"');\n    return format;\n}\nfunction validateSigOpts(opts, def) {\n    const optsn = {};\n    for (let optName of Object.keys(def)) {\n        // @ts-ignore\n        optsn[optName] = opts[optName] === undefined ? def[optName] : opts[optName];\n    }\n    abool(optsn.lowS, 'lowS');\n    abool(optsn.prehash, 'prehash');\n    if (optsn.format !== undefined)\n        validateSigFormat(optsn.format);\n    return optsn;\n}\nexport class DERErr extends Error {\n    constructor(m = '') {\n        super(m);\n    }\n}\n/**\n * ASN.1 DER encoding utilities. ASN is very complex & fragile. Format:\n *\n *     [0x30 (SEQUENCE), bytelength, 0x02 (INTEGER), intLength, R, 0x02 (INTEGER), intLength, S]\n *\n * Docs: https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/, https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: DERErr,\n    // Basic building block is TLV (Tag-Length-Value)\n    _tlv: {\n        encode: (tag, data) => {\n            const { Err: E } = DER;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length & 1)\n                throw new E('tlv.encode: unpadded data');\n            const dataLen = data.length / 2;\n            const len = numberToHexUnpadded(dataLen);\n            if ((len.length / 2) & 128)\n                throw new E('tlv.encode: long form length too big');\n            // length of length with long form flag\n            const lenLen = dataLen > 127 ? numberToHexUnpadded((len.length / 2) | 128) : '';\n            const t = numberToHexUnpadded(tag);\n            return t + lenLen + len + data;\n        },\n        // v - value, l - left bytes (unparsed)\n        decode(tag, data) {\n            const { Err: E } = DER;\n            let pos = 0;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length < 2 || data[pos++] !== tag)\n                throw new E('tlv.decode: wrong tlv');\n            const first = data[pos++];\n            const isLong = !!(first & 128); // First bit of first length byte is flag for short/long form\n            let length = 0;\n            if (!isLong)\n                length = first;\n            else {\n                // Long form: [longFlag(1bit), lengthLength(7bit), length (BE)]\n                const lenLen = first & 127;\n                if (!lenLen)\n                    throw new E('tlv.decode(long): indefinite length not supported');\n                if (lenLen > 4)\n                    throw new E('tlv.decode(long): byte length is too big'); // this will overflow u32 in js\n                const lengthBytes = data.subarray(pos, pos + lenLen);\n                if (lengthBytes.length !== lenLen)\n                    throw new E('tlv.decode: length bytes not complete');\n                if (lengthBytes[0] === 0)\n                    throw new E('tlv.decode(long): zero leftmost byte');\n                for (const b of lengthBytes)\n                    length = (length << 8) | b;\n                pos += lenLen;\n                if (length < 128)\n                    throw new E('tlv.decode(long): not minimal encoding');\n            }\n            const v = data.subarray(pos, pos + length);\n            if (v.length !== length)\n                throw new E('tlv.decode: wrong value length');\n            return { v, l: data.subarray(pos + length) };\n        },\n    },\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    _int: {\n        encode(num) {\n            const { Err: E } = DER;\n            if (num < _0n)\n                throw new E('integer: negative integers are not allowed');\n            let hex = numberToHexUnpadded(num);\n            // Pad with zero byte if negative flag is present\n            if (Number.parseInt(hex[0], 16) & 0b1000)\n                hex = '00' + hex;\n            if (hex.length & 1)\n                throw new E('unexpected DER parsing assertion: unpadded hex');\n            return hex;\n        },\n        decode(data) {\n            const { Err: E } = DER;\n            if (data[0] & 128)\n                throw new E('invalid signature integer: negative');\n            if (data[0] === 0x00 && !(data[1] & 128))\n                throw new E('invalid signature integer: unnecessary leading zero');\n            return bytesToNumberBE(data);\n        },\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E, _int: int, _tlv: tlv } = DER;\n        const data = ensureBytes('signature', hex);\n        const { v: seqBytes, l: seqLeftBytes } = tlv.decode(0x30, data);\n        if (seqLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        const { v: rBytes, l: rLeftBytes } = tlv.decode(0x02, seqBytes);\n        const { v: sBytes, l: sLeftBytes } = tlv.decode(0x02, rLeftBytes);\n        if (sLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        return { r: int.decode(rBytes), s: int.decode(sBytes) };\n    },\n    hexFromSig(sig) {\n        const { _tlv: tlv, _int: int } = DER;\n        const rs = tlv.encode(0x02, int.encode(sig.r));\n        const ss = tlv.encode(0x02, int.encode(sig.s));\n        const seq = rs + ss;\n        return tlv.encode(0x30, seq);\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function _normFnElement(Fn, key) {\n    const { BYTES: expected } = Fn;\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else {\n        let bytes = ensureBytes('private key', key);\n        try {\n            num = Fn.fromBytes(bytes);\n        }\n        catch (error) {\n            throw new Error(`invalid private key: expected ui8a of size ${expected}, got ${typeof key}`);\n        }\n    }\n    if (!Fn.isValidNot0(num))\n        throw new Error('invalid private key: out of range [1..N-1]');\n    return num;\n}\n/**\n * Creates weierstrass Point constructor, based on specified curve options.\n *\n * @example\n```js\nconst opts = {\n  p: BigInt('0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff'),\n  n: BigInt('0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551'),\n  h: BigInt(1),\n  a: BigInt('0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc'),\n  b: BigInt('0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b'),\n  Gx: BigInt('0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296'),\n  Gy: BigInt('0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5'),\n};\nconst p256_Point = weierstrass(opts);\n```\n */\nexport function weierstrassN(params, extraOpts = {}) {\n    const validated = _createCurveFields('weierstrass', params, extraOpts);\n    const { Fp, Fn } = validated;\n    let CURVE = validated.CURVE;\n    const { h: cofactor, n: CURVE_ORDER } = CURVE;\n    _validateObject(extraOpts, {}, {\n        allowInfinityPoint: 'boolean',\n        clearCofactor: 'function',\n        isTorsionFree: 'function',\n        fromBytes: 'function',\n        toBytes: 'function',\n        endo: 'object',\n        wrapPrivateKey: 'boolean',\n    });\n    const { endo } = extraOpts;\n    if (endo) {\n        // validateObject(endo, { beta: 'bigint', splitScalar: 'function' });\n        if (!Fp.is0(CURVE.a) || typeof endo.beta !== 'bigint' || !Array.isArray(endo.basises)) {\n            throw new Error('invalid endo: expected \"beta\": bigint and \"basises\": array');\n        }\n    }\n    const lengths = getWLengths(Fp, Fn);\n    function assertCompressionIsSupported() {\n        if (!Fp.isOdd)\n            throw new Error('compression is not supported: Field does not have .isOdd()');\n    }\n    // Implements IEEE P1363 point encoding\n    function pointToBytes(_c, point, isCompressed) {\n        const { x, y } = point.toAffine();\n        const bx = Fp.toBytes(x);\n        abool(isCompressed, 'isCompressed');\n        if (isCompressed) {\n            assertCompressionIsSupported();\n            const hasEvenY = !Fp.isOdd(y);\n            return concatBytes(pprefix(hasEvenY), bx);\n        }\n        else {\n            return concatBytes(Uint8Array.of(0x04), bx, Fp.toBytes(y));\n        }\n    }\n    function pointFromBytes(bytes) {\n        abytes(bytes, undefined, 'Point');\n        const { publicKey: comp, publicKeyUncompressed: uncomp } = lengths; // e.g. for 32-byte: 33, 65\n        const length = bytes.length;\n        const head = bytes[0];\n        const tail = bytes.subarray(1);\n        // No actual validation is done here: use .assertValidity()\n        if (length === comp && (head === 0x02 || head === 0x03)) {\n            const x = Fp.fromBytes(tail);\n            if (!Fp.isValid(x))\n                throw new Error('bad point: is not on curve, wrong x');\n            const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n            let y;\n            try {\n                y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n            }\n            catch (sqrtError) {\n                const err = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                throw new Error('bad point: is not on curve, sqrt error' + err);\n            }\n            assertCompressionIsSupported();\n            const isYOdd = Fp.isOdd(y); // (y & _1n) === _1n;\n            const isHeadOdd = (head & 1) === 1; // ECDSA-specific\n            if (isHeadOdd !== isYOdd)\n                y = Fp.neg(y);\n            return { x, y };\n        }\n        else if (length === uncomp && head === 0x04) {\n            // TODO: more checks\n            const L = Fp.BYTES;\n            const x = Fp.fromBytes(tail.subarray(0, L));\n            const y = Fp.fromBytes(tail.subarray(L, L * 2));\n            if (!isValidXY(x, y))\n                throw new Error('bad point: is not on curve');\n            return { x, y };\n        }\n        else {\n            throw new Error(`bad point: got length ${length}, expected compressed=${comp} or uncompressed=${uncomp}`);\n        }\n    }\n    const encodePoint = extraOpts.toBytes || pointToBytes;\n    const decodePoint = extraOpts.fromBytes || pointFromBytes;\n    function weierstrassEquation(x) {\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x² * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, CURVE.a)), CURVE.b); // x³ + a * x + b\n    }\n    // TODO: move top-level\n    /** Checks whether equation holds for given x, y: y² == x³ + ax + b */\n    function isValidXY(x, y) {\n        const left = Fp.sqr(y); // y²\n        const right = weierstrassEquation(x); // x³ + ax + b\n        return Fp.eql(left, right);\n    }\n    // Validate whether the passed curve params are valid.\n    // Test 1: equation y² = x³ + ax + b should work for generator point.\n    if (!isValidXY(CURVE.Gx, CURVE.Gy))\n        throw new Error('bad curve params: generator point');\n    // Test 2: discriminant Δ part should be non-zero: 4a³ + 27b² != 0.\n    // Guarantees curve is genus-1, smooth (non-singular).\n    const _4a3 = Fp.mul(Fp.pow(CURVE.a, _3n), _4n);\n    const _27b2 = Fp.mul(Fp.sqr(CURVE.b), BigInt(27));\n    if (Fp.is0(Fp.add(_4a3, _27b2)))\n        throw new Error('bad curve params: a or b');\n    /** Asserts coordinate is valid: 0 <= n < Fp.ORDER. */\n    function acoord(title, n, banZero = false) {\n        if (!Fp.isValid(n) || (banZero && Fp.is0(n)))\n            throw new Error(`bad point coordinate ${title}`);\n        return n;\n    }\n    function aprjpoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    function splitEndoScalarN(k) {\n        if (!endo || !endo.basises)\n            throw new Error('no endo');\n        return _splitEndoScalar(k, endo.basises, Fn.ORDER);\n    }\n    // Memoized toAffine / validity check. They are heavy. Points are immutable.\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (X, Y, Z) ∋ (x=X/Z, y=Y/Z)\n    const toAffineMemo = memoized((p, iz) => {\n        const { X, Y, Z } = p;\n        // Fast-path for normalized points\n        if (Fp.eql(Z, Fp.ONE))\n            return { x: X, y: Y };\n        const is0 = p.is0();\n        // If invZ was 0, we return zero point. However we still want to execute\n        // all operations, so we replace invZ with a random number, 1.\n        if (iz == null)\n            iz = is0 ? Fp.ONE : Fp.inv(Z);\n        const x = Fp.mul(X, iz);\n        const y = Fp.mul(Y, iz);\n        const zz = Fp.mul(Z, iz);\n        if (is0)\n            return { x: Fp.ZERO, y: Fp.ZERO };\n        if (!Fp.eql(zz, Fp.ONE))\n            throw new Error('invZ was invalid');\n        return { x, y };\n    });\n    // NOTE: on exception this will crash 'cached' and no value will be set.\n    // Otherwise true will be return\n    const assertValidMemo = memoized((p) => {\n        if (p.is0()) {\n            // (0, 1, 0) aka ZERO is invalid in most contexts.\n            // In BLS, ZERO can be serialized, so we allow it.\n            // (0, 0, 0) is invalid representation of ZERO.\n            if (extraOpts.allowInfinityPoint && !Fp.is0(p.Y))\n                return;\n            throw new Error('bad point: ZERO');\n        }\n        // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n        const { x, y } = p.toAffine();\n        if (!Fp.isValid(x) || !Fp.isValid(y))\n            throw new Error('bad point: x or y not field elements');\n        if (!isValidXY(x, y))\n            throw new Error('bad point: equation left != right');\n        if (!p.isTorsionFree())\n            throw new Error('bad point: not in prime-order subgroup');\n        return true;\n    });\n    function finishEndo(endoBeta, k1p, k2p, k1neg, k2neg) {\n        k2p = new Point(Fp.mul(k2p.X, endoBeta), k2p.Y, k2p.Z);\n        k1p = negateCt(k1neg, k1p);\n        k2p = negateCt(k2neg, k2p);\n        return k1p.add(k2p);\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates:(X, Y, Z) ∋ (x=X/Z, y=Y/Z).\n     * Default Point works in 2d / affine coordinates: (x, y).\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        /** Does NOT validate if the point is valid. Use `.assertValidity()`. */\n        constructor(X, Y, Z) {\n            this.X = acoord('x', X);\n            this.Y = acoord('y', Y, true);\n            this.Z = acoord('z', Z);\n            Object.freeze(this);\n        }\n        static CURVE() {\n            return CURVE;\n        }\n        /** Does NOT validate if the point is valid. Use `.assertValidity()`. */\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            // (0, 0) would've produced (0, 0, 1) - instead, we need (0, 1, 0)\n            if (Fp.is0(x) && Fp.is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        static fromBytes(bytes) {\n            const P = Point.fromAffine(decodePoint(abytes(bytes, undefined, 'point')));\n            P.assertValidity();\n            return P;\n        }\n        static fromHex(hex) {\n            return Point.fromBytes(ensureBytes('pointHex', hex));\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         *\n         * @param windowSize\n         * @param isLazy true will defer table computation until the first multiplication\n         * @returns\n         */\n        precompute(windowSize = 8, isLazy = true) {\n            wnaf.createCache(this, windowSize);\n            if (!isLazy)\n                this.multiply(_3n); // random number\n            return this;\n        }\n        // TODO: return `this`\n        /** A point on curve is valid if it conforms to equation. */\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (!Fp.isOdd)\n                throw new Error(\"Field doesn't support isOdd\");\n            return !Fp.isOdd(y);\n        }\n        /** Compare one point to another. */\n        equals(other) {\n            aprjpoint(other);\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            const { X: X2, Y: Y2, Z: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /** Flips point to one corresponding to (x, -y) in Affine coordinates. */\n        negate() {\n            return new Point(this.X, Fp.neg(this.Y), this.Z);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            aprjpoint(other);\n            const { X: X1, Y: Y1, Z: Z1 } = this;\n            const { X: X2, Y: Y2, Z: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            const { endo } = extraOpts;\n            if (!Fn.isValidNot0(scalar))\n                throw new Error('invalid scalar: out of range'); // 0 is invalid\n            let point, fake; // Fake point is used to const-time mult\n            const mul = (n) => wnaf.cached(this, n, (p) => normalizeZ(Point, p));\n            /** See docs for {@link EndomorphismOpts} */\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = splitEndoScalarN(scalar);\n                const { p: k1p, f: k1f } = mul(k1);\n                const { p: k2p, f: k2f } = mul(k2);\n                fake = k1f.add(k2f);\n                point = finishEndo(endo.beta, k1p, k2p, k1neg, k2neg);\n            }\n            else {\n                const { p, f } = mul(scalar);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return normalizeZ(Point, [point, fake])[0];\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed secret key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(sc) {\n            const { endo } = extraOpts;\n            const p = this;\n            if (!Fn.isValid(sc))\n                throw new Error('invalid scalar: out of range'); // 0 is valid\n            if (sc === _0n || p.is0())\n                return Point.ZERO;\n            if (sc === _1n)\n                return p; // fast-path\n            if (wnaf.hasCache(this))\n                return this.multiply(sc);\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = splitEndoScalarN(sc);\n                const { p1, p2 } = mulEndoUnsafe(Point, p, k1, k2); // 30% faster vs wnaf.unsafe\n                return finishEndo(endo.beta, p1, p2, k1neg, k2neg);\n            }\n            else {\n                return wnaf.unsafe(p, sc);\n            }\n        }\n        multiplyAndAddUnsafe(Q, a, b) {\n            const sum = this.multiplyUnsafe(a).add(Q.multiplyUnsafe(b));\n            return sum.is0() ? undefined : sum;\n        }\n        /**\n         * Converts Projective point to affine (x, y) coordinates.\n         * @param invertedZ Z^-1 (inverted zero) - optional, precomputation is useful for invertBatch\n         */\n        toAffine(invertedZ) {\n            return toAffineMemo(this, invertedZ);\n        }\n        /**\n         * Checks whether Point is free of torsion elements (is in prime subgroup).\n         * Always torsion-free for cofactor=1 curves.\n         */\n        isTorsionFree() {\n            const { isTorsionFree } = extraOpts;\n            if (cofactor === _1n)\n                return true;\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            return wnaf.unsafe(this, CURVE_ORDER).is0();\n        }\n        clearCofactor() {\n            const { clearCofactor } = extraOpts;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(cofactor);\n        }\n        isSmallOrder() {\n            // can we use this.clearCofactor()?\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        toBytes(isCompressed = true) {\n            abool(isCompressed, 'isCompressed');\n            this.assertValidity();\n            return encodePoint(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return bytesToHex(this.toBytes(isCompressed));\n        }\n        toString() {\n            return `<Point ${this.is0() ? 'ZERO' : this.toHex()}>`;\n        }\n        // TODO: remove\n        get px() {\n            return this.X;\n        }\n        get py() {\n            return this.X;\n        }\n        get pz() {\n            return this.Z;\n        }\n        toRawBytes(isCompressed = true) {\n            return this.toBytes(isCompressed);\n        }\n        _setWindowSize(windowSize) {\n            this.precompute(windowSize);\n        }\n        static normalizeZ(points) {\n            return normalizeZ(Point, points);\n        }\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(_normFnElement(Fn, privateKey));\n        }\n    }\n    // base / generator point\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    // zero / infinity / identity point\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO); // 0, 1, 0\n    // math field\n    Point.Fp = Fp;\n    // scalar field\n    Point.Fn = Fn;\n    const bits = Fn.BITS;\n    const wnaf = new wNAF(Point, extraOpts.endo ? Math.ceil(bits / 2) : bits);\n    Point.BASE.precompute(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    return Point;\n}\n// Points start with byte 0x02 when y is even; otherwise 0x03\nfunction pprefix(hasEvenY) {\n    return Uint8Array.of(hasEvenY ? 0x02 : 0x03);\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    validateField(Fp);\n    const { A, B, Z } = opts;\n    if (!Fp.isValid(A) || !Fp.isValid(B) || !Fp.isValid(Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, Z);\n    if (!Fp.isOdd)\n        throw new Error('Field does not have .isOdd()');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        const tv4_inv = FpInvertBatch(Fp, [tv4], true)[0];\n        x = Fp.mul(x, tv4_inv); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\nfunction getWLengths(Fp, Fn) {\n    return {\n        secretKey: Fn.BYTES,\n        publicKey: 1 + Fp.BYTES,\n        publicKeyUncompressed: 1 + 2 * Fp.BYTES,\n        publicKeyHasPrefix: true,\n        signature: 2 * Fn.BYTES,\n    };\n}\n/**\n * Sometimes users only need getPublicKey, getSharedSecret, and secret key handling.\n * This helper ensures no signature functionality is present. Less code, smaller bundle size.\n */\nexport function ecdh(Point, ecdhOpts = {}) {\n    const { Fn } = Point;\n    const randomBytes_ = ecdhOpts.randomBytes || randomBytesWeb;\n    const lengths = Object.assign(getWLengths(Point.Fp, Fn), { seed: getMinHashLength(Fn.ORDER) });\n    function isValidSecretKey(secretKey) {\n        try {\n            return !!_normFnElement(Fn, secretKey);\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    function isValidPublicKey(publicKey, isCompressed) {\n        const { publicKey: comp, publicKeyUncompressed } = lengths;\n        try {\n            const l = publicKey.length;\n            if (isCompressed === true && l !== comp)\n                return false;\n            if (isCompressed === false && l !== publicKeyUncompressed)\n                return false;\n            return !!Point.fromBytes(publicKey);\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    /**\n     * Produces cryptographically secure secret key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    function randomSecretKey(seed = randomBytes_(lengths.seed)) {\n        return mapHashToField(abytes(seed, lengths.seed, 'seed'), Fn.ORDER);\n    }\n    /**\n     * Computes public key for a secret key. Checks for validity of the secret key.\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(secretKey, isCompressed = true) {\n        return Point.BASE.multiply(_normFnElement(Fn, secretKey)).toBytes(isCompressed);\n    }\n    function keygen(seed) {\n        const secretKey = randomSecretKey(seed);\n        return { secretKey, publicKey: getPublicKey(secretKey) };\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        if (typeof item === 'bigint')\n            return false;\n        if (item instanceof Point)\n            return true;\n        const { secretKey, publicKey, publicKeyUncompressed } = lengths;\n        if (Fn.allowedLengths || secretKey === publicKey)\n            return undefined;\n        const l = ensureBytes('key', item).length;\n        return l === publicKey || l === publicKeyUncompressed;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from secret key A and public key B.\n     * Checks: 1) secret key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(secretKeyA, publicKeyB, isCompressed = true) {\n        if (isProbPub(secretKeyA) === true)\n            throw new Error('first arg must be private key');\n        if (isProbPub(publicKeyB) === false)\n            throw new Error('second arg must be public key');\n        const s = _normFnElement(Fn, secretKeyA);\n        const b = Point.fromHex(publicKeyB); // checks for being on-curve\n        return b.multiply(s).toBytes(isCompressed);\n    }\n    const utils = {\n        isValidSecretKey,\n        isValidPublicKey,\n        randomSecretKey,\n        // TODO: remove\n        isValidPrivateKey: isValidSecretKey,\n        randomPrivateKey: randomSecretKey,\n        normPrivateKeyToScalar: (key) => _normFnElement(Fn, key),\n        precompute(windowSize = 8, point = Point.BASE) {\n            return point.precompute(windowSize, false);\n        },\n    };\n    return Object.freeze({ getPublicKey, getSharedSecret, keygen, Point, utils, lengths });\n}\n/**\n * Creates ECDSA signing interface for given elliptic curve `Point` and `hash` function.\n * We need `hash` for 2 features:\n * 1. Message prehash-ing. NOT used if `sign` / `verify` are called with `prehash: false`\n * 2. k generation in `sign`, using HMAC-drbg(hash)\n *\n * ECDSAOpts are only rarely needed.\n *\n * @example\n * ```js\n * const p256_Point = weierstrass(...);\n * const p256_sha256 = ecdsa(p256_Point, sha256);\n * const p256_sha224 = ecdsa(p256_Point, sha224);\n * const p256_sha224_r = ecdsa(p256_Point, sha224, { randomBytes: (length) => { ... } });\n * ```\n */\nexport function ecdsa(Point, hash, ecdsaOpts = {}) {\n    ahash(hash);\n    _validateObject(ecdsaOpts, {}, {\n        hmac: 'function',\n        lowS: 'boolean',\n        randomBytes: 'function',\n        bits2int: 'function',\n        bits2int_modN: 'function',\n    });\n    const randomBytes = ecdsaOpts.randomBytes || randomBytesWeb;\n    const hmac = ecdsaOpts.hmac ||\n        ((key, ...msgs) => nobleHmac(hash, key, concatBytes(...msgs)));\n    const { Fp, Fn } = Point;\n    const { ORDER: CURVE_ORDER, BITS: fnBits } = Fn;\n    const { keygen, getPublicKey, getSharedSecret, utils, lengths } = ecdh(Point, ecdsaOpts);\n    const defaultSigOpts = {\n        prehash: false,\n        lowS: typeof ecdsaOpts.lowS === 'boolean' ? ecdsaOpts.lowS : false,\n        format: undefined, //'compact' as ECDSASigFormat,\n        extraEntropy: false,\n    };\n    const defaultSigOpts_format = 'compact';\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function validateRS(title, num) {\n        if (!Fn.isValidNot0(num))\n            throw new Error(`invalid signature ${title}: out of range 1..Point.Fn.ORDER`);\n        return num;\n    }\n    function validateSigLength(bytes, format) {\n        validateSigFormat(format);\n        const size = lengths.signature;\n        const sizer = format === 'compact' ? size : format === 'recovered' ? size + 1 : undefined;\n        return abytes(bytes, sizer, `${format} signature`);\n    }\n    /**\n     * ECDSA signature with its (r, s) properties. Supports compact, recovered & DER representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = validateRS('r', r); // r in [1..N-1];\n            this.s = validateRS('s', s); // s in [1..N-1];\n            if (recovery != null)\n                this.recovery = recovery;\n            Object.freeze(this);\n        }\n        static fromBytes(bytes, format = defaultSigOpts_format) {\n            validateSigLength(bytes, format);\n            let recid;\n            if (format === 'der') {\n                const { r, s } = DER.toSig(abytes(bytes));\n                return new Signature(r, s);\n            }\n            if (format === 'recovered') {\n                recid = bytes[0];\n                format = 'compact';\n                bytes = bytes.subarray(1);\n            }\n            const L = Fn.BYTES;\n            const r = bytes.subarray(0, L);\n            const s = bytes.subarray(L, L * 2);\n            return new Signature(Fn.fromBytes(r), Fn.fromBytes(s), recid);\n        }\n        static fromHex(hex, format) {\n            return this.fromBytes(hexToBytes(hex), format);\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(messageHash) {\n            const FIELD_ORDER = Fp.ORDER;\n            const { r, s, recovery: rec } = this;\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            // ECDSA recovery is hard for cofactor > 1 curves.\n            // In sign, `r = q.x mod n`, and here we recover q.x from r.\n            // While recovering q.x >= n, we need to add r+n for cofactor=1 curves.\n            // However, for cofactor>1, r+n may not get q.x:\n            // r+n*i would need to be done instead where i is unknown.\n            // To easily get i, we either need to:\n            // a. increase amount of valid recid values (4, 5...); OR\n            // b. prohibit non-prime-order signatures (recid > 1).\n            const hasCofactor = CURVE_ORDER * _2n < FIELD_ORDER;\n            if (hasCofactor && rec > 1)\n                throw new Error('recovery id is ambiguous for h>1 curve');\n            const radj = rec === 2 || rec === 3 ? r + CURVE_ORDER : r;\n            if (!Fp.isValid(radj))\n                throw new Error('recovery id 2 or 3 invalid');\n            const x = Fp.toBytes(radj);\n            const R = Point.fromBytes(concatBytes(pprefix((rec & 1) === 0), x));\n            const ir = Fn.inv(radj); // r^-1\n            const h = bits2int_modN(ensureBytes('msgHash', messageHash)); // Truncate hash\n            const u1 = Fn.create(-h * ir); // -hr^-1\n            const u2 = Fn.create(s * ir); // sr^-1\n            // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1). unsafe is fine: there is no private data.\n            const Q = Point.BASE.multiplyUnsafe(u1).add(R.multiplyUnsafe(u2));\n            if (Q.is0())\n                throw new Error('point at infinify');\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        toBytes(format = defaultSigOpts_format) {\n            validateSigFormat(format);\n            if (format === 'der')\n                return hexToBytes(DER.hexFromSig(this));\n            const r = Fn.toBytes(this.r);\n            const s = Fn.toBytes(this.s);\n            if (format === 'recovered') {\n                if (this.recovery == null)\n                    throw new Error('recovery bit must be present');\n                return concatBytes(Uint8Array.of(this.recovery), r, s);\n            }\n            return concatBytes(r, s);\n        }\n        toHex(format) {\n            return bytesToHex(this.toBytes(format));\n        }\n        // TODO: remove\n        assertValidity() { }\n        static fromCompact(hex) {\n            return Signature.fromBytes(ensureBytes('sig', hex), 'compact');\n        }\n        static fromDER(hex) {\n            return Signature.fromBytes(ensureBytes('sig', hex), 'der');\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, Fn.neg(this.s), this.recovery) : this;\n        }\n        toDERRawBytes() {\n            return this.toBytes('der');\n        }\n        toDERHex() {\n            return bytesToHex(this.toBytes('der'));\n        }\n        toCompactRawBytes() {\n            return this.toBytes('compact');\n        }\n        toCompactHex() {\n            return bytesToHex(this.toBytes('compact'));\n        }\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = ecdsaOpts.bits2int ||\n        function bits2int_def(bytes) {\n            // Our custom check \"just in case\", for protection against DoS\n            if (bytes.length > 8192)\n                throw new Error('input is too large');\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - fnBits; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = ecdsaOpts.bits2int_modN ||\n        function bits2int_modN_def(bytes) {\n            return Fn.create(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // Pads output with zero as per spec\n    const ORDER_MASK = bitMask(fnBits);\n    /** Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`. */\n    function int2octets(num) {\n        // IMPORTANT: the check ensures working for case `Fn.BYTES != Fn.BITS * 8`\n        aInRange('num < 2^' + fnBits, num, _0n, ORDER_MASK);\n        return Fn.toBytes(num);\n    }\n    function validateMsgAndHash(message, prehash) {\n        abytes(message, undefined, 'message');\n        return prehash ? abytes(hash(message), undefined, 'prehashed message') : message;\n    }\n    /**\n     * Steps A, D of RFC6979 3.2.\n     * Creates RFC6979 seed; converts msg/privKey to numbers.\n     * Used only in sign, not in verify.\n     *\n     * Warning: we cannot assume here that message has same amount of bytes as curve order,\n     * this will be invalid at least for P521. Also it can be bigger for P224 + SHA256.\n     */\n    function prepSig(message, privateKey, opts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { lowS, prehash, extraEntropy } = validateSigOpts(opts, defaultSigOpts);\n        message = validateMsgAndHash(message, prehash); // RFC6979 3.2 A: h1 = H(m)\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with fnBits % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(message);\n        const d = _normFnElement(Fn, privateKey); // validate secret key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (extraEntropy != null && extraEntropy !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            // gen random bytes OR pass as-is\n            const e = extraEntropy === true ? randomBytes(lengths.secretKey) : extraEntropy;\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        // To transform k => Signature:\n        // q = k⋅G\n        // r = q.x mod n\n        // s = k^-1(m + rd) mod n\n        // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n        // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n        // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            // Important: all mod() calls here must be done over N\n            const k = bits2int(kBytes); // mod n, not mod p\n            if (!Fn.isValidNot0(k))\n                return; // Valid scalars (including k) must be in 1..N-1\n            const ik = Fn.inv(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = k⋅G\n            const r = Fn.create(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            const s = Fn.create(ik * Fn.create(m + r * d)); // Not using blinding here, see comment above\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = Fn.neg(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    /**\n     * Signs message hash with a secret key.\n     *\n     * ```\n     * sign(m, d) where\n     *   k = rfc6979_hmac_drbg(m, d)\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr) / k mod n\n     * ```\n     */\n    function sign(message, secretKey, opts = {}) {\n        message = ensureBytes('message', message);\n        const { seed, k2sig } = prepSig(message, secretKey, opts); // Steps A, D of RFC6979 3.2.\n        const drbg = createHmacDrbg(hash.outputLen, Fn.BYTES, hmac);\n        const sig = drbg(seed, k2sig); // Steps B, C, D, E, F, G\n        return sig;\n    }\n    function tryParsingSig(sg) {\n        // Try to deduce format\n        let sig = undefined;\n        const isHex = typeof sg === 'string' || isBytes(sg);\n        const isObj = !isHex &&\n            sg !== null &&\n            typeof sg === 'object' &&\n            typeof sg.r === 'bigint' &&\n            typeof sg.s === 'bigint';\n        if (!isHex && !isObj)\n            throw new Error('invalid signature, expected Uint8Array, hex string or Signature instance');\n        if (isObj) {\n            sig = new Signature(sg.r, sg.s);\n        }\n        else if (isHex) {\n            try {\n                sig = Signature.fromBytes(ensureBytes('sig', sg), 'der');\n            }\n            catch (derError) {\n                if (!(derError instanceof DER.Err))\n                    throw derError;\n            }\n            if (!sig) {\n                try {\n                    sig = Signature.fromBytes(ensureBytes('sig', sg), 'compact');\n                }\n                catch (error) {\n                    return false;\n                }\n            }\n        }\n        if (!sig)\n            return false;\n        return sig;\n    }\n    /**\n     * Verifies a signature against message and public key.\n     * Rejects lowS signatures by default: see {@link ECDSAVerifyOpts}.\n     * Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   u1 = hs^-1 mod n\n     *   u2 = rs^-1 mod n\n     *   R = u1⋅G + u2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, message, publicKey, opts = {}) {\n        const { lowS, prehash, format } = validateSigOpts(opts, defaultSigOpts);\n        publicKey = ensureBytes('publicKey', publicKey);\n        message = validateMsgAndHash(ensureBytes('message', message), prehash);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const sig = format === undefined\n            ? tryParsingSig(signature)\n            : Signature.fromBytes(ensureBytes('sig', signature), format);\n        if (sig === false)\n            return false;\n        try {\n            const P = Point.fromBytes(publicKey);\n            if (lowS && sig.hasHighS())\n                return false;\n            const { r, s } = sig;\n            const h = bits2int_modN(message); // mod n, not mod p\n            const is = Fn.inv(s); // s^-1 mod n\n            const u1 = Fn.create(h * is); // u1 = hs^-1 mod n\n            const u2 = Fn.create(r * is); // u2 = rs^-1 mod n\n            const R = Point.BASE.multiplyUnsafe(u1).add(P.multiplyUnsafe(u2)); // u1⋅G + u2⋅P\n            if (R.is0())\n                return false;\n            const v = Fn.create(R.x); // v = r.x mod n\n            return v === r;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    function recoverPublicKey(signature, message, opts = {}) {\n        const { prehash } = validateSigOpts(opts, defaultSigOpts);\n        message = validateMsgAndHash(message, prehash);\n        return Signature.fromBytes(signature, 'recovered').recoverPublicKey(message).toBytes();\n    }\n    return Object.freeze({\n        keygen,\n        getPublicKey,\n        getSharedSecret,\n        utils,\n        lengths,\n        Point,\n        sign,\n        verify,\n        recoverPublicKey,\n        Signature,\n        hash,\n    });\n}\n/** @deprecated use `weierstrass` in newer releases */\nexport function weierstrassPoints(c) {\n    const { CURVE, curveOpts } = _weierstrass_legacy_opts_to_new(c);\n    const Point = weierstrassN(CURVE, curveOpts);\n    return _weierstrass_new_output_to_legacy(c, Point);\n}\nfunction _weierstrass_legacy_opts_to_new(c) {\n    const CURVE = {\n        a: c.a,\n        b: c.b,\n        p: c.Fp.ORDER,\n        n: c.n,\n        h: c.h,\n        Gx: c.Gx,\n        Gy: c.Gy,\n    };\n    const Fp = c.Fp;\n    let allowedLengths = c.allowedPrivateKeyLengths\n        ? Array.from(new Set(c.allowedPrivateKeyLengths.map((l) => Math.ceil(l / 2))))\n        : undefined;\n    const Fn = Field(CURVE.n, {\n        BITS: c.nBitLength,\n        allowedLengths: allowedLengths,\n        modFromBytes: c.wrapPrivateKey,\n    });\n    const curveOpts = {\n        Fp,\n        Fn,\n        allowInfinityPoint: c.allowInfinityPoint,\n        endo: c.endo,\n        isTorsionFree: c.isTorsionFree,\n        clearCofactor: c.clearCofactor,\n        fromBytes: c.fromBytes,\n        toBytes: c.toBytes,\n    };\n    return { CURVE, curveOpts };\n}\nfunction _ecdsa_legacy_opts_to_new(c) {\n    const { CURVE, curveOpts } = _weierstrass_legacy_opts_to_new(c);\n    const ecdsaOpts = {\n        hmac: c.hmac,\n        randomBytes: c.randomBytes,\n        lowS: c.lowS,\n        bits2int: c.bits2int,\n        bits2int_modN: c.bits2int_modN,\n    };\n    return { CURVE, curveOpts, hash: c.hash, ecdsaOpts };\n}\nexport function _legacyHelperEquat(Fp, a, b) {\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula. Takes x, returns y².\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x² * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x³ + a * x + b\n    }\n    return weierstrassEquation;\n}\nfunction _weierstrass_new_output_to_legacy(c, Point) {\n    const { Fp, Fn } = Point;\n    function isWithinCurveOrder(num) {\n        return inRange(num, _1n, Fn.ORDER);\n    }\n    const weierstrassEquation = _legacyHelperEquat(Fp, c.a, c.b);\n    return Object.assign({}, {\n        CURVE: c,\n        Point: Point,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar: (key) => _normFnElement(Fn, key),\n        weierstrassEquation,\n        isWithinCurveOrder,\n    });\n}\nfunction _ecdsa_new_output_to_legacy(c, _ecdsa) {\n    const Point = _ecdsa.Point;\n    return Object.assign({}, _ecdsa, {\n        ProjectivePoint: Point,\n        CURVE: Object.assign({}, c, nLength(Point.Fn.ORDER, Point.Fn.BITS)),\n    });\n}\n// _ecdsa_legacy\nexport function weierstrass(c) {\n    const { CURVE, curveOpts, hash, ecdsaOpts } = _ecdsa_legacy_opts_to_new(c);\n    const Point = weierstrassN(CURVE, curveOpts);\n    const signs = ecdsa(Point, hash, ecdsaOpts);\n    return _ecdsa_new_output_to_legacy(c, signs);\n}\n//# sourceMappingURL=weierstrass.js.map","/**\n * SECG secp256k1. See [pdf](https://www.secg.org/sec2-v2.pdf).\n *\n * Belongs to Koblitz curves: it has efficiently-computable GLV endomorphism ψ,\n * check out {@link EndomorphismOpts}. Seems to be rigid (not backdoored).\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha2.js';\nimport { randomBytes } from '@noble/hashes/utils.js';\nimport { createCurve } from \"./_shortw_utils.js\";\nimport { createHasher, isogenyMap, } from \"./abstract/hash-to-curve.js\";\nimport { Field, mapHashToField, mod, pow2 } from \"./abstract/modular.js\";\nimport { _normFnElement, mapToCurveSimpleSWU, } from \"./abstract/weierstrass.js\";\nimport { bytesToNumberBE, concatBytes, ensureBytes, inRange, numberToBytesBE, utf8ToBytes, } from \"./utils.js\";\n// Seems like generator was produced from some seed:\n// `Point.BASE.multiply(Point.Fn.inv(2n, N)).toAffine().x`\n// // gives short x 0x3b78ce563f89a0ed9414f5aa28ad0d96d6795f9c63n\nconst secp256k1_CURVE = {\n    p: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: BigInt(1),\n    a: BigInt(0),\n    b: BigInt(7),\n    Gx: BigInt('0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n    Gy: BigInt('0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8'),\n};\nconst secp256k1_ENDO = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    basises: [\n        [BigInt('0x3086d221a7d46bcde86c90e49284eb15'), -BigInt('0xe4437ed6010e88286f547fa90abfe4c3')],\n        [BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'), BigInt('0x3086d221a7d46bcde86c90e49284eb15')],\n    ],\n};\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1_CURVE.p;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fpk1.eql(Fpk1.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fpk1 = Field(secp256k1_CURVE.p, { sqrt: sqrtMod });\n/**\n * secp256k1 curve, ECDSA and ECDH methods.\n *\n * Field: `2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n`\n *\n * @example\n * ```js\n * import { secp256k1 } from '@noble/curves/secp256k1';\n * const { secretKey, publicKey } = secp256k1.keygen();\n * const msg = new TextEncoder().encode('hello');\n * const sig = secp256k1.sign(msg, secretKey);\n * const isValid = secp256k1.verify(sig, msg, publicKey) === true;\n * ```\n */\nexport const secp256k1 = createCurve({ ...secp256k1_CURVE, Fp: Fpk1, lowS: true, endo: secp256k1_ENDO }, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(utf8ToBytes(tag));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toBytes(true).slice(1);\nconst Pointk1 = /* @__PURE__ */ (() => secp256k1.Point)();\nconst hasEven = (y) => y % _2n === _0n;\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    const { Fn, BASE } = Pointk1;\n    const d_ = _normFnElement(Fn, priv);\n    const p = BASE.multiply(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = hasEven(p.y) ? d_ : Fn.neg(d_);\n    return { scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    const Fp = Fpk1;\n    if (!Fp.isValidNot0(x))\n        throw new Error('invalid x: Fail if x ≥ p');\n    const xx = Fp.create(x * x);\n    const c = Fp.create(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = Fp.sqrt(c); // Let y = c^(p+1)/4 mod p. Same as sqrt().\n    // Return the unique point P such that x(P) = x and\n    // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    if (!hasEven(y))\n        y = Fp.neg(y);\n    const p = Pointk1.fromAffine({ x, y });\n    p.assertValidity();\n    return p;\n}\nconst num = bytesToNumberBE;\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return Pointk1.Fn.create(num(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(secretKey) {\n    return schnorrGetExtPubKey(secretKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, secretKey, auxRand = randomBytes(32)) {\n    const { Fn } = Pointk1;\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(secretKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = Fn.toBytes(d ^ num(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    // Let k' = int(rand) mod n. Fail if k' = 0. Let R = k'⋅G\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(rand);\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(Fn.toBytes(Fn.create(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const { Fn, BASE } = Pointk1;\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(num(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = num(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!inRange(r, _1n, secp256k1_CURVE.p))\n            return false;\n        const s = num(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!inRange(s, _1n, secp256k1_CURVE.n))\n            return false;\n        // int(challenge(bytes(r)||bytes(P)||m))%n\n        const e = challenge(Fn.toBytes(r), pointToBytes(P), m);\n        // R = s⋅G - e⋅P, where -eP == (n-e)P\n        const R = BASE.multiplyUnsafe(s).add(P.multiplyUnsafe(Fn.neg(e)));\n        const { x, y } = R.toAffine();\n        // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n        if (R.is0() || !hasEven(y) || x !== r)\n            return false;\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\n/**\n * Schnorr signatures over secp256k1.\n * https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n * @example\n * ```js\n * import { schnorr } from '@noble/curves/secp256k1';\n * const { secretKey, publicKey } = schnorr.keygen();\n * // const publicKey = schnorr.getPublicKey(secretKey);\n * const msg = new TextEncoder().encode('hello');\n * const sig = schnorr.sign(msg, secretKey);\n * const isValid = schnorr.verify(sig, msg, publicKey);\n * ```\n */\nexport const schnorr = /* @__PURE__ */ (() => {\n    const size = 32;\n    const seedLength = 48;\n    const randomSecretKey = (seed = randomBytes(seedLength)) => {\n        return mapHashToField(seed, secp256k1_CURVE.n);\n    };\n    // TODO: remove\n    secp256k1.utils.randomSecretKey;\n    function keygen(seed) {\n        const secretKey = randomSecretKey(seed);\n        return { secretKey, publicKey: schnorrGetPublicKey(secretKey) };\n    }\n    return {\n        keygen,\n        getPublicKey: schnorrGetPublicKey,\n        sign: schnorrSign,\n        verify: schnorrVerify,\n        Point: Pointk1,\n        utils: {\n            randomSecretKey: randomSecretKey,\n            randomPrivateKey: randomSecretKey,\n            taggedHash,\n            // TODO: remove\n            lift_x,\n            pointToBytes,\n            numberToBytesBE,\n            bytesToNumberBE,\n            mod,\n        },\n        lengths: {\n            secretKey: size,\n            publicKey: size,\n            publicKeyHasPrefix: false,\n            signature: size * 2,\n            seed: seedLength,\n        },\n    };\n})();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fpk1, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fpk1, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fpk1.create(BigInt('-11')),\n}))();\n/** Hashing / encoding to secp256k1 points / field. RFC 9380 methods. */\nexport const secp256k1_hasher = /* @__PURE__ */ (() => createHasher(secp256k1.Point, (scalars) => {\n    const { x, y } = mapSWU(Fpk1.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fpk1.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\n/** @deprecated use `import { secp256k1_hasher } from '@noble/curves/secp256k1.js';` */\nexport const hashToCurve = /* @__PURE__ */ (() => secp256k1_hasher.hashToCurve)();\n/** @deprecated use `import { secp256k1_hasher } from '@noble/curves/secp256k1.js';` */\nexport const encodeToCurve = /* @__PURE__ */ (() => secp256k1_hasher.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","/**\n * Utilities for short weierstrass curves, combined with noble-hashes.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { weierstrass } from \"./abstract/weierstrass.js\";\n/** connects noble-curves to noble-hashes */\nexport function getHash(hash) {\n    return { hash };\n}\n/** @deprecated use new `weierstrass()` and `ecdsa()` methods */\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, hash: hash });\n    return { ...create(defHash), create };\n}\n//# sourceMappingURL=_shortw_utils.js.map","import { Buffer } from 'buffer';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport BN from 'bn.js';\nimport bs58 from 'bs58';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { serialize, deserialize, deserializeUnchecked } from 'borsh';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { blob } from '@solana/buffer-layout';\nimport { getU64Codec, getU64Encoder } from '@solana/codecs-numbers';\nimport { coerce, instance, string, tuple, literal, unknown, type, number, array, nullable, optional, boolean, record, union, create, any, assert as assert$1 } from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport { CommonClient, WebSocket } from 'rpc-websockets';\nimport { keccak_256 } from '@noble/hashes/sha3';\nimport { secp256k1 } from '@noble/curves/secp256k1';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\n\n/**\n * Ed25519 Keypair\n */\n\nconst generatePrivateKey = ed25519.utils.randomPrivateKey;\nconst generateKeypair = () => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey\n  };\n};\nconst getPublicKey = ed25519.getPublicKey;\nfunction isOnCurve(publicKey) {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nconst sign = (message, secretKey) => ed25519.sign(message, secretKey.slice(0, 32));\nconst verify = ed25519.verify;\n\nconst toBuffer = arr => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n\n// Class wrapping a plain object\nclass Struct {\n  constructor(properties) {\n    Object.assign(this, properties);\n  }\n  encode() {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n  static decode(data) {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n  static decodeUnchecked(data) {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nclass Enum extends Struct {\n  constructor(properties) {\n    super(properties);\n    this.enum = '';\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\nconst SOLANA_SCHEMA = new Map();\n\nvar _PublicKey;\n\n/**\n * Maximum length of derived pubkey seed\n */\nconst MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nconst PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\n\n/**\n * JSON object representation of PublicKey class\n */\n\nfunction isPublicKeyData(value) {\n  return value._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nclass PublicKey extends Struct {\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value) {\n    super({});\n    /** @internal */\n    this._bn = void 0;\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique() {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey) {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58() {\n    return bs58.encode(this.toBytes());\n  }\n  toJSON() {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes() {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer() {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n  get [Symbol.toStringTag]() {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString() {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(fromPublicKey, seed, programId) {\n    const buffer = Buffer.concat([fromPublicKey.toBuffer(), Buffer.from(seed), programId.toBuffer()]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(seeds, programId) {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([buffer, programId.toBuffer(), Buffer.from('ProgramDerivedAddress')]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(seeds, programId) {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(seeds, programId) {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(seeds, programId) {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData) {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n_PublicKey = PublicKey;\nPublicKey.default = new _PublicKey('11111111111111111111111111111111');\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']]\n});\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nclass Account {\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey) {\n    /** @internal */\n    this._publicKey = void 0;\n    /** @internal */\n    this._secretKey = void 0;\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey() {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey() {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n\nconst BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey('BPFLoader1111111111111111111111111111111111');\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nconst PACKET_DATA_SIZE = 1280 - 40 - 8;\nconst VERSION_PREFIX_MASK = 0x7f;\nconst SIGNATURE_LENGTH_IN_BYTES = 64;\n\nclass TransactionExpiredBlockheightExceededError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredBlockheightExceededError.prototype, 'name', {\n  value: 'TransactionExpiredBlockheightExceededError'\n});\nclass TransactionExpiredTimeoutError extends Error {\n  constructor(signature, timeoutSeconds) {\n    super(`Transaction was not confirmed in ${timeoutSeconds.toFixed(2)} seconds. It is ` + 'unknown if it succeeded or failed. Check signature ' + `${signature} using the Solana Explorer or CLI tools.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError'\n});\nclass TransactionExpiredNonceInvalidError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError'\n});\n\nclass MessageAccountKeys {\n  constructor(staticAccountKeys, accountKeysFromLookups) {\n    this.staticAccountKeys = void 0;\n    this.accountKeysFromLookups = void 0;\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n  keySegments() {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n  get(index) {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n  get length() {\n    return this.keySegments().flat().length;\n  }\n  compileInstructions(instructions) {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n    const keyIndexMap = new Map();\n    this.keySegments().flat().forEach((key, index) => {\n      keyIndexMap.set(key.toBase58(), index);\n    });\n    const findKeyIndex = key => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined) throw new Error('Encountered an unknown instruction account key during compilation');\n      return keyIndex;\n    };\n    return instructions.map(instruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta => findKeyIndex(meta.pubkey)),\n        data: instruction.data\n      };\n    });\n  }\n}\n\n/**\n * Layout for a public key\n */\nconst publicKey = (property = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nconst signature = (property = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n/**\n * Layout for a Rust String type\n */\nconst rustString = (property = 'string') => {\n  const rsl = BufferLayout.struct([BufferLayout.u32('length'), BufferLayout.u32('lengthPadding'), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars')], property);\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n  const rslShim = rsl;\n  rslShim.decode = (b, offset) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n  rslShim.encode = (str, b, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8')\n    };\n    return _encode(data, b, offset);\n  };\n  rslShim.alloc = str => {\n    return BufferLayout.u32().span + BufferLayout.u32().span + Buffer.from(str, 'utf8').length;\n  };\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nconst authorized = (property = 'authorized') => {\n  return BufferLayout.struct([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nconst lockup = (property = 'lockup') => {\n  return BufferLayout.struct([BufferLayout.ns64('unixTimestamp'), BufferLayout.ns64('epoch'), publicKey('custodian')], property);\n};\n\n/**\n *  Layout for a VoteInit object\n */\nconst voteInit = (property = 'voteInit') => {\n  return BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedVoter'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission')], property);\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nconst voteAuthorizeWithSeedArgs = (property = 'voteAuthorizeWithSeedArgs') => {\n  return BufferLayout.struct([BufferLayout.u32('voteAuthorizationType'), publicKey('currentAuthorityDerivedKeyOwnerPubkey'), rustString('currentAuthorityDerivedKeySeed'), publicKey('newAuthorized')], property);\n};\nfunction getAlloc(type, fields) {\n  const getItemAlloc = item => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({\n        layout: item\n      }, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n  let alloc = 0;\n  type.layout.fields.forEach(item => {\n    alloc += getItemAlloc(item);\n  });\n  return alloc;\n}\n\nfunction decodeLength(bytes) {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift();\n    len |= (elem & 0x7f) << size * 7;\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\nfunction encodeLength(bytes, len) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\nclass CompiledKeys {\n  constructor(payer, keyMetaMap) {\n    this.payer = void 0;\n    this.keyMetaMap = void 0;\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n  static compile(instructions, payer) {\n    const keyMetaMap = new Map();\n    const getOrInsertDefault = pubkey => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n  getMessageComponents() {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n    const writableSigners = mapEntries.filter(([, meta]) => meta.isSigner && meta.isWritable);\n    const readonlySigners = mapEntries.filter(([, meta]) => meta.isSigner && !meta.isWritable);\n    const writableNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && meta.isWritable);\n    const readonlyNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && !meta.isWritable);\n    const header = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length\n    };\n\n    // sanity checks\n    {\n      assert(writableSigners.length > 0, 'Expected at least one writable signer key');\n      const [payerAddress] = writableSigners[0];\n      assert(payerAddress === this.payer.toBase58(), 'Expected first writable signer key to be the fee payer');\n    }\n    const staticAccountKeys = [...writableSigners.map(([address]) => new PublicKey(address)), ...readonlySigners.map(([address]) => new PublicKey(address)), ...writableNonSigners.map(([address]) => new PublicKey(address)), ...readonlyNonSigners.map(([address]) => new PublicKey(address))];\n    return [header, staticAccountKeys];\n  }\n  extractTableLookup(lookupTable) {\n    const [writableIndexes, drainedWritableKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable);\n    const [readonlyIndexes, drainedReadonlyKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable);\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n    return [{\n      accountKey: lookupTable.key,\n      writableIndexes,\n      readonlyIndexes\n    }, {\n      writable: drainedWritableKeys,\n      readonly: drainedReadonlyKeys\n    }];\n  }\n\n  /** @internal */\n  drainKeysFoundInLookupTable(lookupTableEntries, keyMetaFilter) {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry => entry.equals(key));\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n\nconst END_OF_BUFFER_ERROR_MESSAGE = 'Reached end of buffer unexpectedly';\n\n/**\n * Delegates to `Array#shift`, but throws if the array is zero-length.\n */\nfunction guardedShift(byteArray) {\n  if (byteArray.length === 0) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.shift();\n}\n\n/**\n * Delegates to `Array#splice`, but throws if the section being spliced out extends past the end of\n * the array.\n */\nfunction guardedSplice(byteArray, ...args) {\n  const [start] = args;\n  if (args.length === 2 // Implies that `deleteCount` was supplied\n  ? start + (args[1] ?? 0) > byteArray.length : start >= byteArray.length) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.splice(...args);\n}\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\n\n/**\n * Message constructor arguments\n */\n\n/**\n * List of instructions to be processed atomically\n */\nclass Message {\n  constructor(args) {\n    this.header = void 0;\n    this.accountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.instructions = void 0;\n    this.indexToProgramIds = new Map();\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix => this.indexToProgramIds.set(ix.programIdIndex, this.accountKeys[ix.programIdIndex]));\n  }\n  get version() {\n    return 'legacy';\n  }\n  get staticAccountKeys() {\n    return this.accountKeys;\n  }\n  get compiledInstructions() {\n    return this.instructions.map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accountKeyIndexes: ix.accounts,\n      data: bs58.decode(ix.data)\n    }));\n  }\n  get addressTableLookups() {\n    return [];\n  }\n  getAccountKeys() {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accounts: ix.accountKeyIndexes,\n      data: bs58.encode(ix.data)\n    }));\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions\n    });\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  isProgramId(index) {\n    return this.indexToProgramIds.has(index);\n  }\n  programIds() {\n    return [...this.indexToProgramIds.values()];\n  }\n  nonProgramIds() {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n  serialize() {\n    const numKeys = this.accountKeys.length;\n    let keyCount = [];\n    encodeLength(keyCount, numKeys);\n    const instructions = this.instructions.map(instruction => {\n      const {\n        accounts,\n        programIdIndex\n      } = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n      let keyIndicesCount = [];\n      encodeLength(keyIndicesCount, accounts.length);\n      let dataCount = [];\n      encodeLength(dataCount, data.length);\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data\n      };\n    });\n    let instructionCount = [];\n    encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(instruction.keyIndicesCount.length, 'keyIndicesCount'), BufferLayout.seq(BufferLayout.u8('keyIndex'), instruction.keyIndices.length, 'keyIndices'), BufferLayout.blob(instruction.dataLength.length, 'dataLength'), BufferLayout.seq(BufferLayout.u8('userdatum'), instruction.data.length, 'data')]);\n      const length = instructionLayout.encode(instruction, instructionBuffer, instructionBufferLength);\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n    const signDataLayout = BufferLayout.struct([BufferLayout.blob(1, 'numRequiredSignatures'), BufferLayout.blob(1, 'numReadonlySignedAccounts'), BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'), BufferLayout.blob(keyCount.length, 'keyCount'), BufferLayout.seq(publicKey('key'), numKeys, 'keys'), publicKey('recentBlockhash')]);\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([this.header.numReadonlySignedAccounts]),\n      numReadonlyUnsignedAccounts: Buffer.from([this.header.numReadonlyUnsignedAccounts]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash)\n    };\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const numRequiredSignatures = guardedShift(byteArray);\n    if (numRequiredSignatures !== (numRequiredSignatures & VERSION_PREFIX_MASK)) {\n      throw new Error('Versioned messages must be deserialized with VersionedMessage.deserialize()');\n    }\n    const numReadonlySignedAccounts = guardedShift(byteArray);\n    const numReadonlyUnsignedAccounts = guardedShift(byteArray);\n    const accountCount = decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n    const recentBlockhash = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n    const instructionCount = decodeLength(byteArray);\n    let instructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountCount = decodeLength(byteArray);\n      const accounts = guardedSplice(byteArray, 0, accountCount);\n      const dataLength = decodeLength(byteArray);\n      const dataSlice = guardedSplice(byteArray, 0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data\n      });\n    }\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions\n    };\n    return new Message(messageArgs);\n  }\n}\n\n/**\n * Message constructor arguments\n */\n\nclass MessageV0 {\n  constructor(args) {\n    this.header = void 0;\n    this.staticAccountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.compiledInstructions = void 0;\n    this.addressTableLookups = void 0;\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n  get version() {\n    return 0;\n  }\n  get numAccountKeysFromLookups() {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n  getAccountKeys(args) {\n    let accountKeysFromLookups;\n    if (args && 'accountKeysFromLookups' in args && args.accountKeysFromLookups) {\n      if (this.numAccountKeysFromLookups != args.accountKeysFromLookups.writable.length + args.accountKeysFromLookups.readonly.length) {\n        throw new Error('Failed to get account keys because of a mismatch in the number of account keys from lookups');\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (args && 'addressLookupTableAccounts' in args && args.addressLookupTableAccounts) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(args.addressLookupTableAccounts);\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error('Failed to get account keys because address table lookups were not resolved');\n    }\n    return new MessageAccountKeys(this.staticAccountKeys, accountKeysFromLookups);\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce((count, lookup) => count + lookup.writableIndexes.length, 0);\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  resolveAddressTableLookups(addressLookupTableAccounts) {\n    const accountKeysFromLookups = {\n      writable: [],\n      readonly: []\n    };\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account => account.key.equals(tableLookup.accountKey));\n      if (!tableAccount) {\n        throw new Error(`Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`);\n      }\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n    }\n    return accountKeysFromLookups;\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const addressTableLookups = new Array();\n    const accountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array()\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {\n          writable,\n          readonly\n        }] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys, accountKeysFromLookups);\n    const compiledInstructions = accountKeys.compileInstructions(args.instructions);\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n  serialize() {\n    const encodedStaticAccountKeysLength = Array();\n    encodeLength(encodedStaticAccountKeysLength, this.staticAccountKeys.length);\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array();\n    encodeLength(encodedInstructionsLength, this.compiledInstructions.length);\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array();\n    encodeLength(encodedAddressTableLookupsLength, this.addressTableLookups.length);\n    const messageLayout = BufferLayout.struct([BufferLayout.u8('prefix'), BufferLayout.struct([BufferLayout.u8('numRequiredSignatures'), BufferLayout.u8('numReadonlySignedAccounts'), BufferLayout.u8('numReadonlyUnsignedAccounts')], 'header'), BufferLayout.blob(encodedStaticAccountKeysLength.length, 'staticAccountKeysLength'), BufferLayout.seq(publicKey(), this.staticAccountKeys.length, 'staticAccountKeys'), publicKey('recentBlockhash'), BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'), BufferLayout.blob(serializedInstructions.length, 'serializedInstructions'), BufferLayout.blob(encodedAddressTableLookupsLength.length, 'addressTableLookupsLength'), BufferLayout.blob(serializedAddressTableLookups.length, 'serializedAddressTableLookups')]);\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode({\n      prefix: MESSAGE_VERSION_0_PREFIX,\n      header: this.header,\n      staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n      staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n      instructionsLength: new Uint8Array(encodedInstructionsLength),\n      serializedInstructions,\n      addressTableLookupsLength: new Uint8Array(encodedAddressTableLookupsLength),\n      serializedAddressTableLookups\n    }, serializedMessage);\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n  serializeInstructions() {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array();\n      encodeLength(encodedAccountKeyIndexesLength, instruction.accountKeyIndexes.length);\n      const encodedDataLength = Array();\n      encodeLength(encodedDataLength, instruction.data.length);\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(encodedAccountKeyIndexesLength.length, 'encodedAccountKeyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), instruction.accountKeyIndexes.length, 'accountKeyIndexes'), BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'), BufferLayout.blob(instruction.data.length, 'data')]);\n      serializedLength += instructionLayout.encode({\n        programIdIndex: instruction.programIdIndex,\n        encodedAccountKeyIndexesLength: new Uint8Array(encodedAccountKeyIndexesLength),\n        accountKeyIndexes: instruction.accountKeyIndexes,\n        encodedDataLength: new Uint8Array(encodedDataLength),\n        data: instruction.data\n      }, serializedInstructions, serializedLength);\n    }\n    return serializedInstructions.slice(0, serializedLength);\n  }\n  serializeAddressTableLookups() {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array();\n      encodeLength(encodedWritableIndexesLength, lookup.writableIndexes.length);\n      const encodedReadonlyIndexesLength = Array();\n      encodeLength(encodedReadonlyIndexesLength, lookup.readonlyIndexes.length);\n      const addressTableLookupLayout = BufferLayout.struct([publicKey('accountKey'), BufferLayout.blob(encodedWritableIndexesLength.length, 'encodedWritableIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.writableIndexes.length, 'writableIndexes'), BufferLayout.blob(encodedReadonlyIndexesLength.length, 'encodedReadonlyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.readonlyIndexes.length, 'readonlyIndexes')]);\n      serializedLength += addressTableLookupLayout.encode({\n        accountKey: lookup.accountKey.toBytes(),\n        encodedWritableIndexesLength: new Uint8Array(encodedWritableIndexesLength),\n        writableIndexes: lookup.writableIndexes,\n        encodedReadonlyIndexesLength: new Uint8Array(encodedReadonlyIndexesLength),\n        readonlyIndexes: lookup.readonlyIndexes\n      }, serializedAddressTableLookups, serializedLength);\n    }\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n  static deserialize(serializedMessage) {\n    let byteArray = [...serializedMessage];\n    const prefix = guardedShift(byteArray);\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(prefix !== maskedPrefix, `Expected versioned message but received legacy message`);\n    const version = maskedPrefix;\n    assert(version === 0, `Expected versioned message with version 0 but found version ${version}`);\n    const header = {\n      numRequiredSignatures: guardedShift(byteArray),\n      numReadonlySignedAccounts: guardedShift(byteArray),\n      numReadonlyUnsignedAccounts: guardedShift(byteArray)\n    };\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH)));\n    }\n    const recentBlockhash = bs58.encode(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n    const instructionCount = decodeLength(byteArray);\n    const compiledInstructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountKeyIndexesLength = decodeLength(byteArray);\n      const accountKeyIndexes = guardedSplice(byteArray, 0, accountKeyIndexesLength);\n      const dataLength = decodeLength(byteArray);\n      const data = new Uint8Array(guardedSplice(byteArray, 0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data\n      });\n    }\n    const addressTableLookupsCount = decodeLength(byteArray);\n    const addressTableLookups = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = decodeLength(byteArray);\n      const writableIndexes = guardedSplice(byteArray, 0, writableIndexesLength);\n      const readonlyIndexesLength = decodeLength(byteArray);\n      const readonlyIndexes = guardedSplice(byteArray, 0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes\n      });\n    }\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n}\n\n// eslint-disable-next-line no-redeclare\nconst VersionedMessage = {\n  deserializeMessageVersion(serializedMessage) {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n  deserialize: serializedMessage => {\n    const version = VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(`Transaction message version ${version} deserialization is not supported`);\n    }\n  }\n};\n\n/** @internal */\n\n/**\n * Transaction signature as base-58 encoded string\n */\n\nlet TransactionStatus = /*#__PURE__*/function (TransactionStatus) {\n  TransactionStatus[TransactionStatus[\"BLOCKHEIGHT_EXCEEDED\"] = 0] = \"BLOCKHEIGHT_EXCEEDED\";\n  TransactionStatus[TransactionStatus[\"PROCESSED\"] = 1] = \"PROCESSED\";\n  TransactionStatus[TransactionStatus[\"TIMED_OUT\"] = 2] = \"TIMED_OUT\";\n  TransactionStatus[TransactionStatus[\"NONCE_INVALID\"] = 3] = \"NONCE_INVALID\";\n  return TransactionStatus;\n}({});\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\n\n/**\n * Configuration object for Transaction.serialize()\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction Instruction class\n */\nclass TransactionInstruction {\n  constructor(opts) {\n    /**\n     * Public keys to include in this transaction\n     * Boolean represents whether this pubkey needs to sign the transaction\n     */\n    this.keys = void 0;\n    /**\n     * Program Id to execute\n     */\n    this.programId = void 0;\n    /**\n     * Program input\n     */\n    this.data = Buffer.alloc(0);\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      keys: this.keys.map(({\n        pubkey,\n        isSigner,\n        isWritable\n      }) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data]\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction class\n */\nclass Transaction {\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature() {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n\n  // Construct a transaction using a durable nonce\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts) {\n    /**\n     * Signatures for the transaction.  Typically created by invoking the\n     * `sign()` method\n     */\n    this.signatures = [];\n    this.feePayer = void 0;\n    /**\n     * The instructions to atomically execute\n     */\n    this.instructions = [];\n    /**\n     * A recent transaction id. Must be populated by the caller\n     */\n    this.recentBlockhash = void 0;\n    /**\n     * the last block chain can advance to before tx is declared expired\n     * */\n    this.lastValidBlockHeight = void 0;\n    /**\n     * Optional Nonce information. If populated, transaction will use a durable\n     * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n     */\n    this.nonceInfo = void 0;\n    /**\n     * If this is a nonce transaction this represents the minimum slot from which\n     * to evaluate if the nonce has advanced when attempting to confirm the\n     * transaction. This protects against a case where the transaction confirmation\n     * logic loads the nonce account from an old slot and assumes the mismatch in\n     * nonce value implies that the nonce has been advanced.\n     */\n    this.minNonceContextSlot = void 0;\n    /**\n     * @internal\n     */\n    this._message = void 0;\n    /**\n     * @internal\n     */\n    this._json = void 0;\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {\n        minContextSlot,\n        nonceInfo\n      } = opts;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {\n        blockhash,\n        lastValidBlockHeight\n      } = opts;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {\n        recentBlockhash,\n        nonceInfo\n      } = opts;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo ? {\n        nonce: this.nonceInfo.nonce,\n        nonceInstruction: this.nonceInfo.nonceInstruction.toJSON()\n      } : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({\n        publicKey\n      }) => {\n        return publicKey.toJSON();\n      })\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(...items) {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n    items.forEach(item => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage() {\n    if (this._message && JSON.stringify(this.toJSON()) === JSON.stringify(this._json)) {\n      return this._message;\n    }\n    let recentBlockhash;\n    let instructions;\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n    let feePayer;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(`Transaction instruction index ${i} has undefined program id`);\n      }\n    }\n    const programIds = [];\n    const accountMetas = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({\n          ...accountMeta\n        });\n      });\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable = uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner = uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower'\n      };\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn('Transaction references a signature that is unnecessary, ' + 'only the fee payer and instruction signer accounts should sign a transaction. ' + 'This behavior is deprecated and will throw an error in the next major version release.');\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys = [];\n    const unsignedKeys = [];\n    uniqueMetas.forEach(({\n      pubkey,\n      isSigner,\n      isWritable\n    }) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions = instructions.map(instruction => {\n      const {\n        data,\n        programId\n      } = instruction;\n      return {\n        programIdIndex: accountKeys.indexOf(programId.toString()),\n        accounts: instruction.keys.map(meta => accountKeys.indexOf(meta.pubkey.toString())),\n        data: bs58.encode(data)\n      };\n    });\n    compiledInstructions.forEach(instruction => {\n      assert(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => assert(keyIndex >= 0));\n    });\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile() {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(0, message.header.numRequiredSignatures);\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n      if (valid) return message;\n    }\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage() {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection) {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n    const seen = new Set();\n    this.signatures = signers.filter(publicKey => {\n      const key = publicKey.toString();\n      if (seen.has(key)) {\n        return false;\n      } else {\n        seen.add(key);\n        return true;\n      }\n    }).map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey\n    }));\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message, ...signers) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey, signature) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey, signature) {\n    assert(signature.length === 64);\n    const index = this.signatures.findIndex(sigpair => pubkey.equals(sigpair.publicKey));\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures = true) {\n    const signatureErrors = this._getMessageSignednessErrors(this.serializeMessage(), requireAllSignatures);\n    return !signatureErrors;\n  }\n\n  /**\n   * @internal\n   */\n  _getMessageSignednessErrors(message, requireAllSignatures) {\n    const errors = {};\n    for (const {\n      signature,\n      publicKey\n    } of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          (errors.missing ||= []).push(publicKey);\n        }\n      } else {\n        if (!verify(signature, message, publicKey.toBytes())) {\n          (errors.invalid ||= []).push(publicKey);\n        }\n      }\n    }\n    return errors.invalid || errors.missing ? errors : undefined;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config) {\n    const {\n      requireAllSignatures,\n      verifySignatures\n    } = Object.assign({\n      requireAllSignatures: true,\n      verifySignatures: true\n    }, config);\n    const signData = this.serializeMessage();\n    if (verifySignatures) {\n      const sigErrors = this._getMessageSignednessErrors(signData, requireAllSignatures);\n      if (sigErrors) {\n        let errorMessage = 'Signature verification failed.';\n        if (sigErrors.invalid) {\n          errorMessage += `\\nInvalid signature for public key${sigErrors.invalid.length === 1 ? '' : '(s)'} [\\`${sigErrors.invalid.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        if (sigErrors.missing) {\n          errorMessage += `\\nMissing signature for public key${sigErrors.missing.length === 1 ? '' : '(s)'} [\\`${sigErrors.missing.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        throw new Error(errorMessage);\n      }\n    }\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData) {\n    const {\n      signatures\n    } = this;\n    const signatureCount = [];\n    encodeLength(signatureCount, signatures.length);\n    const transactionLength = signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    assert(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({\n      signature\n    }, index) => {\n      if (signature !== null) {\n        assert(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(wireTransaction, signatureCount.length + index * 64);\n      }\n    });\n    signData.copy(wireTransaction, signatureCount.length + signatures.length * 64);\n    assert(wireTransaction.length <= PACKET_DATA_SIZE, `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`);\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const signatureCount = decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(message, signatures = []) {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature: signature == bs58.encode(DEFAULT_SIGNATURE) ? null : bs58.decode(signature),\n        publicKey: message.accountKeys[index]\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner: transaction.signatures.some(keyObj => keyObj.publicKey.toString() === pubkey.toString()) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account)\n        };\n      });\n      transaction.instructions.push(new TransactionInstruction({\n        keys,\n        programId: message.accountKeys[instruction.programIdIndex],\n        data: bs58.decode(instruction.data)\n      }));\n    });\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n    return transaction;\n  }\n}\n\nclass TransactionMessage {\n  constructor(args) {\n    this.payerKey = void 0;\n    this.instructions = void 0;\n    this.recentBlockhash = void 0;\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n  static decompile(message, args) {\n    const {\n      header,\n      compiledInstructions,\n      recentBlockhash\n    } = message;\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts\n    } = header;\n    const numWritableSignedAccounts = numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n    const numWritableUnsignedAccounts = message.staticAccountKeys.length - numRequiredSignatures - numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error('Failed to decompile message because no account keys were found');\n    }\n    const instructions = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys = [];\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(`Failed to find key for account key index ${keyIndex}`);\n        }\n        const isSigner = keyIndex < numRequiredSignatures;\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable = keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable = keyIndex - accountKeys.staticAccountKeys.length <\n          // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n          accountKeys.accountKeysFromLookups.writable.length;\n        }\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable\n        });\n      }\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(`Failed to find program id for program id index ${compiledIx.programIdIndex}`);\n      }\n      instructions.push(new TransactionInstruction({\n        programId,\n        data: toBuffer(compiledIx.data),\n        keys\n      }));\n    }\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash\n    });\n  }\n  compileToLegacyMessage() {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions\n    });\n  }\n  compileToV0Message(addressLookupTableAccounts) {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts\n    });\n  }\n}\n\n/**\n * Versioned transaction class\n */\nclass VersionedTransaction {\n  get version() {\n    return this.message.version;\n  }\n  constructor(message, signatures) {\n    this.signatures = void 0;\n    this.message = void 0;\n    if (signatures !== undefined) {\n      assert(signatures.length === message.header.numRequiredSignatures, 'Expected signatures length to be equal to the number of required signatures');\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n  serialize() {\n    const serializedMessage = this.message.serialize();\n    const encodedSignaturesLength = Array();\n    encodeLength(encodedSignaturesLength, this.signatures.length);\n    const transactionLayout = BufferLayout.struct([BufferLayout.blob(encodedSignaturesLength.length, 'encodedSignaturesLength'), BufferLayout.seq(signature(), this.signatures.length, 'signatures'), BufferLayout.blob(serializedMessage.length, 'serializedMessage')]);\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode({\n      encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n      signatures: this.signatures,\n      serializedMessage\n    }, serializedTransaction);\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n  static deserialize(serializedTransaction) {\n    let byteArray = [...serializedTransaction];\n    const signatures = [];\n    const signaturesLength = decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(new Uint8Array(guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES)));\n    }\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n  sign(signers) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(signer.publicKey));\n      assert(signerIndex >= 0, `Cannot sign with non signer key ${signer.publicKey.toBase58()}`);\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n  addSignature(publicKey, signature) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(publicKey));\n    assert(signerIndex >= 0, `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`);\n    this.signatures[signerIndex] = signature;\n  }\n}\n\n// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nconst NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nconst DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nconst NUM_SLOTS_PER_SECOND = NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nconst MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n\nconst SYSVAR_CLOCK_PUBKEY = new PublicKey('SysvarC1ock11111111111111111111111111111111');\nconst SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey('SysvarEpochSchedu1e111111111111111111111111');\nconst SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey('Sysvar1nstructions1111111111111111111111111');\nconst SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey('SysvarRecentB1ockHashes11111111111111111111');\nconst SYSVAR_RENT_PUBKEY = new PublicKey('SysvarRent111111111111111111111111111111111');\nconst SYSVAR_REWARDS_PUBKEY = new PublicKey('SysvarRewards111111111111111111111111111111');\nconst SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey('SysvarS1otHashes111111111111111111111111111');\nconst SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey('SysvarS1otHistory11111111111111111111111111');\nconst SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey('SysvarStakeHistory1111111111111111111111111');\n\nclass SendTransactionError extends Error {\n  constructor({\n    action,\n    signature,\n    transactionMessage,\n    logs\n  }) {\n    const maybeLogsOutput = logs ? `Logs: \\n${JSON.stringify(logs.slice(-10), null, 2)}. ` : '';\n    const guideText = '\\nCatch the `SendTransactionError` and call `getLogs()` on it for full details.';\n    let message;\n    switch (action) {\n      case 'send':\n        message = `Transaction ${signature} resulted in an error. \\n` + `${transactionMessage}. ` + maybeLogsOutput + guideText;\n        break;\n      case 'simulate':\n        message = `Simulation failed. \\nMessage: ${transactionMessage}. \\n` + maybeLogsOutput + guideText;\n        break;\n      default:\n        {\n          message = `Unknown action '${(a => a)(action)}'`;\n        }\n    }\n    super(message);\n    this.signature = void 0;\n    this.transactionMessage = void 0;\n    this.transactionLogs = void 0;\n    this.signature = signature;\n    this.transactionMessage = transactionMessage;\n    this.transactionLogs = logs ? logs : undefined;\n  }\n  get transactionError() {\n    return {\n      message: this.transactionMessage,\n      logs: Array.isArray(this.transactionLogs) ? this.transactionLogs : undefined\n    };\n  }\n\n  /* @deprecated Use `await getLogs()` instead */\n  get logs() {\n    const cachedLogs = this.transactionLogs;\n    if (cachedLogs != null && typeof cachedLogs === 'object' && 'then' in cachedLogs) {\n      return undefined;\n    }\n    return cachedLogs;\n  }\n  async getLogs(connection) {\n    if (!Array.isArray(this.transactionLogs)) {\n      this.transactionLogs = new Promise((resolve, reject) => {\n        connection.getTransaction(this.signature).then(tx => {\n          if (tx && tx.meta && tx.meta.logMessages) {\n            const logs = tx.meta.logMessages;\n            this.transactionLogs = logs;\n            resolve(logs);\n          } else {\n            reject(new Error('Log messages not found'));\n          }\n        }).catch(reject);\n      });\n    }\n    return await this.transactionLogs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nconst SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016\n};\nclass SolanaJSONRPCError extends Error {\n  constructor({\n    code,\n    message,\n    data\n  }, customMessage) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = void 0;\n    this.data = void 0;\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nasync function sendAndConfirmTransaction(connection, transaction, signers, options) {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendTransaction(transaction, signers, sendOptions);\n  let status;\n  if (transaction.recentBlockhash != null && transaction.lastValidBlockHeight != null) {\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      signature: signature,\n      blockhash: transaction.recentBlockhash,\n      lastValidBlockHeight: transaction.lastValidBlockHeight\n    }, options && options.commitment)).value;\n  } else if (transaction.minNonceContextSlot != null && transaction.nonceInfo != null) {\n    const {\n      nonceInstruction\n    } = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      minContextSlot: transaction.minNonceContextSlot,\n      nonceAccountPubkey,\n      nonceValue: transaction.nonceInfo.nonce,\n      signature\n    }, options && options.commitment)).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn('sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' + 'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' + 'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.');\n    }\n    status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n  }\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: 'send',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`\n      });\n    }\n    throw new Error(`Transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n// zzz\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * @internal\n */\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nfunction encodeData(type, fields) {\n  const allocLength = type.layout.span >= 0 ? type.layout.span : getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({\n    instruction: type.index\n  }, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nfunction decodeData$1(type, buffer) {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (data.instruction !== type.index) {\n    throw new Error(`invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`);\n  }\n  return data;\n}\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nconst FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct([BufferLayout.u32('version'), BufferLayout.u32('state'), publicKey('authorizedPubkey'), publicKey('nonce'), BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator')]);\nconst NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\n\n/**\n * NonceAccount class\n */\nclass NonceAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.authorizedPubkey = void 0;\n    this.nonce = void 0;\n    this.feeCalculator = void 0;\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(buffer) {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator\n    });\n  }\n}\n\nfunction u64(property) {\n  const layout = blob(8 /* bytes */, property);\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  const bigIntLayout = layout;\n  const codec = getU64Codec();\n  bigIntLayout.decode = (buffer, offset) => {\n    const src = decode(buffer, offset);\n    return codec.decode(src);\n  };\n  bigIntLayout.encode = (bigInt, buffer, offset) => {\n    const src = codec.encode(bigInt);\n    return encode(src, buffer, offset);\n  };\n  return bigIntLayout;\n}\n\n/**\n * Create account system transaction params\n */\n\n/**\n * Transfer system transaction params\n */\n\n/**\n * Assign system transaction params\n */\n\n/**\n * Create account with seed system transaction params\n */\n\n/**\n * Create nonce account system transaction params\n */\n\n/**\n * Create nonce account with seed system transaction params\n */\n\n/**\n * Initialize nonce account system instruction params\n */\n\n/**\n * Advance nonce account system instruction params\n */\n\n/**\n * Withdraw nonce account system transaction params\n */\n\n/**\n * Authorize nonce account system transaction params\n */\n\n/**\n * Allocate account system transaction params\n */\n\n/**\n * Allocate account with seed system transaction params\n */\n\n/**\n * Assign account with seed system transaction params\n */\n\n/**\n * Transfer with seed system transaction params\n */\n\n/** Decoded transfer system transaction instruction */\n\n/** Decoded transferWithSeed system transaction instruction */\n\n/**\n * System Instruction class\n */\nclass SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Create, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Transfer, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      space\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Allocate, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Assign, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      base,\n      seed,\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nconst SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('programId')])\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports')])\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('space')])\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), publicKey('programId')])\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports'), rustString('seed'), publicKey('programId')])\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nclass SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.newAccountPubkey,\n        isSigner: true,\n        isWritable: true\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports)\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    let keys = [{\n      pubkey: params.fromPubkey,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: params.newAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }];\n    if (!params.basePubkey.equals(params.fromPubkey)) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(params) {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    } else {\n      transaction.add(SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    }\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey\n    };\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer())\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {\n      lamports: params.lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nSystemProgram.programId = new PublicKey('11111111111111111111111111111111');\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nclass Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return 2 * (\n    // Every transaction requires two signatures (payer + program)\n    Math.ceil(dataLength / Loader.chunkSize) + 1 +\n    // Add one for Create transaction\n    1) // Add one for Finalize transaction\n    ;\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(connection, payer, program, programId, data) {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(data.length);\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(program.publicKey, 'confirmed');\n      let transaction = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.allocate({\n            accountPubkey: program.publicKey,\n            space: data.length\n          }));\n        }\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.assign({\n            accountPubkey: program.publicKey,\n            programId\n          }));\n        }\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.transfer({\n            fromPubkey: payer.publicKey,\n            toPubkey: program.publicKey,\n            lamports: balanceNeeded - programInfo.lamports\n          }));\n        }\n      } else {\n        transaction = new Transaction().add(SystemProgram.createAccount({\n          fromPubkey: payer.publicKey,\n          newAccountPubkey: program.publicKey,\n          lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n          space: data.length,\n          programId\n        }));\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed'\n        });\n      }\n    }\n    const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.u32('offset'), BufferLayout.u32('bytesLength'), BufferLayout.u32('bytesLengthPadding'), BufferLayout.seq(BufferLayout.u8('byte'), BufferLayout.offset(BufferLayout.u32(), -8), 'bytes')]);\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode({\n        instruction: 0,\n        // Load instruction\n        offset,\n        bytes: bytes,\n        bytesLength: 0,\n        bytesLengthPadding: 0\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }],\n        programId,\n        data\n      });\n      transactions.push(sendAndConfirmTransaction(connection, transaction, [payer, program], {\n        commitment: 'confirmed'\n      }));\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 1 // Finalize instruction\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }],\n        programId,\n        data\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(transaction, [payer, program], {\n        preflightCommitment: deployCommitment\n      });\n      const {\n        context,\n        value\n      } = await connection.confirmTransaction({\n        signature: finalizeSignature,\n        lastValidBlockHeight: transaction.lastValidBlockHeight,\n        blockhash: transaction.recentBlockhash\n      }, deployCommitment);\n      if (value.err) {\n        throw new Error(`Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`);\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve => setTimeout(resolve, Math.round(MS_PER_SLOT / 2)));\n      }\n    }\n\n    // success\n    return true;\n  }\n}\nLoader.chunkSize = CHUNK_SIZE;\n\n/**\n * @deprecated Deprecated since Solana v1.17.20.\n */\nconst BPF_LOADER_PROGRAM_ID = new PublicKey('BPFLoader2111111111111111111111111111111111');\n\n/**\n * Factory class for transactions to interact with a program loader\n *\n * @deprecated Deprecated since Solana v1.17.20.\n */\nclass BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(connection, payer, program, elf, loaderProgramId) {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar fastStableStringify$1;\nvar hasRequiredFastStableStringify;\n\nfunction requireFastStableStringify () {\n\tif (hasRequiredFastStableStringify) return fastStableStringify$1;\n\thasRequiredFastStableStringify = 1;\n\tvar objToString = Object.prototype.toString;\n\tvar objKeys = Object.keys || function(obj) {\n\t\t\tvar keys = [];\n\t\t\tfor (var name in obj) {\n\t\t\t\tkeys.push(name);\n\t\t\t}\n\t\t\treturn keys;\n\t\t};\n\n\tfunction stringify(val, isArrayProp) {\n\t\tvar i, max, str, keys, key, propVal, toStr;\n\t\tif (val === true) {\n\t\t\treturn \"true\";\n\t\t}\n\t\tif (val === false) {\n\t\t\treturn \"false\";\n\t\t}\n\t\tswitch (typeof val) {\n\t\t\tcase \"object\":\n\t\t\t\tif (val === null) {\n\t\t\t\t\treturn null;\n\t\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t\t} else {\n\t\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\t\tstr = '[';\n\t\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + ']';\n\t\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t\t// only object is left\n\t\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\t\tmax = keys.length;\n\t\t\t\t\t\tstr = \"\";\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tcase \"function\":\n\t\t\tcase \"undefined\":\n\t\t\t\treturn isArrayProp ? null : undefined;\n\t\t\tcase \"string\":\n\t\t\t\treturn JSON.stringify(val);\n\t\t\tdefault:\n\t\t\t\treturn isFinite(val) ? val : null;\n\t\t}\n\t}\n\n\tfastStableStringify$1 = function(val) {\n\t\tvar returnVal = stringify(val, false);\n\t\tif (returnVal !== undefined) {\n\t\t\treturn ''+ returnVal;\n\t\t}\n\t};\n\treturn fastStableStringify$1;\n}\n\nvar fastStableStringifyExports = /*@__PURE__*/ requireFastStableStringify();\nvar fastStableStringify = /*@__PURE__*/getDefaultExportFromCjs(fastStableStringifyExports);\n\nconst MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nclass EpochSchedule {\n  constructor(slotsPerEpoch, leaderScheduleSlotOffset, warmup, firstNormalEpoch, firstNormalSlot) {\n    /** The maximum number of slots in each epoch */\n    this.slotsPerEpoch = void 0;\n    /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n    this.leaderScheduleSlotOffset = void 0;\n    /** Indicates whether epochs start short and grow */\n    this.warmup = void 0;\n    /** The first epoch with `slotsPerEpoch` slots */\n    this.firstNormalEpoch = void 0;\n    /** The first slot of `firstNormalEpoch` */\n    this.firstNormalSlot = void 0;\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n  getEpoch(slot) {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n  getEpochAndSlotIndex(slot) {\n    if (slot < this.firstNormalSlot) {\n      const epoch = trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) - trailingZeros(MINIMUM_SLOT_PER_EPOCH) - 1;\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n  getFirstSlotInEpoch(epoch) {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (epoch - this.firstNormalEpoch) * this.slotsPerEpoch + this.firstNormalSlot;\n    }\n  }\n  getLastSlotInEpoch(epoch) {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n  getSlotsInEpoch(epoch) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n\nvar fetchImpl = globalThis.fetch;\n\nclass RpcWebSocketClient extends CommonClient {\n  constructor(address, options, generate_request_id) {\n    const webSocketFactory = url => {\n      const rpc = WebSocket(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = rpc.socket;\n      } else {\n        this.underlyingSocket = rpc;\n      }\n      return rpc;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n    this.underlyingSocket = void 0;\n  }\n  call(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(new Error('Tried to call a JSON-RPC method `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n  notify(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(new Error('Tried to send a JSON-RPC notification `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n}\n\n/**\n * @internal\n */\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nfunction decodeData(type, data) {\n  let decoded;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(`invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`);\n  }\n  return decoded;\n}\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\nclass AddressLookupTableAccount {\n  constructor(args) {\n    this.key = void 0;\n    this.state = void 0;\n    this.key = args.key;\n    this.state = args.state;\n  }\n  isActive() {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n  static deserialize(accountData) {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {\n      addresses\n    } = BufferLayout.struct([BufferLayout.seq(publicKey(), numSerializedAddresses, 'addresses')]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority: meta.authority.length !== 0 ? new PublicKey(meta.authority[0]) : undefined,\n      addresses: addresses.map(address => new PublicKey(address))\n    };\n  }\n}\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct([BufferLayout.u32('typeIndex'), u64('deactivationSlot'), BufferLayout.nu64('lastExtendedSlot'), BufferLayout.u8('lastExtendedStartIndex'), BufferLayout.u8(),\n  // option\n  BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u8(), -1), 'authority')])\n};\n\nconst URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\nfunction makeWebsocketUrl(endpoint) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [_,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  hostish, portWithColon, rest] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort = portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explicitly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to agave-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n\nconst PublicKeyFromString = coerce(instance(PublicKey), string(), value => new PublicKey(value));\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\nconst BufferFromRawAccountData = coerce(instance(Buffer), RawAccountDataResult, value => Buffer.from(value[0], 'base64'));\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nconst BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\n\n/** @internal */\n/** @internal */\n/** @internal */\n/** @internal */\n\n/** @internal */\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\n\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\n\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\n\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\n\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\n\n/**\n * @internal\n */\n\n/**\n * Extra contextual information for RPC responses\n */\n\n/**\n * Options for sending transactions\n */\n\n/**\n * Options for confirming transactions\n */\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\n\n/**\n * Options for getSignaturesForAddress\n */\n\n/**\n * RPC Response with extra contextual information\n */\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\n\n/**\n * This type represents all transaction confirmation strategies\n */\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig(commitmentOrConfig) {\n  let commitment;\n  let config;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {\n      commitment: specifiedCommitment,\n      ...specifiedConfig\n    } = commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {\n    commitment,\n    config\n  };\n}\n\n/**\n * @internal\n */\nfunction applyDefaultMemcmpEncodingToFilters(filters) {\n  return filters.map(filter => 'memcmp' in filter ? {\n    ...filter,\n    memcmp: {\n      ...filter.memcmp,\n      encoding: filter.memcmp.encoding ?? 'base58'\n    }\n  } : filter);\n}\n\n/**\n * @internal\n */\nfunction createRpcResult(result) {\n  return union([type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    result\n  }), type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    error: type({\n      code: unknown(),\n      message: string(),\n      data: optional(any())\n    })\n  })]);\n}\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult(schema) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema)\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext(value) {\n  return jsonRpcResult(type({\n    context: type({\n      slot: number()\n    }),\n    value\n  }));\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext(value) {\n  return type({\n    context: type({\n      slot: number()\n    }),\n    value\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(version, response) {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(accountKey => new PublicKey(accountKey)),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data)\n      })),\n      addressTableLookups: response.addressTableLookups\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n// Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\n\n/**\n * Configuration object for changing query behavior\n */\n\n/**\n * Information describing a cluster node\n */\n\n/**\n * Information describing a vote account\n */\n\n/**\n * A collection of cluster vote accounts\n */\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\n\nconst GetInflationGovernorResult = type({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number()\n});\n\n/**\n * The inflation reward for an epoch\n */\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(array(nullable(type({\n  epoch: number(),\n  effectiveSlot: number(),\n  amount: number(),\n  postBalance: number(),\n  commission: optional(nullable(number()))\n}))));\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(type({\n  slot: number(),\n  prioritizationFee: number()\n}));\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = type({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number()\n});\n\n/**\n * Information about the current epoch\n */\n\nconst GetEpochInfoResult = type({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number())\n});\nconst GetEpochScheduleResult = type({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number()\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([type({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = type({\n  err: TransactionErrorResult\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\n\nconst VersionResult = type({\n  'solana-core': string(),\n  'feature-set': optional(number())\n});\nconst ParsedInstructionStruct = type({\n  program: string(),\n  programId: PublicKeyFromString,\n  parsed: unknown()\n});\nconst PartiallyDecodedInstructionStruct = type({\n  programId: PublicKeyFromString,\n  accounts: array(PublicKeyFromString),\n  data: string()\n});\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n  err: nullable(union([type({}), string()])),\n  logs: nullable(array(string())),\n  accounts: optional(nullable(array(nullable(type({\n    executable: boolean(),\n    owner: string(),\n    lamports: number(),\n    data: array(string()),\n    rentEpoch: optional(number())\n  }))))),\n  unitsConsumed: optional(number()),\n  returnData: optional(nullable(type({\n    programId: string(),\n    data: tuple([string(), literal('base64')])\n  }))),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(union([ParsedInstructionStruct, PartiallyDecodedInstructionStruct]))\n  }))))\n}));\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction message from the RPC API\n */\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0.\n */\n\n/**\n * A partially decoded transaction instruction\n */\n\n/**\n * A parsed transaction message account\n */\n\n/**\n * A parsed transaction instruction\n */\n\n/**\n * A parsed address table lookup\n */\n\n/**\n * A parsed transaction message\n */\n\n/**\n * A parsed transaction\n */\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\n\n/**\n * A parsed transaction on the ledger with meta\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A block with parsed transactions\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0.\n */\n\n/**\n * A Block on the ledger with signatures only\n */\n\n/**\n * recent block production information\n */\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(type({\n  byIdentity: record(string(), array(number())),\n  range: type({\n    firstSlot: number(),\n    lastSlot: number()\n  })\n}));\n\n/**\n * A performance sample\n */\n\nfunction createRpcClient(url, httpHeaders, customFetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent) {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent;\n  {\n    if (httpAgent != null) {\n      console.warn('You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' + 'It has been ignored; `httpAgent` is only used in Node environments.');\n    }\n  }\n  let fetchWithMiddleware;\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise((resolve, reject) => {\n        try {\n          fetchMiddleware(info, init, (modifiedInfo, modifiedInit) => resolve([modifiedInfo, modifiedInit]));\n        } catch (error) {\n          reject(error);\n        }\n      });\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign({\n        'Content-Type': 'application/json'\n      }, httpHeaders || {}, COMMON_HTTP_HEADERS)\n    };\n    try {\n      let too_many_requests_retries = 5;\n      let res;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.error(`Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`);\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n  return clientBrowser;\n}\nfunction createRpcRequest(client) {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\nfunction createRpcBatchRequest(client) {\n  return requests => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n      const batch = requests.map(params => {\n        return client.request(params.methodName, params.args);\n      });\n      client.request(batch, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(GetRecentPrioritizationFeesResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(type({\n  total: number(),\n  circulating: number(),\n  nonCirculating: number(),\n  nonCirculatingAccounts: array(PublicKeyFromString)\n}));\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = type({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n});\n\n/**\n * Token address and balance.\n */\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(array(type({\n  address: PublicKeyFromString,\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: BufferFromRawAccountData,\n    rentEpoch: number()\n  })\n})));\nconst ParsedAccountDataResult = type({\n  program: string(),\n  parsed: unknown(),\n  space: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: ParsedAccountDataResult,\n    rentEpoch: number()\n  })\n})));\n\n/**\n * Pair of an account address and its balance\n */\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(array(type({\n  lamports: number(),\n  address: PublicKeyFromString\n})));\n\n/**\n * @internal\n */\nconst AccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number()\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\nconst ParsedOrRawAccountData = coerce(union([instance(Buffer), ParsedAccountDataResult]), union([RawAccountDataResult, ParsedAccountDataResult]), value => {\n  if (Array.isArray(value)) {\n    return create(value, BufferFromRawAccountData);\n  } else {\n    return value;\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number()\n});\nconst KeyedParsedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = type({\n  state: union([literal('active'), literal('inactive'), literal('activating'), literal('deactivating')]),\n  active: number(),\n  inactive: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = type({\n  parent: number(),\n  slot: number(),\n  root: number()\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = type({\n  subscription: number(),\n  result: SlotInfoResult\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([type({\n  type: union([literal('firstShredReceived'), literal('completed'), literal('optimisticConfirmation'), literal('root')]),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('createdBank'),\n  parent: number(),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('frozen'),\n  slot: number(),\n  timestamp: number(),\n  stats: type({\n    numTransactionEntries: number(),\n    numSuccessfulTransactions: number(),\n    numFailedTransactions: number(),\n    maxTransactionsPerEntry: number()\n  })\n}), type({\n  type: literal('dead'),\n  slot: number(),\n  timestamp: number(),\n  err: string()\n})]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = type({\n  subscription: number(),\n  result: SlotUpdateResult\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(union([SignatureStatusResult, SignatureReceivedResult]))\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = type({\n  subscription: number(),\n  result: number()\n});\nconst ContactInfoResult = type({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string())\n});\nconst VoteAccountInfoResult = type({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number())\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(type({\n  current: array(VoteAccountInfoResult),\n  delinquent: array(VoteAccountInfoResult)\n}));\nconst ConfirmationStatus = union([literal('processed'), literal('confirmed'), literal('finalized')]);\nconst SignatureStatusResponse = type({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus)\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(array(nullable(SignatureStatusResponse)));\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\nconst AddressTableLookupStruct = type({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number())\n});\nconst ConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(string()),\n    header: type({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number()\n    }),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    })),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct))\n  })\n});\nconst AnnotatedAccountKey = type({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')]))\n});\nconst ConfirmedTransactionAccountsModeResult = type({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string())\n});\nconst ParsedInstructionResult = type({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString\n});\nconst RawInstructionResult = type({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString\n});\nconst InstructionResult = union([RawInstructionResult, ParsedInstructionResult]);\nconst UnknownInstructionResult = union([type({\n  parsed: unknown(),\n  program: string(),\n  programId: string()\n}), type({\n  accounts: array(string()),\n  data: string(),\n  programId: string()\n})]);\nconst ParsedOrRawInstruction = coerce(InstructionResult, UnknownInstructionResult, value => {\n  if ('accounts' in value) {\n    return create(value, RawInstructionResult);\n  } else {\n    return create(value, ParsedInstructionResult);\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct)))\n  })\n});\nconst TokenBalanceResult = type({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  programId: optional(string()),\n  uiTokenAmount: TokenAmountResult\n});\nconst LoadedAddressesResult = type({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString)\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    }))\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n  costUnits: optional(number())\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(ParsedOrRawInstruction)\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n  costUnits: optional(number())\n});\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = type({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number()))\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ParsedConfirmedTransactionResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  signatures: array(string()),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  meta: nullable(ConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  transaction: ConfirmedTransactionResult,\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  transaction: ParsedConfirmedTransactionResult,\n  meta: nullable(ParsedConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  lastValidBlockHeight: number()\n}));\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\nconst PerfSampleResult = type({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number()\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(array(PerfSampleResult));\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(nullable(type({\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n})));\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\n\n/**\n * Parsed account data\n */\n\n/**\n * Stake Activation data\n */\n\n/**\n * Data slice argument for getProgramAccounts\n */\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\n\n/**\n * A filter object for getProgramAccounts\n */\n\n/**\n * Configuration object for getProgramAccounts requests\n */\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\n\n/**\n * Configuration object for getMultipleAccounts\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getNonce`\n */\n\n/**\n * Configuration object for `getNonceAndContext`\n */\n\n/**\n * Information describing an account\n */\n\n/**\n * Account information identified by pubkey\n */\n\n/**\n * Callback function for account change notifications\n */\n\n/**\n * Callback function for program account change notifications\n */\n\n/**\n * Callback function for slot change notifications\n */\n\n/**\n * Callback function for slot update notifications\n */\n\n/**\n * Callback function for signature status notifications\n */\n\n/**\n * Signature status notification with transaction result\n */\n\n/**\n * Signature received notification\n */\n\n/**\n * Callback function for signature notifications\n */\n\n/**\n * Signature subscription options\n */\n\n/**\n * Callback function for root change notifications\n */\n\n/**\n * @internal\n */\nconst LogsResult = type({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string()\n});\n\n/**\n * Logs result.\n */\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = type({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number()\n});\n\n/**\n * Filter for log subscriptions.\n */\n\n/**\n * Callback function for log notifications.\n */\n\n/**\n * Signature result\n */\n\n/**\n * Transaction error\n */\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Signature status\n */\n\n/**\n * A confirmed signature with its status\n */\n\n/**\n * An object defining headers to be passed to the RPC server\n */\n\n/**\n * The type of the JavaScript `fetch()` API\n */\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\n\n/**\n * Configuration for instantiating a Connection\n */\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${\"1.0.0-maintenance\"}`\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nclass Connection {\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(endpoint, _commitmentOrConfig) {\n    /** @internal */\n    this._commitment = void 0;\n    /** @internal */\n    this._confirmTransactionInitialTimeout = void 0;\n    /** @internal */\n    this._rpcEndpoint = void 0;\n    /** @internal */\n    this._rpcWsEndpoint = void 0;\n    /** @internal */\n    this._rpcClient = void 0;\n    /** @internal */\n    this._rpcRequest = void 0;\n    /** @internal */\n    this._rpcBatchRequest = void 0;\n    /** @internal */\n    this._rpcWebSocket = void 0;\n    /** @internal */\n    this._rpcWebSocketConnected = false;\n    /** @internal */\n    this._rpcWebSocketHeartbeat = null;\n    /** @internal */\n    this._rpcWebSocketIdleTimeout = null;\n    /** @internal\n     * A number that we increment every time an active connection closes.\n     * Used to determine whether the same socket connection that was open\n     * when an async operation started is the same one that's active when\n     * its continuation fires.\n     *\n     */\n    this._rpcWebSocketGeneration = 0;\n    /** @internal */\n    this._disableBlockhashCaching = false;\n    /** @internal */\n    this._pollingBlockhash = false;\n    /** @internal */\n    this._blockhashInfo = {\n      latestBlockhash: null,\n      lastFetch: 0,\n      transactionSignatures: [],\n      simulatedSignatures: []\n    };\n    /** @internal */\n    this._nextClientSubscriptionId = 0;\n    /** @internal */\n    this._subscriptionDisposeFunctionsByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionHashByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionStateChangeCallbacksByHash = {};\n    /** @internal */\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    /** @internal */\n    this._subscriptionsByHash = {};\n    /**\n     * Special case.\n     * After a signature is processed, RPCs automatically dispose of the\n     * subscription on the server side. We need to track which of these\n     * subscriptions have been disposed in such a way, so that we know\n     * whether the client is dealing with a not-yet-processed signature\n     * (in which case we must tear down the server subscription) or an\n     * already-processed signature (in which case the client can simply\n     * clear out the subscription locally without telling the server).\n     *\n     * NOTE: There is a proposal to eliminate this special case, here:\n     * https://github.com/solana-labs/solana/issues/18892\n     */\n    /** @internal */\n    this._subscriptionsAutoDisposedByRpc = new Set();\n    /*\n     * Returns the current block height of the node\n     */\n    this.getBlockHeight = (() => {\n      const requestPromises = {};\n      return async commitmentOrConfig => {\n        const {\n          commitment,\n          config\n        } = extractCommitmentFromConfig(commitmentOrConfig);\n        const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n        const requestHash = fastStableStringify(args);\n        requestPromises[requestHash] = requestPromises[requestHash] ?? (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(res.error, 'failed to get block height information');\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n        return await requestPromises[requestHash];\n      };\n    })();\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (_commitmentOrConfig && typeof _commitmentOrConfig === 'string') {\n      this._commitment = _commitmentOrConfig;\n    } else if (_commitmentOrConfig) {\n      this._commitment = _commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout = _commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = _commitmentOrConfig.wsEndpoint;\n      httpHeaders = _commitmentOrConfig.httpHeaders;\n      fetch = _commitmentOrConfig.fetch;\n      fetchMiddleware = _commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = _commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = _commitmentOrConfig.httpAgent;\n    }\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n    this._rpcClient = createRpcClient(endpoint, httpHeaders, fetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent);\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on('accountNotification', this._wsOnAccountNotification.bind(this));\n    this._rpcWebSocket.on('programNotification', this._wsOnProgramAccountNotification.bind(this));\n    this._rpcWebSocket.on('slotNotification', this._wsOnSlotNotification.bind(this));\n    this._rpcWebSocket.on('slotsUpdatesNotification', this._wsOnSlotUpdatesNotification.bind(this));\n    this._rpcWebSocket.on('signatureNotification', this._wsOnSignatureNotification.bind(this));\n    this._rpcWebSocket.on('rootNotification', this._wsOnRootNotification.bind(this));\n    this._rpcWebSocket.on('logsNotification', this._wsOnLogsNotification.bind(this));\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment() {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint() {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(publicKey, commitmentOrConfig) {\n    /** @internal */\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get balance for ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(publicKey, commitmentOrConfig) {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get balance of account ' + publicKey.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot) {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get block time for slot ${slot}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot() {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get minimum ledger slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock() {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get first available block');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(config) {\n    let configArg = {};\n    if (typeof config === 'string') {\n      configArg = {\n        commitment: config\n      };\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: config && config.commitment || this.commitment\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment\n      };\n    }\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(tokenMintAddress, commitment) {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(tokenAddress, commitment) {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token account balance');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(ownerAddress, filter, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(ownerAddress, filter, commitment) {\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(config) {\n    const arg = {\n      ...config,\n      commitment: config && config.commitment || this.commitment\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(mintAddress, commitment) {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(AccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(publicKey, commitmentOrConfig) {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + e);\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(publicKeys, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(AccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(publicKeys, commitmentOrConfig) {\n    const res = await this.getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig);\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   *\n   * @deprecated Deprecated since RPC v1.18; will be removed in a future version.\n   */\n  async getStakeActivation(publicKey, commitmentOrConfig, epoch) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get Stake Activation ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const {\n      encoding,\n      ...configWithoutEncoding\n    } = config || {};\n    const args = this._buildArgs([programId.toBase58()], commitment, encoding || 'base64', {\n      ...configWithoutEncoding,\n      ...(configWithoutEncoding.filters ? {\n        filters: applyDefaultMemcmpEncodingToFilters(configWithoutEncoding.filters)\n      } : null)\n    });\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res = configWithoutEncoding.withContext === true ? create(unsafeRes, jsonRpcResultAndContext(baseSchema)) : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs([programId.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(strategy, commitment) {\n    let rawSignature;\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy;\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    }\n  }\n  getCancellationPromise(signal) {\n    return new Promise((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n  getTransactionConfirmationPromise({\n    commitment,\n    signature\n  }) {\n    let signatureSubscriptionId;\n    let disposeSignatureSubscriptionStateChangeObserver;\n    let done = false;\n    const confirmationPromise = new Promise((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(signature, (result, context) => {\n          signatureSubscriptionId = undefined;\n          const response = {\n            context,\n            value: result\n          };\n          resolve({\n            __type: TransactionStatus.PROCESSED,\n            response\n          });\n        }, commitment);\n        const subscriptionSetupPromise = new Promise(resolveSubscriptionSetup => {\n          if (signatureSubscriptionId == null) {\n            resolveSubscriptionSetup();\n          } else {\n            disposeSignatureSubscriptionStateChangeObserver = this._onSubscriptionStateChange(signatureSubscriptionId, nextState => {\n              if (nextState === 'subscribed') {\n                resolveSubscriptionSetup();\n              }\n            });\n          }\n        });\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {\n            context,\n            value\n          } = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip':\n                {\n                  if (value.confirmationStatus === 'processed') {\n                    return;\n                  }\n                  break;\n                }\n              case 'finalized':\n              case 'max':\n              case 'root':\n                {\n                  if (value.confirmationStatus === 'processed' || value.confirmationStatus === 'confirmed') {\n                    return;\n                  }\n                  break;\n                }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value\n              }\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {\n      abortConfirmation,\n      confirmationPromise\n    };\n  }\n  async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      lastValidBlockHeight,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({\n          __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED\n        });\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      let currentNonceValue = nonceValue;\n      let lastCheckedSlot = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {\n            context,\n            value: nonceAccount\n          } = await this.getNonceAndContext(nonceAccountPubkey, {\n            commitment,\n            minContextSlot\n          });\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (status.context.slot < (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {\n            confirmationStatus\n          } = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (confirmationStatus !== 'processed' && confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              (_ => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {\n              err: signatureStatus.value.err\n            }\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip':\n          {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n      }\n      timeoutId = setTimeout(() => resolve({\n        __type: TransactionStatus.TIMED_OUT,\n        timeoutMs\n      }), timeoutMs);\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    let result;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(signature, outcome.timeoutMs / 1000);\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes() {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(startSlot, limit) {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(signature, config) {\n    const {\n      context,\n      value: values\n    } = await this.getSignatureStatuses([signature], config);\n    assert(values.length === 1);\n    const value = values[0];\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(signatures, config) {\n    const params = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction count');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since RPC v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment) {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(addresses, epoch, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([addresses.map(pubkey => pubkey.toBase58())], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate() {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule() {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(epochSchedule.slotsPerEpoch, epochSchedule.leaderScheduleSlotOffset, epochSchedule.warmup, epochSchedule.firstNormalEpoch, epochSchedule.firstNormalSlot);\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule() {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(dataLength, commitment) {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest('getMinimumBalanceForRentExemption', args);\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since RPC v1.9.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment) {\n    const {\n      context,\n      value: {\n        blockhash\n      }\n    } = await this.getLatestBlockhashAndContext(commitment);\n    const feeCalculator = {\n      get lamportsPerSignature() {\n        throw new Error('The capability to fetch `lamportsPerSignature` using the `getRecentBlockhash` API is ' + 'no longer offered by the network. Use the `getFeeForMessage` API to obtain the fee ' + 'for a given message.');\n      },\n      toJSON() {\n        return {};\n      }\n    };\n    return {\n      context,\n      value: {\n        blockhash,\n        feeCalculator\n      }\n    };\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(limit) {\n    const unsafeRes = await this._rpcRequest('getRecentPerformanceSamples', limit ? [limit] : []);\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent performance samples');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since RPC v1.9.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(blockhash, commitment) {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeCalculatorForBlockhash', args);\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {\n      context,\n      value\n    } = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(message, commitment) {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(config) {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest('getRecentPrioritizationFees', args);\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent prioritization fees');\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since RPC v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(commitment) {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(commitmentOrConfig) {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(blockhash, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs([blockhash], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to determine if the blockhash `' + blockhash + '`is valid');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion() {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash() {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            const {\n              result\n            } = res;\n            return result ? {\n              ...result,\n              transactions: result.transactions.map(({\n                transaction,\n                meta,\n                version\n              }) => ({\n                meta,\n                transaction: {\n                  ...transaction,\n                  message: versionedMessageFromResponse(version, transaction.message)\n                },\n                version\n              }))\n            } : null;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get confirmed block');\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetParsedBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get block');\n    }\n  }\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(configOrCommitment) {\n    let extra;\n    let commitment;\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {\n        commitment: c,\n        ...rest\n      } = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block production information');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(signature, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(result.version, result.transaction.message)\n      }\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(signature, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(result.version, result.transaction.message)\n        }\n      };\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message\n          }\n        };\n      })\n    };\n    return {\n      ...block,\n      transactions: block.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        return {\n          meta,\n          transaction: Transaction.populate(transaction.message, transaction.signatures)\n        };\n      })\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(startSlot, endSlot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed(endSlot !== undefined ? [startSlot, endSlot] : [startSlot], commitment);\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures)\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(signatures, commitment) {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since RPC v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(address, startSlot, endSlot) {\n    let options = {};\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(startSlot, 'finalized');\n        if (block.signatures.length > 0) {\n          options.until = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(address, options);\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getSignaturesForAddress} instead.\n   */\n  async getConfirmedSignaturesForAddress2(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getConfirmedSignaturesForAddress2', args);\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed signatures for address');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signatures for address');\n    }\n    return res.result;\n  }\n  async getAddressLookupTable(accountKey, config) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(accountKey, config);\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data)\n      });\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(nonceAccount, commitmentOrConfig) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(nonceAccount, commitmentOrConfig);\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(nonceAccount, commitmentOrConfig) {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get nonce for account ' + nonceAccount.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(to, lamports) {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [to.toBase58(), lamports]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `airdrop to ${to.toBase58()} failed`);\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(disableCache) {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash() {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash ? cachedLatestBlockhash.blockhash : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: []\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n      throw new Error(`Unable to obtain a new blockhash after ${Date.now() - startTime}ms`);\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(config) {\n    const {\n      commitment,\n      config: configArg\n    } = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get stake minimum delegation`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(transactionOrMessage, configOrSigners, includeAccounts) {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction = Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n      const config = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n      if (configOrSigners && typeof configOrSigners === 'object' && 'innerInstructions' in configOrSigners) {\n        config.innerInstructions = configOrSigners.innerInstructions;\n      }\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        if (!signers) break;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.simulatedSignatures.includes(signature) && !this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = {\n      encoding: 'base64',\n      commitment: this.commitment\n    };\n    if (includeAccounts) {\n      const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map(key => key.toBase58());\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses\n      };\n    }\n    if (signers) {\n      config.sigVerify = true;\n    }\n    if (configOrSigners && typeof configOrSigners === 'object' && 'innerInstructions' in configOrSigners) {\n      config.innerInstructions = configOrSigners.innerInstructions;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError({\n        action: 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(transaction, signersOrOptions, options) {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(rawTransaction, options) {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(encodedTransaction, options);\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(encodedTransaction, options) {\n    const config = {\n      encoding: 'base64'\n    };\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment = skipPreflight === true ? 'processed' // FIXME Remove when https://github.com/anza-xyz/agave/pull/483 is deployed.\n    : options && options.preflightCommitment || this.commitment;\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs = undefined;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError({\n        action: skipPreflight ? 'send' : 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration = (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(this._subscriptionsByHash).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending'\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _setSubscription(hash, nextSubscription) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onSubscriptionStateChange(clientSubscriptionId, callback) {\n    const hash = this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash] ||= new Set();\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(`Error when closing socket connection: ${err.message}`);\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n    await Promise.all(\n    // Don't be tempted to change this to `Object.entries`. We call\n    // `_updateSubscriptions` recursively when processing the state,\n    // so it's important that we look up the *current* version of\n    // each subscription, every time we process a hash.\n    Object.keys(this._subscriptionsByHash).map(async hash => {\n      const subscription = this._subscriptionsByHash[hash];\n      if (subscription === undefined) {\n        // This entry has since been deleted. Skip.\n        return;\n      }\n      switch (subscription.state) {\n        case 'pending':\n        case 'unsubscribed':\n          if (subscription.callbacks.size === 0) {\n            /**\n             * You can end up here when:\n             *\n             * - a subscription has recently unsubscribed\n             *   without having new callbacks added to it\n             *   while the unsubscribe was in flight, or\n             * - when a pending subscription has its\n             *   listeners removed before a request was\n             *   sent to the server.\n             *\n             * Being that nobody is interested in this\n             * subscription any longer, delete it.\n             */\n            delete this._subscriptionsByHash[hash];\n            if (subscription.state === 'unsubscribed') {\n              delete this._subscriptionCallbacksByServerSubscriptionId[subscription.serverSubscriptionId];\n            }\n            await this._updateSubscriptions();\n            return;\n          }\n          await (async () => {\n            const {\n              args,\n              method\n            } = subscription;\n            try {\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'subscribing'\n              });\n              const serverSubscriptionId = await this._rpcWebSocket.call(method, args);\n              this._setSubscription(hash, {\n                ...subscription,\n                serverSubscriptionId,\n                state: 'subscribed'\n              });\n              this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId] = subscription.callbacks;\n              await this._updateSubscriptions();\n            } catch (e) {\n              console.error(`Received ${e instanceof Error ? '' : 'JSON-RPC '}error calling \\`${method}\\``, {\n                args,\n                error: e\n              });\n              if (!isCurrentConnectionStillActive()) {\n                return;\n              }\n              // TODO: Maybe add an 'errored' state or a retry limit?\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'pending'\n              });\n              await this._updateSubscriptions();\n            }\n          })();\n          break;\n        case 'subscribed':\n          if (subscription.callbacks.size === 0) {\n            // By the time we successfully set up a subscription\n            // with the server, the client stopped caring about it.\n            // Tear it down now.\n            await (async () => {\n              const {\n                serverSubscriptionId,\n                unsubscribeMethod\n              } = subscription;\n              if (this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)) {\n                /**\n                 * Special case.\n                 * If we're dealing with a subscription that has been auto-\n                 * disposed by the RPC, then we can skip the RPC call to\n                 * tear down the subscription here.\n                 *\n                 * NOTE: There is a proposal to eliminate this special case, here:\n                 * https://github.com/solana-labs/solana/issues/18892\n                 */\n                this._subscriptionsAutoDisposedByRpc.delete(serverSubscriptionId);\n              } else {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                try {\n                  await this._rpcWebSocket.call(unsubscribeMethod, [serverSubscriptionId]);\n                } catch (e) {\n                  if (e instanceof Error) {\n                    console.error(`${unsubscribeMethod} error:`, e.message);\n                  }\n                  if (!isCurrentConnectionStillActive()) {\n                    return;\n                  }\n                  // TODO: Maybe add an 'errored' state or a retry limit?\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'subscribed'\n                  });\n                  await this._updateSubscriptions();\n                  return;\n                }\n              }\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'unsubscribed'\n              });\n              await this._updateSubscriptions();\n            })();\n          }\n          break;\n      }\n    }));\n  }\n\n  /**\n   * @internal\n   */\n  _handleServerNotification(serverSubscriptionId, callbackArgs) {\n    const callbacks = this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n        // I failed to find a way to convince TypeScript that `cb` is of type\n        // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n        // See https://github.com/microsoft/TypeScript/issues/47615\n        // @ts-ignore\n        ...callbackArgs);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, AccountNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _makeSubscription(subscriptionConfig,\n  /**\n   * When preparing `args` for a call to `_makeSubscription`, be sure\n   * to carefully apply a default `commitment` property, if necessary.\n   *\n   * - If the user supplied a `commitment` use that.\n   * - Otherwise, if the `Connection::commitment` is set, use that.\n   * - Otherwise, set it to the RPC server default: `finalized`.\n   *\n   * This is extremely important to ensure that these two fundamentally\n   * identical subscriptions produce the same identifying hash:\n   *\n   * - A subscription made without specifying a commitment.\n   * - A subscription made where the commitment specified is the same\n   *   as the default applied to the subscription above.\n   *\n   * Example; these two subscriptions must produce the same hash:\n   *\n   * - An `accountSubscribe` subscription for `'PUBKEY'`\n   * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n   *   `'finalized'`.\n   *\n   * See the 'making a subscription with defaulted params omitted' test\n   * in `connection-subscriptions.ts` for more.\n   */\n  args) {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify([subscriptionConfig.method, args]);\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending'\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(subscription !== undefined, `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`);\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param config\n   * @return subscription id\n   */\n\n  /** @deprecated Instead, pass in an {@link AccountSubscriptionConfig} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  onAccountChange(publicKey, callback, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64', config);\n    return this._makeSubscription({\n      callback,\n      method: 'accountSubscribe',\n      unsubscribeMethod: 'accountUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'account change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, ProgramAccountNotificationResult);\n    this._handleServerNotification(subscription, [{\n      accountId: result.value.pubkey,\n      accountInfo: result.value.account\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param config\n   * @return subscription id\n   */\n\n  /** @deprecated Instead, pass in a {@link ProgramAccountSubscriptionConfig} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  onProgramAccountChange(programId, callback, commitmentOrConfig, maybeFilters) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([programId.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64' /* encoding */, config ? config : maybeFilters ? {\n      filters: applyDefaultMemcmpEncodingToFilters(maybeFilters)\n    } : undefined /* extra */);\n    return this._makeSubscription({\n      callback,\n      method: 'programSubscribe',\n      unsubscribeMethod: 'programUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'program account change');\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(filter, callback, commitment) {\n    const args = this._buildArgs([typeof filter === 'object' ? {\n      mentions: [filter.toString()]\n    } : filter], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n    return this._makeSubscription({\n      callback,\n      method: 'logsSubscribe',\n      unsubscribeMethod: 'logsUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param clientSubscriptionId client subscription id to deregister.\n   */\n  async removeOnLogsListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, LogsNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotSubscribe',\n      unsubscribeMethod: 'slotUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotUpdateNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotsUpdatesSubscribe',\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotUpdateListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot update');\n  }\n\n  /**\n   * @internal\n   */\n\n  async _unsubscribeClientSubscription(clientSubscriptionId, subscriptionName) {\n    const dispose = this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn('Ignored unsubscribe request because an active subscription with id ' + `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` + 'could not be found.');\n    }\n  }\n  _buildArgs(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error('Using Connection with default commitment: `' + this._commitment + '`, but method requires at least `confirmed`');\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SignatureNotificationResult);\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification(subscription, result.value === 'receivedSignature' ? [{\n      type: 'received'\n    }, result.context] : [{\n      type: 'status',\n      result: result.value\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(signature, callback, commitment) {\n    const args = this._buildArgs([signature], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(signature, callback, options) {\n    const {\n      commitment,\n      ...extra\n    } = {\n      ...options,\n      commitment: options && options.commitment || this._commitment || 'finalized' // Apply connection/server default.\n    };\n    const args = this._buildArgs([signature], commitment, undefined /* encoding */, extra);\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        callback(notification, context);\n        // Signatures subscriptions are auto-removed by the RPC service\n        // so no need to explicitly send an unsubscribe message.\n        try {\n          this.removeSignatureListener(clientSubscriptionId);\n          // eslint-disable-next-line no-empty\n        } catch (_err) {\n          // Already removed.\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSignatureListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'signature result');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, RootNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'rootSubscribe',\n      unsubscribeMethod: 'rootUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeRootChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'root change');\n  }\n}\n\n/**\n * Keypair signer interface\n */\n\n/**\n * An account keypair used for signing transactions.\n */\nclass Keypair {\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair) {\n    this._keypair = void 0;\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate() {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(secretKey, options) {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed) {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey() {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey() {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nconst LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('recentSlot'), BufferLayout.u8('bumpSeed')])\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64(), BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u32(), -8), 'addresses')])\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\nclass AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [layoutType, layout] of Object.entries(LOOKUP_TABLE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == index) {\n        type = layoutType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Invalid Instruction. Should be a LookupTable Instruction');\n    }\n    return type;\n  }\n  static decodeCreateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n    const {\n      recentSlot\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable, instruction.data);\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot)\n    };\n  }\n  static decodeExtendLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(`invalid instruction; found ${instruction.keys.length} keys, expected at least 2`);\n    }\n    const {\n      addresses\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable, instruction.data);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer))\n    };\n  }\n  static decodeCloseLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey\n    };\n  }\n  static decodeFreezeLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n  static decodeDeactivateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error('invalid instruction; programId is not AddressLookupTable Program');\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\nclass AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static createLookupTable(params) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync([params.authority.toBuffer(), getU64Encoder().encode(params.recentSlot)], this.programId);\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed\n    });\n    const keys = [{\n      pubkey: lookupTableAddress,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.payer,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: SystemProgram.programId,\n      isSigner: false,\n      isWritable: false\n    }];\n    return [new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    }), lookupTableAddress];\n  }\n  static freezeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static extendLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes())\n    });\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (params.payer) {\n      keys.push({\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static deactivateLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static closeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.recipient,\n      isSigner: false,\n      isWritable: true\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n}\nAddressLookupTableProgram.programId = new PublicKey('AddressLookupTab1e1111111111111111111111111');\n\n/**\n * Compute Budget Instruction class\n */\nclass ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a ComputeBudgetInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units,\n      additionalFee\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits, instruction.data);\n    return {\n      units,\n      additionalFee\n    };\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      bytes\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame, instruction.data);\n    return {\n      bytes\n    };\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit, instruction.data);\n    return {\n      units\n    };\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      microLamports\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice, instruction.data);\n    return {\n      microLamports\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error('invalid instruction; programId is not ComputeBudgetProgram');\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\n\n/**\n * Request units instruction params\n */\n\n/**\n * Request heap frame instruction params\n */\n\n/**\n * Set compute unit limit instruction params\n */\n\n/**\n * Set compute unit price instruction params\n */\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nconst COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units'), BufferLayout.u32('additionalFee')])\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')])\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units')])\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), u64('microLamports')])\n  }\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nclass ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static requestHeapFrame(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitLimit(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitPrice(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports)\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n}\nComputeBudgetProgram.programId = new PublicKey('ComputeBudget111111111111111111111111111111');\n\nconst PRIVATE_KEY_BYTES$1 = 64;\nconst PUBLIC_KEY_BYTES$1 = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u8('padding'), BufferLayout.u16('signatureOffset'), BufferLayout.u16('signatureInstructionIndex'), BufferLayout.u16('publicKeyOffset'), BufferLayout.u16('publicKeyInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u16('messageInstructionIndex')]);\nclass Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      instructionIndex\n    } = params;\n    assert(publicKey.length === PUBLIC_KEY_BYTES$1, `Public Key must be ${PUBLIC_KEY_BYTES$1} bytes but received ${publicKey.length} bytes`);\n    assert(signature.length === SIGNATURE_BYTES, `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`);\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n    const index = instructionIndex == null ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n    : instructionIndex;\n    ED25519_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      padding: 0,\n      signatureOffset,\n      signatureInstructionIndex: index,\n      publicKeyOffset,\n      publicKeyInstructionIndex: index,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: index\n    }, instructionData);\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey,\n      message,\n      instructionIndex\n    } = params;\n    assert(privateKey.length === PRIVATE_KEY_BYTES$1, `Private key must be ${PRIVATE_KEY_BYTES$1} bytes but received ${privateKey.length} bytes`);\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nEd25519Program.programId = new PublicKey('Ed25519SigVerify111111111111111111111111111');\n\nconst ecdsaSign = (msgHash, privKey) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery];\n};\nsecp256k1.utils.isValidPrivateKey;\nconst publicKeyCreate = secp256k1.getPublicKey;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u16('signatureOffset'), BufferLayout.u8('signatureInstructionIndex'), BufferLayout.u16('ethAddressOffset'), BufferLayout.u8('ethAddressInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u8('messageInstructionIndex'), BufferLayout.blob(20, 'ethAddress'), BufferLayout.blob(64, 'signature'), BufferLayout.u8('recoveryId')]);\nclass Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(publicKey) {\n    assert(publicKey.length === PUBLIC_KEY_BYTES, `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`);\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    } = params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(params) {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0\n    } = params;\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n    assert(ethAddress.length === ETHEREUM_ADDRESS_BYTES, `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`);\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(SECP256K1_INSTRUCTION_LAYOUT.span + message.length);\n    SECP256K1_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      signatureOffset,\n      signatureInstructionIndex: instructionIndex,\n      ethAddressOffset,\n      ethAddressInstructionIndex: instructionIndex,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: instructionIndex,\n      signature: toBuffer(signature),\n      ethAddress: toBuffer(ethAddress),\n      recoveryId\n    }, instructionData);\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey: pkey,\n      message,\n      instructionIndex\n    } = params;\n    assert(pkey.length === PRIVATE_KEY_BYTES, `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`);\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false /* isCompressed */).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nSecp256k1Program.programId = new PublicKey('KeccakSecp256k11111111111111111111111111111');\n\nvar _Lockup;\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nconst STAKE_CONFIG_ID = new PublicKey('StakeConfig11111111111111111111111111111111');\n\n/**\n * Stake account authority info\n */\nclass Authorized {\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker, withdrawer) {\n    /** stake authority */\n    this.staker = void 0;\n    /** withdraw authority */\n    this.withdrawer = void 0;\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n/**\n * Stake account lockup info\n */\nclass Lockup {\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp, epoch, custodian) {\n    /** Unix timestamp of lockup expiration */\n    this.unixTimestamp = void 0;\n    /** Epoch of lockup expiration */\n    this.epoch = void 0;\n    /** Lockup custodian authority */\n    this.custodian = void 0;\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n}\n_Lockup = Lockup;\nLockup.default = new _Lockup(0, 0, PublicKey.default);\n/**\n * Create stake account transaction params\n */\n/**\n * Create stake account with seed transaction params\n */\n/**\n * Initialize stake instruction params\n */\n/**\n * Delegate stake instruction params\n */\n/**\n * Authorize stake instruction params\n */\n/**\n * Authorize stake instruction params using a derived key\n */\n/**\n * Split stake instruction params\n */\n/**\n * Split with seed transaction params\n */\n/**\n * Withdraw stake instruction params\n */\n/**\n * Deactivate stake instruction params\n */\n/**\n * Merge stake instruction params\n */\n/**\n * Stake Instruction class\n */\nclass StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized,\n      lockup\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Initialize, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(new PublicKey(authorized.staker), new PublicKey(authorized.withdrawer)),\n      lockup: new Lockup(lockup.unixTimestamp, lockup.epoch, new PublicKey(lockup.custodian))\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      stakeAuthorizationType\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Split, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nconst STAKE_INSTRUCTION_LAYOUTS = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), authorized(), lockup()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType')])\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType'), rustString('authoritySeed'), publicKey('authorityOwner')])\n  }\n});\n\n/**\n * Stake authorization type\n */\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nconst StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nclass StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params) {\n    const {\n      stakePubkey,\n      authorized,\n      lockup: maybeLockup\n    } = params;\n    const lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer())\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer())\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccountWithSeed({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      basePubkey: params.basePubkey,\n      seed: params.seed,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      votePubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: STAKE_CONFIG_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer())\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorityBase,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {\n      lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: splitStakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params,\n  // Compute the cost of allocating the new stake account in lamports\n  rentExemptReserve) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.authorizedPubkey,\n      newAccountPubkey: params.splitStakePubkey,\n      lamports: rentExemptReserve,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params,\n  // If this stake account is new, compute the cost of allocating it in lamports\n  rentExemptReserve) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.allocate({\n      accountPubkey: splitStakePubkey,\n      basePubkey,\n      seed,\n      space: this.space,\n      programId: this.programId\n    }));\n    if (rentExemptReserve && rentExemptReserve > 0) {\n      transaction.add(SystemProgram.transfer({\n        fromPubkey: params.authorizedPubkey,\n        toPubkey: splitStakePubkey,\n        lamports: rentExemptReserve\n      }));\n    }\n    return transaction.add(this.splitInstruction({\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    }));\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params) {\n    const {\n      stakePubkey,\n      sourceStakePubKey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: sourceStakePubKey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      toPubkey,\n      lamports,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n}\nStakeProgram.programId = new PublicKey('Stake11111111111111111111111111111111111111');\n/**\n * Max space of a Stake account\n *\n * This is generated from the solana-stake-program StakeState struct as\n * `StakeStateV2::size_of()`:\n * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeStateV2.html\n */\nStakeProgram.space = 200;\n\n/**\n * Vote account info\n */\nclass VoteInit {\n  /** [0, 100] */\n\n  constructor(nodePubkey, authorizedVoter, authorizedWithdrawer, commission) {\n    this.nodePubkey = void 0;\n    this.authorizedVoter = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\n\n/**\n * InitializeAccount instruction params\n */\n\n/**\n * Authorize instruction params\n */\n\n/**\n * AuthorizeWithSeed instruction params\n */\n\n/**\n * Withdraw from vote account transaction params\n */\n\n/**\n * Update validator identity (node pubkey) vote account instruction params.\n */\n\n/**\n * Vote Instruction class\n */\nclass VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n    const {\n      voteInit\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.InitializeAccount, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(new PublicKey(voteInit.nodePubkey), new PublicKey(voteInit.authorizedVoter), new PublicKey(voteInit.authorizedWithdrawer), voteInit.commission)\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      voteAuthorizationType\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      }\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType\n      }\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(currentAuthorityDerivedKeyOwnerPubkey),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      },\n      votePubkey: instruction.keys[0].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\n\n/** @internal */\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteInit()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('voteAuthorizationType')])\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  UpdateValidatorIdentity: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteAuthorizeWithSeedArgs()])\n  }\n});\n\n/**\n * VoteAuthorize type\n */\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nconst VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nclass VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(params) {\n    const {\n      votePubkey,\n      nodePubkey,\n      voteInit\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(voteInit.authorizedWithdrawer.toBuffer()),\n        commission: voteInit.commission\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: nodePubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.votePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.initializeAccount({\n      votePubkey: params.votePubkey,\n      nodePubkey: params.voteInit.nodePubkey,\n      voteInit: params.voteInit\n    }));\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params) {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(currentAuthorityDerivedKeyOwnerPubkey.toBuffer()),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index\n      }\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: currentAuthorityDerivedKeyBasePubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      lamports,\n      toPubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(params, currentVoteAccountBalance, rentExemptMinimum) {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error('Withdraw will leave vote account with insufficient funds.');\n    }\n    return VoteProgram.withdraw(params);\n  }\n\n  /**\n   * Generate a transaction to update the validator identity (node pubkey) of a Vote account.\n   */\n  static updateValidatorIdentity(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      nodePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.UpdateValidatorIdentity;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: nodePubkey,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nVoteProgram.programId = new PublicKey('Vote111111111111111111111111111111111111111');\n/**\n * Max space of a Vote account\n *\n * This is generated from the solana-vote-program VoteState struct as\n * `VoteState::size_of()`:\n * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n *\n * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n */\nVoteProgram.space = 3762;\n\nconst VALIDATOR_INFO_KEY = new PublicKey('Va1idator1nfo111111111111111111111111111111');\n\n/**\n * @internal\n */\n\n/**\n * Info used to identity validators.\n */\n\nconst InfoString = type({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  iconUrl: optional(string()),\n  keybaseUsername: optional(string())\n});\n\n/**\n * ValidatorInfo class\n */\nclass ValidatorInfo {\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key, info) {\n    /**\n     * validator public key\n     */\n    this.key = void 0;\n    /**\n     * validator information\n     */\n    this.info = void 0;\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(buffer) {\n    let byteArray = [...buffer];\n    const configKeyCount = decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n    const configKeys = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n      const isSigner = guardedShift(byteArray) === 1;\n      configKeys.push({\n        publicKey,\n        isSigner\n      });\n    }\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo = rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo);\n        assert$1(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n    return null;\n  }\n}\n\nconst VOTE_PROGRAM_ID = new PublicKey('Vote111111111111111111111111111111111111111');\n\n/**\n * History of how many credits earned by the end of each epoch\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission'), BufferLayout.nu64(),\n// votes.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.u32('confirmationCount')]), BufferLayout.offset(BufferLayout.u32(), -8), 'votes'), BufferLayout.u8('rootSlotValid'), BufferLayout.nu64('rootSlot'), BufferLayout.nu64(),\n// authorizedVoters.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), publicKey('authorizedVoter')]), BufferLayout.offset(BufferLayout.u32(), -8), 'authorizedVoters'), BufferLayout.struct([BufferLayout.seq(BufferLayout.struct([publicKey('authorizedPubkey'), BufferLayout.nu64('epochOfLastAuthorizedSwitch'), BufferLayout.nu64('targetEpoch')]), 32, 'buf'), BufferLayout.nu64('idx'), BufferLayout.u8('isEmpty')], 'priorVoters'), BufferLayout.nu64(),\n// epochCredits.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), BufferLayout.nu64('credits'), BufferLayout.nu64('prevCredits')]), BufferLayout.offset(BufferLayout.u32(), -8), 'epochCredits'), BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')], 'lastTimestamp')]);\n/**\n * VoteAccount class\n */\nclass VoteAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.nodePubkey = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.rootSlot = void 0;\n    this.votes = void 0;\n    this.authorizedVoters = void 0;\n    this.priorVoters = void 0;\n    this.epochCredits = void 0;\n    this.lastTimestamp = void 0;\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(buffer) {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n    let rootSlot = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp\n    });\n  }\n}\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch\n}) {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter)\n  };\n}\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch\n}) {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch\n  };\n}\nfunction getPriorVoters({\n  buf,\n  idx,\n  isEmpty\n}) {\n  if (isEmpty) {\n    return [];\n  }\n  return [...buf.slice(idx + 1).map(parsePriorVoters), ...buf.slice(0, idx).map(parsePriorVoters)];\n}\n\nconst endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/'\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/'\n  }\n};\n/**\n * Retrieves the RPC API URL for the specified cluster\n * @param {Cluster} [cluster=\"devnet\"] - The cluster name of the RPC API URL to use. Possible options: 'devnet' | 'testnet' | 'mainnet-beta'\n * @param {boolean} [tls=\"http\"] - Use TLS when connecting to cluster.\n *\n * @returns {string} URL string of the RPC endpoint\n */\nfunction clusterApiUrl(cluster, tls) {\n  const key = tls === false ? 'http' : 'https';\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\n\n// eslint-disable-next-line no-redeclare\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, confirmationStrategyOrConfirmOptions, maybeConfirmOptions) {\n  let confirmationStrategy;\n  let options;\n  if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'lastValidBlockHeight')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'nonceValue')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy ? connection.confirmTransaction(confirmationStrategy, commitment) : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: sendOptions?.skipPreflight ? 'send' : 'simulate',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`\n      });\n    }\n    throw new Error(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n/**\n * There are 1-billion lamports in one SOL\n */\nconst LAMPORTS_PER_SOL = 1000000000;\n\nexport { Account, AddressLookupTableAccount, AddressLookupTableInstruction, AddressLookupTableProgram, Authorized, BLOCKHASH_CACHE_TIMEOUT_MS, BPF_LOADER_DEPRECATED_PROGRAM_ID, BPF_LOADER_PROGRAM_ID, BpfLoader, COMPUTE_BUDGET_INSTRUCTION_LAYOUTS, ComputeBudgetInstruction, ComputeBudgetProgram, Connection, Ed25519Program, Enum, EpochSchedule, FeeCalculatorLayout, Keypair, LAMPORTS_PER_SOL, LOOKUP_TABLE_INSTRUCTION_LAYOUTS, Loader, Lockup, MAX_SEED_LENGTH, Message, MessageAccountKeys, MessageV0, NONCE_ACCOUNT_LENGTH, NonceAccount, PACKET_DATA_SIZE, PUBLIC_KEY_LENGTH, PublicKey, SIGNATURE_LENGTH_IN_BYTES, SOLANA_SCHEMA, STAKE_CONFIG_ID, STAKE_INSTRUCTION_LAYOUTS, SYSTEM_INSTRUCTION_LAYOUTS, SYSVAR_CLOCK_PUBKEY, SYSVAR_EPOCH_SCHEDULE_PUBKEY, SYSVAR_INSTRUCTIONS_PUBKEY, SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY, SYSVAR_REWARDS_PUBKEY, SYSVAR_SLOT_HASHES_PUBKEY, SYSVAR_SLOT_HISTORY_PUBKEY, SYSVAR_STAKE_HISTORY_PUBKEY, Secp256k1Program, SendTransactionError, SolanaJSONRPCError, SolanaJSONRPCErrorCode, StakeAuthorizationLayout, StakeInstruction, StakeProgram, Struct, SystemInstruction, SystemProgram, Transaction, TransactionExpiredBlockheightExceededError, TransactionExpiredNonceInvalidError, TransactionExpiredTimeoutError, TransactionInstruction, TransactionMessage, TransactionStatus, VALIDATOR_INFO_KEY, VERSION_PREFIX_MASK, VOTE_PROGRAM_ID, ValidatorInfo, VersionedMessage, VersionedTransaction, VoteAccount, VoteAuthorizationLayout, VoteInit, VoteInstruction, VoteProgram, clusterApiUrl, sendAndConfirmRawTransaction, sendAndConfirmTransaction };\n//# sourceMappingURL=index.browser.esm.js.map\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    const len = lst.length;\n    let Ah = new Uint32Array(len);\n    let Al = new Uint32Array(len);\n    for (let i = 0; i < len; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (psz < source.length) {\n            // Find code of next character\n      var charCode = source.charCodeAt(psz)\n            // Base map can not be indexed using char code\n      if (charCode > 255) { return }\n            // Decode character\n      var carry = BASE_MAP[charCode]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { Hash, abytes, aexists, aoutput, clean, createView, toBytes } from \"./utils.js\";\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/** Choice: a ? b : c */\nexport function Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { view, buffer, blockLen } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        clean(this.buffer.subarray(pos));\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.destroyed = destroyed;\n        to.finished = finished;\n        to.length = length;\n        to.pos = pos;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n}\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV = /* @__PURE__ */ Uint32Array.from([\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV = /* @__PURE__ */ Uint32Array.from([\n    0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n//# sourceMappingURL=_md.js.map","/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from \"./_md.js\";\nimport * as u64 from \"./_u64.js\";\nimport { clean, createHasher, rotr } from \"./utils.js\";\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor(outputLen = 32) {\n        super(64, outputLen, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        clean(SHA256_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        clean(this.buffer);\n    }\n}\nexport class SHA224 extends SHA256 {\n    constructor() {\n        super(28);\n        this.A = SHA224_IV[0] | 0;\n        this.B = SHA224_IV[1] | 0;\n        this.C = SHA224_IV[2] | 0;\n        this.D = SHA224_IV[3] | 0;\n        this.E = SHA224_IV[4] | 0;\n        this.F = SHA224_IV[5] | 0;\n        this.G = SHA224_IV[6] | 0;\n        this.H = SHA224_IV[7] | 0;\n    }\n}\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor(outputLen = 64) {\n        super(128, outputLen, 16, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = SHA512_IV[0] | 0;\n        this.Al = SHA512_IV[1] | 0;\n        this.Bh = SHA512_IV[2] | 0;\n        this.Bl = SHA512_IV[3] | 0;\n        this.Ch = SHA512_IV[4] | 0;\n        this.Cl = SHA512_IV[5] | 0;\n        this.Dh = SHA512_IV[6] | 0;\n        this.Dl = SHA512_IV[7] | 0;\n        this.Eh = SHA512_IV[8] | 0;\n        this.El = SHA512_IV[9] | 0;\n        this.Fh = SHA512_IV[10] | 0;\n        this.Fl = SHA512_IV[11] | 0;\n        this.Gh = SHA512_IV[12] | 0;\n        this.Gl = SHA512_IV[13] | 0;\n        this.Hh = SHA512_IV[14] | 0;\n        this.Hl = SHA512_IV[15] | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        clean(SHA512_W_H, SHA512_W_L);\n    }\n    destroy() {\n        clean(this.buffer);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexport class SHA384 extends SHA512 {\n    constructor() {\n        super(48);\n        this.Ah = SHA384_IV[0] | 0;\n        this.Al = SHA384_IV[1] | 0;\n        this.Bh = SHA384_IV[2] | 0;\n        this.Bl = SHA384_IV[3] | 0;\n        this.Ch = SHA384_IV[4] | 0;\n        this.Cl = SHA384_IV[5] | 0;\n        this.Dh = SHA384_IV[6] | 0;\n        this.Dl = SHA384_IV[7] | 0;\n        this.Eh = SHA384_IV[8] | 0;\n        this.El = SHA384_IV[9] | 0;\n        this.Fh = SHA384_IV[10] | 0;\n        this.Fl = SHA384_IV[11] | 0;\n        this.Gh = SHA384_IV[12] | 0;\n        this.Gl = SHA384_IV[13] | 0;\n        this.Hh = SHA384_IV[14] | 0;\n        this.Hl = SHA384_IV[15] | 0;\n    }\n}\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n    0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n    0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n    0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\nexport class SHA512_224 extends SHA512 {\n    constructor() {\n        super(28);\n        this.Ah = T224_IV[0] | 0;\n        this.Al = T224_IV[1] | 0;\n        this.Bh = T224_IV[2] | 0;\n        this.Bl = T224_IV[3] | 0;\n        this.Ch = T224_IV[4] | 0;\n        this.Cl = T224_IV[5] | 0;\n        this.Dh = T224_IV[6] | 0;\n        this.Dl = T224_IV[7] | 0;\n        this.Eh = T224_IV[8] | 0;\n        this.El = T224_IV[9] | 0;\n        this.Fh = T224_IV[10] | 0;\n        this.Fl = T224_IV[11] | 0;\n        this.Gh = T224_IV[12] | 0;\n        this.Gl = T224_IV[13] | 0;\n        this.Hh = T224_IV[14] | 0;\n        this.Hl = T224_IV[15] | 0;\n    }\n}\nexport class SHA512_256 extends SHA512 {\n    constructor() {\n        super(32);\n        this.Ah = T256_IV[0] | 0;\n        this.Al = T256_IV[1] | 0;\n        this.Bh = T256_IV[2] | 0;\n        this.Bl = T256_IV[3] | 0;\n        this.Ch = T256_IV[4] | 0;\n        this.Cl = T256_IV[5] | 0;\n        this.Dh = T256_IV[6] | 0;\n        this.Dl = T256_IV[7] | 0;\n        this.Eh = T256_IV[8] | 0;\n        this.El = T256_IV[9] | 0;\n        this.Fh = T256_IV[10] | 0;\n        this.Fl = T256_IV[11] | 0;\n        this.Gh = T256_IV[12] | 0;\n        this.Gl = T256_IV[13] | 0;\n        this.Hh = T256_IV[14] | 0;\n        this.Hl = T256_IV[15] | 0;\n    }\n}\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nexport const sha256 = /* @__PURE__ */ createHasher(() => new SHA256());\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224 = /* @__PURE__ */ createHasher(() => new SHA224());\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512 = /* @__PURE__ */ createHasher(() => new SHA512());\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384 = /* @__PURE__ */ createHasher(() => new SHA384());\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256 = /* @__PURE__ */ createHasher(() => new SHA512_256());\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224 = /* @__PURE__ */ createHasher(() => new SHA512_224());\n//# sourceMappingURL=sha2.js.map","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is positive integer. */\nexport function anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Asserts something is Uint8Array. */\nexport function abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nexport function ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.createHasher');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n/** The byte swap operation for uint32 */\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** @deprecated */\nexport const byteSwapIfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n    return arr;\n}\nexport const swap32IfBE = isLE\n    ? (u) => u\n    : byteSwap32;\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore\ntypeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** For runtime check if class implements interface */\nexport class Hash {\n}\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function createOptHasher(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function createXOFer(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport const wrapConstructor = createHasher;\nexport const wrapConstructorWithOpts = createOptHasher;\nexport const wrapXOFConstructorWithOpts = createXOFer;\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return Uint8Array.from(crypto.randomBytes(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.map = exports.array = exports.rustEnum = exports.str = exports.vecU8 = exports.tagged = exports.vec = exports.bool = exports.option = exports.publicKey = exports.i256 = exports.u256 = exports.i128 = exports.u128 = exports.i64 = exports.u64 = exports.struct = exports.f64 = exports.f32 = exports.i32 = exports.u32 = exports.i16 = exports.u16 = exports.i8 = exports.u8 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nvar buffer_layout_2 = require(\"buffer-layout\");\nObject.defineProperty(exports, \"u8\", { enumerable: true, get: function () { return buffer_layout_2.u8; } });\nObject.defineProperty(exports, \"i8\", { enumerable: true, get: function () { return buffer_layout_2.s8; } });\nObject.defineProperty(exports, \"u16\", { enumerable: true, get: function () { return buffer_layout_2.u16; } });\nObject.defineProperty(exports, \"i16\", { enumerable: true, get: function () { return buffer_layout_2.s16; } });\nObject.defineProperty(exports, \"u32\", { enumerable: true, get: function () { return buffer_layout_2.u32; } });\nObject.defineProperty(exports, \"i32\", { enumerable: true, get: function () { return buffer_layout_2.s32; } });\nObject.defineProperty(exports, \"f32\", { enumerable: true, get: function () { return buffer_layout_2.f32; } });\nObject.defineProperty(exports, \"f64\", { enumerable: true, get: function () { return buffer_layout_2.f64; } });\nObject.defineProperty(exports, \"struct\", { enumerable: true, get: function () { return buffer_layout_2.struct; } });\nclass BNLayout extends buffer_layout_1.Layout {\n    constructor(span, signed, property) {\n        super(span, property);\n        this.blob = (0, buffer_layout_1.blob)(span);\n        this.signed = signed;\n    }\n    decode(b, offset = 0) {\n        const num = new bn_js_1.default(this.blob.decode(b, offset), 10, \"le\");\n        if (this.signed) {\n            return num.fromTwos(this.span * 8).clone();\n        }\n        return num;\n    }\n    encode(src, b, offset = 0) {\n        if (this.signed) {\n            src = src.toTwos(this.span * 8);\n        }\n        return this.blob.encode(src.toArrayLike(Buffer, \"le\", this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, false, property);\n}\nexports.u64 = u64;\nfunction i64(property) {\n    return new BNLayout(8, true, property);\n}\nexports.i64 = i64;\nfunction u128(property) {\n    return new BNLayout(16, false, property);\n}\nexports.u128 = u128;\nfunction i128(property) {\n    return new BNLayout(16, true, property);\n}\nexports.i128 = i128;\nfunction u256(property) {\n    return new BNLayout(32, false, property);\n}\nexports.u256 = u256;\nfunction i256(property) {\n    return new BNLayout(32, true, property);\n}\nexports.i256 = i256;\nclass WrappedLayout extends buffer_layout_1.Layout {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey(property) {\n    return new WrappedLayout((0, buffer_layout_1.blob)(32), (b) => new web3_js_1.PublicKey(b), (key) => key.toBuffer(), property);\n}\nexports.publicKey = publicKey;\nclass OptionLayout extends buffer_layout_1.Layout {\n    constructor(layout, property) {\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = (0, buffer_layout_1.u8)();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 1) + 1;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        }\n        else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 1);\n        }\n        throw new Error(\"Invalid option \" + this.property);\n    }\n    getSpan(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return 1;\n        }\n        else if (discriminator === 1) {\n            return this.layout.getSpan(b, offset + 1) + 1;\n        }\n        throw new Error(\"Invalid option \" + this.property);\n    }\n}\nfunction option(layout, property) {\n    return new OptionLayout(layout, property);\n}\nexports.option = option;\nfunction bool(property) {\n    return new WrappedLayout((0, buffer_layout_1.u8)(), decodeBool, encodeBool, property);\n}\nexports.bool = bool;\nfunction decodeBool(value) {\n    if (value === 0) {\n        return false;\n    }\n    else if (value === 1) {\n        return true;\n    }\n    throw new Error(\"Invalid bool: \" + value);\n}\nfunction encodeBool(value) {\n    return value ? 1 : 0;\n}\nfunction vec(elementLayout, property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.seq)(elementLayout, (0, buffer_layout_1.offset)(length, -length.span), \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, (values) => ({ values }), property);\n}\nexports.vec = vec;\nfunction tagged(tag, layout, property) {\n    const wrappedLayout = (0, buffer_layout_1.struct)([\n        u64(\"tag\"),\n        layout.replicate(\"data\"),\n    ]);\n    function decodeTag({ tag: receivedTag, data }) {\n        if (!receivedTag.eq(tag)) {\n            throw new Error(\"Invalid tag, expected: \" +\n                tag.toString(\"hex\") +\n                \", got: \" +\n                receivedTag.toString(\"hex\"));\n        }\n        return data;\n    }\n    return new WrappedLayout(wrappedLayout, decodeTag, (data) => ({ tag, data }), property);\n}\nexports.tagged = tagged;\nfunction vecU8(property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.blob)((0, buffer_layout_1.offset)(length, -length.span), \"data\"),\n    ]);\n    return new WrappedLayout(layout, ({ data }) => data, (data) => ({ data }), property);\n}\nexports.vecU8 = vecU8;\nfunction str(property) {\n    return new WrappedLayout(vecU8(), (data) => data.toString(\"utf-8\"), (s) => Buffer.from(s, \"utf-8\"), property);\n}\nexports.str = str;\nfunction rustEnum(variants, property, discriminant) {\n    const unionLayout = (0, buffer_layout_1.union)(discriminant !== null && discriminant !== void 0 ? discriminant : (0, buffer_layout_1.u8)(), property);\n    variants.forEach((variant, index) => unionLayout.addVariant(index, variant, variant.property));\n    return unionLayout;\n}\nexports.rustEnum = rustEnum;\nfunction array(elementLayout, length, property) {\n    const layout = (0, buffer_layout_1.struct)([\n        (0, buffer_layout_1.seq)(elementLayout, length, \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, (values) => ({ values }), property);\n}\nexports.array = array;\nclass MapEntryLayout extends buffer_layout_1.Layout {\n    constructor(keyLayout, valueLayout, property) {\n        super(keyLayout.span + valueLayout.span, property);\n        this.keyLayout = keyLayout;\n        this.valueLayout = valueLayout;\n    }\n    decode(b, offset) {\n        offset = offset || 0;\n        const key = this.keyLayout.decode(b, offset);\n        const value = this.valueLayout.decode(b, offset + this.keyLayout.getSpan(b, offset));\n        return [key, value];\n    }\n    encode(src, b, offset) {\n        offset = offset || 0;\n        const keyBytes = this.keyLayout.encode(src[0], b, offset);\n        const valueBytes = this.valueLayout.encode(src[1], b, offset + keyBytes);\n        return keyBytes + valueBytes;\n    }\n    getSpan(b, offset) {\n        return (this.keyLayout.getSpan(b, offset) + this.valueLayout.getSpan(b, offset));\n    }\n}\nfunction map(keyLayout, valueLayout, property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.seq)(new MapEntryLayout(keyLayout, valueLayout), (0, buffer_layout_1.offset)(length, -length.span), \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => new Map(values), (values) => ({ values: Array.from(values.entries()) }), property);\n}\nexports.map = map;\n//# sourceMappingURL=index.js.map","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","import { Buffer as Buffer$1 } from 'buffer';\nimport { PublicKey, Transaction, TransactionInstruction, SendTransactionError, NONCE_ACCOUNT_LENGTH, SystemProgram, SYSVAR_RENT_PUBKEY, SYSVAR_CLOCK_PUBKEY } from '@solana/web3.js';\nimport * as web3_js from '@solana/web3.js';\nexport { web3_js as web3 };\nimport BN from 'bn.js';\nexport { default as BN } from 'bn.js';\nimport bs58$1 from 'bs58';\nimport camelCase from 'camelcase';\nimport * as borsh from '@coral-xyz/borsh';\nimport { sha256 as sha256$1 } from '@noble/hashes/sha256';\nimport { inflate } from 'pako';\nimport EventEmitter from 'eventemitter3';\n\n/**\n * Splits an array into chunks\n *\n * @param array Array of objects to chunk.\n * @param size The max size of a chunk.\n * @returns A two dimensional array where each T[] length is < the provided size.\n */\nfunction chunks(array, size) {\n    return Array.apply(0, new Array(Math.ceil(array.length / size))).map((_, index) => array.slice(index * size, (index + 1) * size));\n}\n/**\n * Check if a transaction object is a VersionedTransaction or not\n *\n * @param tx\n * @returns bool\n */\nconst isVersionedTransaction = (tx) => {\n    return \"version\" in tx;\n};\n\nfunction encode$3(data) {\n    return data.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"0x\");\n}\nfunction decode$3(data) {\n    if (data.indexOf(\"0x\") === 0) {\n        data = data.substr(2);\n    }\n    if (data.length % 2 === 1) {\n        data = \"0\" + data;\n    }\n    let key = data.match(/.{2}/g);\n    if (key === null) {\n        return Buffer$1.from([]);\n    }\n    return Buffer$1.from(key.map((byte) => parseInt(byte, 16)));\n}\n\nvar hex = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    encode: encode$3,\n    decode: decode$3\n});\n\nfunction decode$2(array) {\n    const decoder = new TextDecoder(\"utf-8\") // Browser https://caniuse.com/textencoder.\n        ; // Node.\n    return decoder.decode(array);\n}\nfunction encode$2(input) {\n    const encoder = new TextEncoder() // Browser.\n        ; // Node.\n    return encoder.encode(input);\n}\n\nvar utf8 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    decode: decode$2,\n    encode: encode$2\n});\n\nfunction encode$1(data) {\n    return bs58$1.encode(data);\n}\nfunction decode$1(data) {\n    return bs58$1.decode(data);\n}\n\nvar bs58 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    encode: encode$1,\n    decode: decode$1\n});\n\nfunction encode(data) {\n    return data.toString(\"base64\");\n}\nfunction decode(data) {\n    return Buffer$1.from(data, \"base64\");\n}\n\nvar base64 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    encode: encode,\n    decode: decode\n});\n\nvar index$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    hex: hex,\n    utf8: utf8,\n    bs58: bs58,\n    base64: base64\n});\n\nfunction parseIdlErrors(idl) {\n    const errors = new Map();\n    if (idl.errors) {\n        idl.errors.forEach((e) => {\n            var _a;\n            let msg = (_a = e.msg) !== null && _a !== void 0 ? _a : e.name;\n            errors.set(e.code, msg);\n        });\n    }\n    return errors;\n}\n// Allow either IdLInstruction or IdlStateMethod since the types share fields.\nfunction toInstruction(idlIx, ...args) {\n    if (idlIx.args.length != args.length) {\n        throw new Error(\"Invalid argument length\");\n    }\n    const ix = {};\n    let idx = 0;\n    idlIx.args.forEach((ixArg) => {\n        ix[ixArg.name] = args[idx];\n        idx += 1;\n    });\n    return ix;\n}\n// Throws error if any account required for the `ix` is not given.\nfunction validateAccounts(ixAccounts, accounts = {}) {\n    ixAccounts.forEach((acc) => {\n        if (\"accounts\" in acc) {\n            validateAccounts(acc.accounts, accounts[acc.name]);\n        }\n        else {\n            if (accounts[acc.name] === undefined) {\n                throw new Error(`Invalid arguments: ${acc.name} not provided.`);\n            }\n        }\n    });\n}\n// Translates an address to a Pubkey.\nfunction translateAddress(address) {\n    return address instanceof PublicKey ? address : new PublicKey(address);\n}\n\n/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    this.value = void 0;\n    this.key = void 0;\n    this.type = void 0;\n    this.refinement = void 0;\n    this.path = void 0;\n    this.branch = void 0;\n    this.failures = void 0;\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n\n    this.failures = () => {\n      var _cached;\n\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let valid = true;\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    this.TYPE = void 0;\n    this.type = void 0;\n    this.schema = void 0;\n    this.coercer = void 0;\n    this.validator = void 0;\n    this.refiner = void 0;\n    this.entries = void 0;\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n\n  validate(value, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return validate(value, this, options);\n  }\n\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nfunction union$1(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n\n    coercer(value, ctx) {\n      const firstMatch = Structs.find(s => {\n        const [e] = s.validate(value, {\n          coerce: true\n        });\n        return !e;\n      }) || unknown();\n      return firstMatch.coercer(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({ ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n\n/**\n * Sends a transaction to a program with the given accounts and instruction\n * data.\n */\nasync function invoke(programId, accounts, data, provider) {\n    programId = translateAddress(programId);\n    if (!provider) {\n        provider = getProvider();\n    }\n    const tx = new Transaction();\n    tx.add(new TransactionInstruction({\n        programId,\n        keys: accounts !== null && accounts !== void 0 ? accounts : [],\n        data,\n    }));\n    if (provider.sendAndConfirm === undefined) {\n        throw new Error(\"This function requires 'Provider.sendAndConfirm' to be implemented.\");\n    }\n    return await provider.sendAndConfirm(tx, []);\n}\nconst GET_MULTIPLE_ACCOUNTS_LIMIT = 99;\nasync function getMultipleAccounts(connection, publicKeys, commitment) {\n    const results = await getMultipleAccountsAndContext(connection, publicKeys, commitment);\n    return results.map((result) => {\n        return result\n            ? { publicKey: result.publicKey, account: result.account }\n            : null;\n    });\n}\nasync function getMultipleAccountsAndContext(connection, publicKeys, commitment) {\n    if (publicKeys.length <= GET_MULTIPLE_ACCOUNTS_LIMIT) {\n        return await getMultipleAccountsAndContextCore(connection, publicKeys, commitment);\n    }\n    else {\n        const batches = chunks(publicKeys, GET_MULTIPLE_ACCOUNTS_LIMIT);\n        const results = await Promise.all(batches.map((batch) => getMultipleAccountsAndContextCore(connection, batch, commitment)));\n        return results.flat();\n    }\n}\nasync function getMultipleAccountsAndContextCore(connection, publicKeys, commitmentOverride) {\n    const commitment = commitmentOverride !== null && commitmentOverride !== void 0 ? commitmentOverride : connection.commitment;\n    const { value: accountInfos, context } = await connection.getMultipleAccountsInfoAndContext(publicKeys, commitment);\n    const accounts = accountInfos.map((account, idx) => {\n        if (account === null) {\n            return null;\n        }\n        return {\n            publicKey: publicKeys[idx],\n            account,\n            context,\n        };\n    });\n    return accounts;\n}\n// copy from @solana/web3.js that has a commitment param\nasync function simulateTransaction(connection, transaction, signers, commitment, includeAccounts) {\n    var _a;\n    if (signers && signers.length > 0) {\n        transaction.sign(...signers);\n    }\n    // @ts-expect-error\n    const message = transaction._compile();\n    const signData = message.serialize();\n    // @ts-expect-error\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString(\"base64\");\n    const config = {\n        encoding: \"base64\",\n        commitment: commitment !== null && commitment !== void 0 ? commitment : connection.commitment,\n    };\n    if (includeAccounts) {\n        const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map((key) => key.toBase58());\n        config[\"accounts\"] = {\n            encoding: \"base64\",\n            addresses,\n        };\n    }\n    if (signers) {\n        config.sigVerify = true;\n    }\n    const args = [encodedTransaction, config];\n    // @ts-expect-error\n    const unsafeRes = await connection._rpcRequest(\"simulateTransaction\", args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if (\"error\" in res) {\n        let logs;\n        if (\"data\" in res.error) {\n            logs = (_a = res.error.data) === null || _a === void 0 ? void 0 : _a.logs;\n            if (logs && Array.isArray(logs)) {\n                const traceIndent = \"\\n    \";\n                const logTrace = traceIndent + logs.join(traceIndent);\n                console.error(res.error.message, logTrace);\n            }\n        }\n        throw new SendTransactionError(\"failed to simulate transaction: \" + res.error.message, logs);\n    }\n    return res.result;\n}\n// copy from @solana/web3.js\nfunction jsonRpcResult(schema) {\n    return coerce(createRpcResult(schema), UnknownRpcResult, (value) => {\n        if (\"error\" in value) {\n            return value;\n        }\n        else {\n            return {\n                ...value,\n                result: create(value.result, schema),\n            };\n        }\n    });\n}\n// copy from @solana/web3.js\nconst UnknownRpcResult = createRpcResult(unknown());\n// copy from @solana/web3.js\nfunction createRpcResult(result) {\n    return union$1([\n        type({\n            jsonrpc: literal(\"2.0\"),\n            id: string(),\n            result,\n        }),\n        type({\n            jsonrpc: literal(\"2.0\"),\n            id: string(),\n            error: type({\n                code: unknown(),\n                message: string(),\n                data: optional(any()),\n            }),\n        }),\n    ]);\n}\n// copy from @solana/web3.js\nfunction jsonRpcResultAndContext(value) {\n    return jsonRpcResult(type({\n        context: type({\n            slot: number(),\n        }),\n        value,\n    }));\n}\n// copy from @solana/web3.js\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n    err: nullable(union$1([type({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(nullable(array(nullable(type({\n        executable: boolean(),\n        owner: string(),\n        lamports: number(),\n        data: array(string()),\n        rentEpoch: optional(number()),\n    }))))),\n    unitsConsumed: optional(number()),\n}));\n\nvar rpc = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    invoke: invoke,\n    getMultipleAccounts: getMultipleAccounts,\n    getMultipleAccountsAndContext: getMultipleAccountsAndContext,\n    simulateTransaction: simulateTransaction\n});\n\n/**\n * The network and wallet context used to send transactions paid for and signed\n * by the provider.\n */\nclass AnchorProvider {\n    /**\n     * @param connection The cluster connection where the program is deployed.\n     * @param wallet     The wallet used to pay for and sign all transactions.\n     * @param opts       Transaction confirmation options to use by default.\n     */\n    constructor(connection, wallet, opts) {\n        this.connection = connection;\n        this.wallet = wallet;\n        this.opts = opts;\n        this.publicKey = wallet === null || wallet === void 0 ? void 0 : wallet.publicKey;\n    }\n    static defaultOptions() {\n        return {\n            preflightCommitment: \"processed\",\n            commitment: \"processed\",\n        };\n    }\n    /**\n     * Returns a `Provider` with a wallet read from the local filesystem.\n     *\n     * @param url  The network cluster url.\n     * @param opts The default transaction confirmation options.\n     *\n     * (This api is for Node only.)\n     */\n    static local(url, opts) {\n        {\n            throw new Error(`Provider local is not available on browser.`);\n        }\n    }\n    /**\n     * Returns a `Provider` read from the `ANCHOR_PROVIDER_URL` environment\n     * variable\n     *\n     * (This api is for Node only.)\n     */\n    static env() {\n        {\n            throw new Error(`Provider env is not available on browser.`);\n        }\n    }\n    /**\n     * Sends the given transaction, paid for and signed by the provider's wallet.\n     *\n     * @param tx      The transaction to send.\n     * @param signers The signers of the transaction.\n     * @param opts    Transaction confirmation options.\n     */\n    async sendAndConfirm(tx, signers, opts) {\n        var _a, _b, _c, _d;\n        if (opts === undefined) {\n            opts = this.opts;\n        }\n        if (isVersionedTransaction(tx)) {\n            if (signers) {\n                tx.sign(signers);\n            }\n        }\n        else {\n            tx.feePayer = (_a = tx.feePayer) !== null && _a !== void 0 ? _a : this.wallet.publicKey;\n            tx.recentBlockhash = (await this.connection.getLatestBlockhash(opts.preflightCommitment)).blockhash;\n            if (signers) {\n                for (const signer of signers) {\n                    tx.partialSign(signer);\n                }\n            }\n        }\n        tx = await this.wallet.signTransaction(tx);\n        const rawTx = tx.serialize();\n        try {\n            return await sendAndConfirmRawTransaction(this.connection, rawTx, opts);\n        }\n        catch (err) {\n            // thrown if the underlying 'confirmTransaction' encounters a failed tx\n            // the 'confirmTransaction' error does not return logs so we make another rpc call to get them\n            if (err instanceof ConfirmError) {\n                // choose the shortest available commitment for 'getTransaction'\n                // (the json RPC does not support any shorter than \"confirmed\" for 'getTransaction')\n                // because that will see the tx sent with `sendAndConfirmRawTransaction` no matter which\n                // commitment `sendAndConfirmRawTransaction` used\n                const txSig = encode$1(isVersionedTransaction(tx)\n                    ? ((_b = tx.signatures) === null || _b === void 0 ? void 0 : _b[0]) || new Uint8Array()\n                    : (_c = tx.signature) !== null && _c !== void 0 ? _c : new Uint8Array());\n                const failedTx = await this.connection.getTransaction(txSig, {\n                    commitment: \"confirmed\",\n                });\n                if (!failedTx) {\n                    throw err;\n                }\n                else {\n                    const logs = (_d = failedTx.meta) === null || _d === void 0 ? void 0 : _d.logMessages;\n                    throw !logs ? err : new SendTransactionError(err.message, logs);\n                }\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    /**\n     * Similar to `send`, but for an array of transactions and signers.\n     * All transactions need to be of the same type, it doesn't support a mix of `VersionedTransaction`s and `Transaction`s.\n     *\n     * @param txWithSigners Array of transactions and signers.\n     * @param opts          Transaction confirmation options.\n     */\n    async sendAll(txWithSigners, opts) {\n        var _a, _b, _c;\n        if (opts === undefined) {\n            opts = this.opts;\n        }\n        const recentBlockhash = (await this.connection.getLatestBlockhash(opts.preflightCommitment)).blockhash;\n        let txs = txWithSigners.map((r) => {\n            var _a, _b;\n            if (isVersionedTransaction(r.tx)) {\n                let tx = r.tx;\n                if (r.signers) {\n                    tx.sign(r.signers);\n                }\n                return tx;\n            }\n            else {\n                let tx = r.tx;\n                let signers = (_a = r.signers) !== null && _a !== void 0 ? _a : [];\n                tx.feePayer = (_b = tx.feePayer) !== null && _b !== void 0 ? _b : this.wallet.publicKey;\n                tx.recentBlockhash = recentBlockhash;\n                signers.forEach((kp) => {\n                    tx.partialSign(kp);\n                });\n                return tx;\n            }\n        });\n        const signedTxs = await this.wallet.signAllTransactions(txs);\n        const sigs = [];\n        for (let k = 0; k < txs.length; k += 1) {\n            const tx = signedTxs[k];\n            const rawTx = tx.serialize();\n            try {\n                sigs.push(await sendAndConfirmRawTransaction(this.connection, rawTx, opts));\n            }\n            catch (err) {\n                // thrown if the underlying 'confirmTransaction' encounters a failed tx\n                // the 'confirmTransaction' error does not return logs so we make another rpc call to get them\n                if (err instanceof ConfirmError) {\n                    // choose the shortest available commitment for 'getTransaction'\n                    // (the json RPC does not support any shorter than \"confirmed\" for 'getTransaction')\n                    // because that will see the tx sent with `sendAndConfirmRawTransaction` no matter which\n                    // commitment `sendAndConfirmRawTransaction` used\n                    const txSig = encode$1(isVersionedTransaction(tx)\n                        ? ((_a = tx.signatures) === null || _a === void 0 ? void 0 : _a[0]) || new Uint8Array()\n                        : (_b = tx.signature) !== null && _b !== void 0 ? _b : new Uint8Array());\n                    const failedTx = await this.connection.getTransaction(txSig, {\n                        commitment: \"confirmed\",\n                    });\n                    if (!failedTx) {\n                        throw err;\n                    }\n                    else {\n                        const logs = (_c = failedTx.meta) === null || _c === void 0 ? void 0 : _c.logMessages;\n                        throw !logs ? err : new SendTransactionError(err.message, logs);\n                    }\n                }\n                else {\n                    throw err;\n                }\n            }\n        }\n        return sigs;\n    }\n    /**\n     * Simulates the given transaction, returning emitted logs from execution.\n     *\n     * @param tx      The transaction to send.\n     * @param signers The signers of the transaction. If unset, the transaction\n     *                will be simulated with the \"sigVerify: false\" option. This\n     *                allows for simulation of transactions without asking the\n     *                wallet for a signature.\n     * @param opts    Transaction confirmation options.\n     */\n    async simulate(tx, signers, commitment, includeAccounts) {\n        let recentBlockhash = (await this.connection.getLatestBlockhash(commitment !== null && commitment !== void 0 ? commitment : this.connection.commitment)).blockhash;\n        let result;\n        if (isVersionedTransaction(tx)) {\n            if (signers) {\n                tx.sign(signers);\n                tx = await this.wallet.signTransaction(tx);\n            }\n            // Doesn't support includeAccounts which has been changed to something\n            // else in later versions of this function.\n            result = await this.connection.simulateTransaction(tx, { commitment });\n        }\n        else {\n            tx.feePayer = tx.feePayer || this.wallet.publicKey;\n            tx.recentBlockhash = recentBlockhash;\n            if (signers) {\n                tx = await this.wallet.signTransaction(tx);\n            }\n            result = await simulateTransaction(this.connection, tx, signers, commitment, includeAccounts);\n        }\n        if (result.value.err) {\n            throw new SimulateError(result.value);\n        }\n        return result.value;\n    }\n}\nclass SimulateError extends Error {\n    constructor(simulationResponse, message) {\n        super(message);\n        this.simulationResponse = simulationResponse;\n    }\n}\n// Copy of Connection.sendAndConfirmRawTransaction that throws\n// a better error if 'confirmTransaction` returns an error status\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, options) {\n    const sendOptions = options && {\n        skipPreflight: options.skipPreflight,\n        preflightCommitment: options.preflightCommitment || options.commitment,\n    };\n    const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n    const status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n    if (status.err) {\n        throw new ConfirmError(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n    }\n    return signature;\n}\nclass ConfirmError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n/**\n * Sets the default provider on the client.\n */\nfunction setProvider(provider) {\n    _provider = provider;\n}\n/**\n * Returns the default provider being used by the client.\n */\nfunction getProvider() {\n    if (_provider === null) {\n        return AnchorProvider.local();\n    }\n    return _provider;\n}\n// Global provider used as the default when a provider is not given.\nlet _provider = null;\n\nconst _AVAILABLE_FEATURES = new Set([\"anchor-deprecated-state\", \"debug-logs\"]);\nconst _FEATURES = new Map();\nfunction set(key) {\n    if (!_AVAILABLE_FEATURES.has(key)) {\n        throw new Error(\"Invalid feature\");\n    }\n    _FEATURES.set(key, true);\n}\nfunction isSet(key) {\n    return _FEATURES.get(key) !== undefined;\n}\n\nvar features = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    set: set,\n    isSet: isSet\n});\n\nclass IdlError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"IdlError\";\n    }\n}\nclass ProgramErrorStack {\n    constructor(stack) {\n        this.stack = stack;\n    }\n    static parse(logs) {\n        var _a;\n        const programKeyRegex = /^Program (\\w*) invoke/;\n        const successRegex = /^Program \\w* success/;\n        const programStack = [];\n        for (let i = 0; i < logs.length; i++) {\n            if (successRegex.exec(logs[i])) {\n                programStack.pop();\n                continue;\n            }\n            const programKey = (_a = programKeyRegex.exec(logs[i])) === null || _a === void 0 ? void 0 : _a[1];\n            if (!programKey) {\n                continue;\n            }\n            programStack.push(new PublicKey(programKey));\n        }\n        return new ProgramErrorStack(programStack);\n    }\n}\nclass AnchorError extends Error {\n    constructor(errorCode, errorMessage, errorLogs, logs, origin, comparedValues) {\n        super(errorLogs.join(\"\\n\").replace(\"Program log: \", \"\"));\n        this.errorLogs = errorLogs;\n        this.logs = logs;\n        this.error = { errorCode, errorMessage, comparedValues, origin };\n        this._programErrorStack = ProgramErrorStack.parse(logs);\n    }\n    static parse(logs) {\n        if (!logs) {\n            return null;\n        }\n        const anchorErrorLogIndex = logs.findIndex((log) => log.startsWith(\"Program log: AnchorError\"));\n        if (anchorErrorLogIndex === -1) {\n            return null;\n        }\n        const anchorErrorLog = logs[anchorErrorLogIndex];\n        const errorLogs = [anchorErrorLog];\n        let comparedValues;\n        if (anchorErrorLogIndex + 1 < logs.length) {\n            // This catches the comparedValues where the following is logged\n            // <AnchorError>\n            // Left:\n            // <Pubkey>\n            // Right:\n            // <Pubkey>\n            if (logs[anchorErrorLogIndex + 1] === \"Program log: Left:\") {\n                const pubkeyRegex = /^Program log: (.*)$/;\n                const leftPubkey = pubkeyRegex.exec(logs[anchorErrorLogIndex + 2])[1];\n                const rightPubkey = pubkeyRegex.exec(logs[anchorErrorLogIndex + 4])[1];\n                comparedValues = [\n                    new PublicKey(leftPubkey),\n                    new PublicKey(rightPubkey),\n                ];\n                errorLogs.push(...logs.slice(anchorErrorLogIndex + 1, anchorErrorLogIndex + 5));\n            }\n            // This catches the comparedValues where the following is logged\n            // <AnchorError>\n            // Left: <value>\n            // Right: <value>\n            else if (logs[anchorErrorLogIndex + 1].startsWith(\"Program log: Left:\")) {\n                const valueRegex = /^Program log: (Left|Right): (.*)$/;\n                const leftValue = valueRegex.exec(logs[anchorErrorLogIndex + 1])[2];\n                const rightValue = valueRegex.exec(logs[anchorErrorLogIndex + 2])[2];\n                errorLogs.push(...logs.slice(anchorErrorLogIndex + 1, anchorErrorLogIndex + 3));\n                comparedValues = [leftValue, rightValue];\n            }\n        }\n        const regexNoInfo = /^Program log: AnchorError occurred\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n        const noInfoAnchorErrorLog = regexNoInfo.exec(anchorErrorLog);\n        const regexFileLine = /^Program log: AnchorError thrown in (.*):(\\d*)\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n        const fileLineAnchorErrorLog = regexFileLine.exec(anchorErrorLog);\n        const regexAccountName = /^Program log: AnchorError caused by account: (.*)\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n        const accountNameAnchorErrorLog = regexAccountName.exec(anchorErrorLog);\n        if (noInfoAnchorErrorLog) {\n            const [errorCodeString, errorNumber, errorMessage] = noInfoAnchorErrorLog.slice(1, 4);\n            const errorCode = {\n                code: errorCodeString,\n                number: parseInt(errorNumber),\n            };\n            return new AnchorError(errorCode, errorMessage, errorLogs, logs, undefined, comparedValues);\n        }\n        else if (fileLineAnchorErrorLog) {\n            const [file, line, errorCodeString, errorNumber, errorMessage] = fileLineAnchorErrorLog.slice(1, 6);\n            const errorCode = {\n                code: errorCodeString,\n                number: parseInt(errorNumber),\n            };\n            const fileLine = { file, line: parseInt(line) };\n            return new AnchorError(errorCode, errorMessage, errorLogs, logs, fileLine, comparedValues);\n        }\n        else if (accountNameAnchorErrorLog) {\n            const [accountName, errorCodeString, errorNumber, errorMessage] = accountNameAnchorErrorLog.slice(1, 5);\n            const origin = accountName;\n            const errorCode = {\n                code: errorCodeString,\n                number: parseInt(errorNumber),\n            };\n            return new AnchorError(errorCode, errorMessage, errorLogs, logs, origin, comparedValues);\n        }\n        else {\n            return null;\n        }\n    }\n    get program() {\n        return this._programErrorStack.stack[this._programErrorStack.stack.length - 1];\n    }\n    get programErrorStack() {\n        return this._programErrorStack.stack;\n    }\n    toString() {\n        return this.message;\n    }\n}\n// An error from a user defined program.\nclass ProgramError extends Error {\n    constructor(code, msg, logs) {\n        super();\n        this.code = code;\n        this.msg = msg;\n        this.logs = logs;\n        if (logs) {\n            this._programErrorStack = ProgramErrorStack.parse(logs);\n        }\n    }\n    static parse(err, idlErrors) {\n        const errString = err.toString();\n        // TODO: don't rely on the error string. web3.js should preserve the error\n        //       code information instead of giving us an untyped string.\n        let unparsedErrorCode;\n        if (errString.includes(\"custom program error:\")) {\n            let components = errString.split(\"custom program error: \");\n            if (components.length !== 2) {\n                return null;\n            }\n            else {\n                unparsedErrorCode = components[1];\n            }\n        }\n        else {\n            const matches = errString.match(/\"Custom\":([0-9]+)}/g);\n            if (!matches || matches.length > 1) {\n                return null;\n            }\n            unparsedErrorCode = matches[0].match(/([0-9]+)/g)[0];\n        }\n        let errorCode;\n        try {\n            errorCode = parseInt(unparsedErrorCode);\n        }\n        catch (parseErr) {\n            return null;\n        }\n        // Parse user error.\n        let errorMsg = idlErrors.get(errorCode);\n        if (errorMsg !== undefined) {\n            return new ProgramError(errorCode, errorMsg, err.logs);\n        }\n        // Parse framework internal error.\n        errorMsg = LangErrorMessage.get(errorCode);\n        if (errorMsg !== undefined) {\n            return new ProgramError(errorCode, errorMsg, err.logs);\n        }\n        // Unable to parse the error. Just return the untranslated error.\n        return null;\n    }\n    get program() {\n        var _a;\n        return (_a = this._programErrorStack) === null || _a === void 0 ? void 0 : _a.stack[this._programErrorStack.stack.length - 1];\n    }\n    get programErrorStack() {\n        var _a;\n        return (_a = this._programErrorStack) === null || _a === void 0 ? void 0 : _a.stack;\n    }\n    toString() {\n        return this.msg;\n    }\n}\nfunction translateError(err, idlErrors) {\n    if (isSet(\"debug-logs\")) {\n        console.log(\"Translating error:\", err);\n    }\n    const anchorError = AnchorError.parse(err.logs);\n    if (anchorError) {\n        return anchorError;\n    }\n    const programError = ProgramError.parse(err, idlErrors);\n    if (programError) {\n        return programError;\n    }\n    if (err.logs) {\n        const handler = {\n            get: function (target, prop) {\n                if (prop === \"programErrorStack\") {\n                    return target.programErrorStack.stack;\n                }\n                else if (prop === \"program\") {\n                    return target.programErrorStack.stack[err.programErrorStack.stack.length - 1];\n                }\n                else {\n                    // this is the normal way to return all other props\n                    // without modifying them.\n                    // @ts-expect-error\n                    return Reflect.get(...arguments);\n                }\n            },\n        };\n        err.programErrorStack = ProgramErrorStack.parse(err.logs);\n        return new Proxy(err, handler);\n    }\n    return err;\n}\nconst LangErrorCode = {\n    // Instructions.\n    InstructionMissing: 100,\n    InstructionFallbackNotFound: 101,\n    InstructionDidNotDeserialize: 102,\n    InstructionDidNotSerialize: 103,\n    // IDL instructions.\n    IdlInstructionStub: 1000,\n    IdlInstructionInvalidProgram: 1001,\n    // Constraints.\n    ConstraintMut: 2000,\n    ConstraintHasOne: 2001,\n    ConstraintSigner: 2002,\n    ConstraintRaw: 2003,\n    ConstraintOwner: 2004,\n    ConstraintRentExempt: 2005,\n    ConstraintSeeds: 2006,\n    ConstraintExecutable: 2007,\n    ConstraintState: 2008,\n    ConstraintAssociated: 2009,\n    ConstraintAssociatedInit: 2010,\n    ConstraintClose: 2011,\n    ConstraintAddress: 2012,\n    ConstraintZero: 2013,\n    ConstraintTokenMint: 2014,\n    ConstraintTokenOwner: 2015,\n    ConstraintMintMintAuthority: 2016,\n    ConstraintMintFreezeAuthority: 2017,\n    ConstraintMintDecimals: 2018,\n    ConstraintSpace: 2019,\n    ConstraintAccountIsNone: 2020,\n    // Require.\n    RequireViolated: 2500,\n    RequireEqViolated: 2501,\n    RequireKeysEqViolated: 2502,\n    RequireNeqViolated: 2503,\n    RequireKeysNeqViolated: 2504,\n    RequireGtViolated: 2505,\n    RequireGteViolated: 2506,\n    // Accounts.\n    AccountDiscriminatorAlreadySet: 3000,\n    AccountDiscriminatorNotFound: 3001,\n    AccountDiscriminatorMismatch: 3002,\n    AccountDidNotDeserialize: 3003,\n    AccountDidNotSerialize: 3004,\n    AccountNotEnoughKeys: 3005,\n    AccountNotMutable: 3006,\n    AccountOwnedByWrongProgram: 3007,\n    InvalidProgramId: 3008,\n    InvalidProgramExecutable: 3009,\n    AccountNotSigner: 3010,\n    AccountNotSystemOwned: 3011,\n    AccountNotInitialized: 3012,\n    AccountNotProgramData: 3013,\n    AccountNotAssociatedTokenAccount: 3014,\n    AccountSysvarMismatch: 3015,\n    AccountReallocExceedsLimit: 3016,\n    AccountDuplicateReallocs: 3017,\n    // Miscellaneous\n    DeclaredProgramIdMismatch: 4100,\n    // Used for APIs that shouldn't be used anymore.\n    Deprecated: 5000,\n};\nconst LangErrorMessage = new Map([\n    // Instructions.\n    [\n        LangErrorCode.InstructionMissing,\n        \"8 byte instruction identifier not provided\",\n    ],\n    [\n        LangErrorCode.InstructionFallbackNotFound,\n        \"Fallback functions are not supported\",\n    ],\n    [\n        LangErrorCode.InstructionDidNotDeserialize,\n        \"The program could not deserialize the given instruction\",\n    ],\n    [\n        LangErrorCode.InstructionDidNotSerialize,\n        \"The program could not serialize the given instruction\",\n    ],\n    // Idl instructions.\n    [\n        LangErrorCode.IdlInstructionStub,\n        \"The program was compiled without idl instructions\",\n    ],\n    [\n        LangErrorCode.IdlInstructionInvalidProgram,\n        \"The transaction was given an invalid program for the IDL instruction\",\n    ],\n    // Constraints.\n    [LangErrorCode.ConstraintMut, \"A mut constraint was violated\"],\n    [LangErrorCode.ConstraintHasOne, \"A has one constraint was violated\"],\n    [LangErrorCode.ConstraintSigner, \"A signer constraint was violated\"],\n    [LangErrorCode.ConstraintRaw, \"A raw constraint was violated\"],\n    [LangErrorCode.ConstraintOwner, \"An owner constraint was violated\"],\n    [\n        LangErrorCode.ConstraintRentExempt,\n        \"A rent exemption constraint was violated\",\n    ],\n    [LangErrorCode.ConstraintSeeds, \"A seeds constraint was violated\"],\n    [LangErrorCode.ConstraintExecutable, \"An executable constraint was violated\"],\n    [\n        LangErrorCode.ConstraintState,\n        \"Deprecated Error, feel free to replace with something else\",\n    ],\n    [LangErrorCode.ConstraintAssociated, \"An associated constraint was violated\"],\n    [\n        LangErrorCode.ConstraintAssociatedInit,\n        \"An associated init constraint was violated\",\n    ],\n    [LangErrorCode.ConstraintClose, \"A close constraint was violated\"],\n    [LangErrorCode.ConstraintAddress, \"An address constraint was violated\"],\n    [LangErrorCode.ConstraintZero, \"Expected zero account discriminant\"],\n    [LangErrorCode.ConstraintTokenMint, \"A token mint constraint was violated\"],\n    [LangErrorCode.ConstraintTokenOwner, \"A token owner constraint was violated\"],\n    [\n        LangErrorCode.ConstraintMintMintAuthority,\n        \"A mint mint authority constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintFreezeAuthority,\n        \"A mint freeze authority constraint was violated\",\n    ],\n    [\n        LangErrorCode.ConstraintMintDecimals,\n        \"A mint decimals constraint was violated\",\n    ],\n    [LangErrorCode.ConstraintSpace, \"A space constraint was violated\"],\n    [\n        LangErrorCode.ConstraintAccountIsNone,\n        \"A required account for the constraint is None\",\n    ],\n    // Require.\n    [LangErrorCode.RequireViolated, \"A require expression was violated\"],\n    [LangErrorCode.RequireEqViolated, \"A require_eq expression was violated\"],\n    [\n        LangErrorCode.RequireKeysEqViolated,\n        \"A require_keys_eq expression was violated\",\n    ],\n    [LangErrorCode.RequireNeqViolated, \"A require_neq expression was violated\"],\n    [\n        LangErrorCode.RequireKeysNeqViolated,\n        \"A require_keys_neq expression was violated\",\n    ],\n    [LangErrorCode.RequireGtViolated, \"A require_gt expression was violated\"],\n    [LangErrorCode.RequireGteViolated, \"A require_gte expression was violated\"],\n    // Accounts.\n    [\n        LangErrorCode.AccountDiscriminatorAlreadySet,\n        \"The account discriminator was already set on this account\",\n    ],\n    [\n        LangErrorCode.AccountDiscriminatorNotFound,\n        \"No 8 byte discriminator was found on the account\",\n    ],\n    [\n        LangErrorCode.AccountDiscriminatorMismatch,\n        \"8 byte discriminator did not match what was expected\",\n    ],\n    [LangErrorCode.AccountDidNotDeserialize, \"Failed to deserialize the account\"],\n    [LangErrorCode.AccountDidNotSerialize, \"Failed to serialize the account\"],\n    [\n        LangErrorCode.AccountNotEnoughKeys,\n        \"Not enough account keys given to the instruction\",\n    ],\n    [LangErrorCode.AccountNotMutable, \"The given account is not mutable\"],\n    [\n        LangErrorCode.AccountOwnedByWrongProgram,\n        \"The given account is owned by a different program than expected\",\n    ],\n    [LangErrorCode.InvalidProgramId, \"Program ID was not as expected\"],\n    [LangErrorCode.InvalidProgramExecutable, \"Program account is not executable\"],\n    [LangErrorCode.AccountNotSigner, \"The given account did not sign\"],\n    [\n        LangErrorCode.AccountNotSystemOwned,\n        \"The given account is not owned by the system program\",\n    ],\n    [\n        LangErrorCode.AccountNotInitialized,\n        \"The program expected this account to be already initialized\",\n    ],\n    [\n        LangErrorCode.AccountNotProgramData,\n        \"The given account is not a program data account\",\n    ],\n    [\n        LangErrorCode.AccountNotAssociatedTokenAccount,\n        \"The given account is not the associated token account\",\n    ],\n    [\n        LangErrorCode.AccountSysvarMismatch,\n        \"The given public key does not match the required sysvar\",\n    ],\n    [\n        LangErrorCode.AccountReallocExceedsLimit,\n        \"The account reallocation exceeds the MAX_PERMITTED_DATA_INCREASE limit\",\n    ],\n    [\n        LangErrorCode.AccountDuplicateReallocs,\n        \"The account was duplicated for more than one reallocation\",\n    ],\n    // Miscellaneous\n    [\n        LangErrorCode.DeclaredProgramIdMismatch,\n        \"The declared program id does not match the actual program id\",\n    ],\n    // Deprecated\n    [\n        LangErrorCode.Deprecated,\n        \"The API being used is deprecated and should no longer be used\",\n    ],\n]);\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign$1 = function() {\r\n    __assign$1 = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign$1.apply(this, arguments);\r\n};\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\n/**\n * Lower case as a function.\n */\nfunction lowerCase(str) {\n    return str.toLowerCase();\n}\n\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nvar DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n// Remove all non-word characters.\nvar DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nfunction noCase(input, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? \" \" : _d;\n    var result = replace(replace(input, splitRegexp, \"$1\\0$2\"), stripRegexp, \"\\0\");\n    var start = 0;\n    var end = result.length;\n    // Trim the delimiter from around the output string.\n    while (result.charAt(start) === \"\\0\")\n        start++;\n    while (result.charAt(end - 1) === \"\\0\")\n        end--;\n    // Transform each token independently.\n    return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input, re, value) {\n    if (re instanceof RegExp)\n        return input.replace(re, value);\n    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n}\n\nfunction dotCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return noCase(input, __assign({ delimiter: \".\" }, options));\n}\n\nfunction snakeCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return dotCase(input, __assign$1({ delimiter: \"_\" }, options));\n}\n\nclass IdlCoder {\n    static fieldLayout(field, types) {\n        const fieldName = field.name !== undefined ? camelCase(field.name) : undefined;\n        switch (field.type) {\n            case \"bool\": {\n                return borsh.bool(fieldName);\n            }\n            case \"u8\": {\n                return borsh.u8(fieldName);\n            }\n            case \"i8\": {\n                return borsh.i8(fieldName);\n            }\n            case \"u16\": {\n                return borsh.u16(fieldName);\n            }\n            case \"i16\": {\n                return borsh.i16(fieldName);\n            }\n            case \"u32\": {\n                return borsh.u32(fieldName);\n            }\n            case \"i32\": {\n                return borsh.i32(fieldName);\n            }\n            case \"f32\": {\n                return borsh.f32(fieldName);\n            }\n            case \"u64\": {\n                return borsh.u64(fieldName);\n            }\n            case \"i64\": {\n                return borsh.i64(fieldName);\n            }\n            case \"f64\": {\n                return borsh.f64(fieldName);\n            }\n            case \"u128\": {\n                return borsh.u128(fieldName);\n            }\n            case \"i128\": {\n                return borsh.i128(fieldName);\n            }\n            case \"u256\": {\n                return borsh.u256(fieldName);\n            }\n            case \"i256\": {\n                return borsh.i256(fieldName);\n            }\n            case \"bytes\": {\n                return borsh.vecU8(fieldName);\n            }\n            case \"string\": {\n                return borsh.str(fieldName);\n            }\n            case \"publicKey\": {\n                return borsh.publicKey(fieldName);\n            }\n            default: {\n                if (\"vec\" in field.type) {\n                    return borsh.vec(IdlCoder.fieldLayout({\n                        name: undefined,\n                        type: field.type.vec,\n                    }, types), fieldName);\n                }\n                else if (\"option\" in field.type) {\n                    return borsh.option(IdlCoder.fieldLayout({\n                        name: undefined,\n                        type: field.type.option,\n                    }, types), fieldName);\n                }\n                else if (\"defined\" in field.type) {\n                    // User defined type.\n                    if (!types) {\n                        throw new IdlError(\"User defined types not provided\");\n                    }\n                    const defined = field.type.defined;\n                    const filtered = types.filter((t) => t.name === defined);\n                    if (filtered.length !== 1) {\n                        throw new IdlError(`Type not found: ${JSON.stringify(field)}`);\n                    }\n                    return IdlCoder.typeDefLayout(filtered[0], types, fieldName);\n                }\n                else if (\"array\" in field.type) {\n                    let arrayTy = field.type.array[0];\n                    let arrayLen = field.type.array[1];\n                    let innerLayout = IdlCoder.fieldLayout({\n                        name: undefined,\n                        type: arrayTy,\n                    }, types);\n                    return borsh.array(innerLayout, arrayLen, fieldName);\n                }\n                else {\n                    throw new Error(`Not yet implemented: ${field}`);\n                }\n            }\n        }\n    }\n    static typeDefLayout(typeDef, types = [], name) {\n        switch (typeDef.type.kind) {\n            case \"struct\": {\n                const fieldLayouts = typeDef.type.fields.map((field) => {\n                    return IdlCoder.fieldLayout(field, types);\n                });\n                return borsh.struct(fieldLayouts, name);\n            }\n            case \"enum\": {\n                let variants = typeDef.type.variants.map((variant) => {\n                    const name = camelCase(variant.name);\n                    if (!variant.fields) {\n                        return borsh.struct([], name);\n                    }\n                    const fieldLayouts = variant.fields.map((f, i) => {\n                        if (f === null || f === void 0 ? void 0 : f.name) {\n                            return IdlCoder.fieldLayout(f, types);\n                        }\n                        return IdlCoder.fieldLayout({ type: f, name: i.toString() }, types);\n                    });\n                    return borsh.struct(fieldLayouts, name);\n                });\n                if (name !== undefined) {\n                    // Buffer-layout lib requires the name to be null (on construction)\n                    // when used as a field.\n                    return borsh.rustEnum(variants).replicate(name);\n                }\n                return borsh.rustEnum(variants, name);\n            }\n            case \"alias\": {\n                return IdlCoder.fieldLayout({ type: typeDef.type.value, name: typeDef.name }, types);\n            }\n        }\n    }\n}\n\n/**\n * Namespace for global instruction function signatures (i.e. functions\n * that aren't namespaced by the state or any of its trait implementations).\n */\nconst SIGHASH_GLOBAL_NAMESPACE = \"global\";\n/**\n * Encodes and decodes program instructions.\n */\nclass BorshInstructionCoder {\n    constructor(idl) {\n        this.idl = idl;\n        this.ixLayout = BorshInstructionCoder.parseIxLayout(idl);\n        const sighashLayouts = new Map();\n        idl.instructions.forEach((ix) => {\n            const sh = sighash(SIGHASH_GLOBAL_NAMESPACE, ix.name);\n            sighashLayouts.set(bs58$1.encode(sh), {\n                layout: this.ixLayout.get(ix.name),\n                name: ix.name,\n            });\n        });\n        this.sighashLayouts = sighashLayouts;\n    }\n    /**\n     * Encodes a program instruction.\n     */\n    encode(ixName, ix) {\n        return this._encode(SIGHASH_GLOBAL_NAMESPACE, ixName, ix);\n    }\n    _encode(nameSpace, ixName, ix) {\n        const buffer = Buffer$1.alloc(1000); // TODO: use a tighter buffer.\n        const methodName = camelCase(ixName);\n        const layout = this.ixLayout.get(methodName);\n        if (!layout) {\n            throw new Error(`Unknown method: ${methodName}`);\n        }\n        const len = layout.encode(ix, buffer);\n        const data = buffer.slice(0, len);\n        return Buffer$1.concat([sighash(nameSpace, ixName), data]);\n    }\n    static parseIxLayout(idl) {\n        const ixLayouts = idl.instructions.map((ix) => {\n            let fieldLayouts = ix.args.map((arg) => {\n                var _a, _b;\n                return IdlCoder.fieldLayout(arg, Array.from([...((_a = idl.accounts) !== null && _a !== void 0 ? _a : []), ...((_b = idl.types) !== null && _b !== void 0 ? _b : [])]));\n            });\n            const name = camelCase(ix.name);\n            return [name, borsh.struct(fieldLayouts, name)];\n        });\n        return new Map(ixLayouts);\n    }\n    /**\n     * Decodes a program instruction.\n     */\n    decode(ix, encoding = \"hex\") {\n        if (typeof ix === \"string\") {\n            ix = encoding === \"hex\" ? Buffer$1.from(ix, \"hex\") : bs58$1.decode(ix);\n        }\n        let sighash = bs58$1.encode(ix.slice(0, 8));\n        let data = ix.slice(8);\n        const decoder = this.sighashLayouts.get(sighash);\n        if (!decoder) {\n            return null;\n        }\n        return {\n            data: decoder.layout.decode(data),\n            name: decoder.name,\n        };\n    }\n    /**\n     * Returns a formatted table of all the fields in the given instruction data.\n     */\n    format(ix, accountMetas) {\n        return InstructionFormatter.format(ix, accountMetas, this.idl);\n    }\n}\nclass InstructionFormatter {\n    static format(ix, accountMetas, idl) {\n        const idlIx = idl.instructions.filter((i) => ix.name === i.name)[0];\n        if (idlIx === undefined) {\n            console.error(\"Invalid instruction given\");\n            return null;\n        }\n        const args = idlIx.args.map((idlField) => {\n            return {\n                name: idlField.name,\n                type: InstructionFormatter.formatIdlType(idlField.type),\n                data: InstructionFormatter.formatIdlData(idlField, ix.data[idlField.name], idl.types),\n            };\n        });\n        const flatIdlAccounts = InstructionFormatter.flattenIdlAccounts(idlIx.accounts);\n        const accounts = accountMetas.map((meta, idx) => {\n            if (idx < flatIdlAccounts.length) {\n                return {\n                    name: flatIdlAccounts[idx].name,\n                    ...meta,\n                };\n            }\n            // \"Remaining accounts\" are unnamed in Anchor.\n            else {\n                return {\n                    name: undefined,\n                    ...meta,\n                };\n            }\n        });\n        return {\n            args,\n            accounts,\n        };\n    }\n    static formatIdlType(idlType) {\n        if (typeof idlType === \"string\") {\n            return idlType;\n        }\n        if (\"vec\" in idlType) {\n            return `Vec<${this.formatIdlType(idlType.vec)}>`;\n        }\n        if (\"option\" in idlType) {\n            return `Option<${this.formatIdlType(idlType.option)}>`;\n        }\n        if (\"defined\" in idlType) {\n            return idlType.defined;\n        }\n        if (\"array\" in idlType) {\n            return `Array<${idlType.array[0]}; ${idlType.array[1]}>`;\n        }\n        throw new Error(`Unknown IDL type: ${idlType}`);\n    }\n    static formatIdlData(idlField, data, types) {\n        if (typeof idlField.type === \"string\") {\n            return data.toString();\n        }\n        if (idlField.type.hasOwnProperty(\"vec\")) {\n            return (\"[\" +\n                data\n                    .map((d) => this.formatIdlData({ name: \"\", type: idlField.type.vec }, d))\n                    .join(\", \") +\n                \"]\");\n        }\n        if (idlField.type.hasOwnProperty(\"option\")) {\n            return data === null\n                ? \"null\"\n                : this.formatIdlData({ name: \"\", type: idlField.type.option }, data, types);\n        }\n        if (idlField.type.hasOwnProperty(\"defined\")) {\n            if (types === undefined) {\n                throw new Error(\"User defined types not provided\");\n            }\n            const filtered = types.filter((t) => t.name === idlField.type.defined);\n            if (filtered.length !== 1) {\n                throw new Error(`Type not found: ${idlField.type.defined}`);\n            }\n            return InstructionFormatter.formatIdlDataDefined(filtered[0], data, types);\n        }\n        return \"unknown\";\n    }\n    static formatIdlDataDefined(typeDef, data, types) {\n        switch (typeDef.type.kind) {\n            case \"struct\": {\n                const struct = typeDef.type;\n                const fields = Object.keys(data)\n                    .map((k) => {\n                    const field = struct.fields.find((f) => f.name === k);\n                    if (!field) {\n                        throw new Error(\"Unable to find type\");\n                    }\n                    return (k +\n                        \": \" +\n                        InstructionFormatter.formatIdlData(field, data[k], types));\n                })\n                    .join(\", \");\n                return \"{ \" + fields + \" }\";\n            }\n            case \"enum\": {\n                if (typeDef.type.variants.length === 0) {\n                    return \"{}\";\n                }\n                // Struct enum.\n                if (typeDef.type.variants[0].name) {\n                    const variants = typeDef.type.variants;\n                    const variant = Object.keys(data)[0];\n                    const enumType = data[variant];\n                    const namedFields = Object.keys(enumType)\n                        .map((f) => {\n                        var _a;\n                        const fieldData = enumType[f];\n                        const idlField = (_a = variants[variant]) === null || _a === void 0 ? void 0 : _a.find((v) => v.name === f);\n                        if (!idlField) {\n                            throw new Error(\"Unable to find variant\");\n                        }\n                        return (f +\n                            \": \" +\n                            InstructionFormatter.formatIdlData(idlField, fieldData, types));\n                    })\n                        .join(\", \");\n                    const variantName = camelCase(variant, { pascalCase: true });\n                    if (namedFields.length === 0) {\n                        return variantName;\n                    }\n                    return `${variantName} { ${namedFields} }`;\n                }\n                // Tuple enum.\n                else {\n                    // TODO.\n                    return \"Tuple formatting not yet implemented\";\n                }\n            }\n            case \"alias\": {\n                return InstructionFormatter.formatIdlType(typeDef.type.value);\n            }\n        }\n    }\n    static flattenIdlAccounts(accounts, prefix) {\n        return accounts\n            .map((account) => {\n            const accName = sentenceCase(account.name);\n            if (account.hasOwnProperty(\"accounts\")) {\n                const newPrefix = prefix ? `${prefix} > ${accName}` : accName;\n                return InstructionFormatter.flattenIdlAccounts(account.accounts, newPrefix);\n            }\n            else {\n                return {\n                    ...account,\n                    name: prefix ? `${prefix} > ${accName}` : accName,\n                };\n            }\n        })\n            .flat();\n    }\n}\nfunction sentenceCase(field) {\n    const result = field.replace(/([A-Z])/g, \" $1\");\n    return result.charAt(0).toUpperCase() + result.slice(1);\n}\n// Not technically sighash, since we don't include the arguments, as Rust\n// doesn't allow function overloading.\nfunction sighash(nameSpace, ixName) {\n    let name = snakeCase(ixName);\n    let preimage = `${nameSpace}:${name}`;\n    return Buffer$1.from(sha256$1(preimage).slice(0, 8));\n}\n\nfunction accountSize(idl, idlAccount) {\n    switch (idlAccount.type.kind) {\n        case \"struct\": {\n            return idlAccount.type.fields\n                .map((f) => typeSize(idl, f.type))\n                .reduce((acc, size) => acc + size, 0);\n        }\n        case \"enum\": {\n            const variantSizes = idlAccount.type.variants.map((variant) => {\n                if (!variant.fields) {\n                    return 0;\n                }\n                return variant.fields\n                    .map((f) => {\n                    // Unnamed enum variant\n                    if (!(typeof f === \"object\" && \"name\" in f)) {\n                        return typeSize(idl, f);\n                    }\n                    // Named enum variant\n                    return typeSize(idl, f.type);\n                })\n                    .reduce((acc, size) => acc + size, 0);\n            });\n            return Math.max(...variantSizes) + 1;\n        }\n        case \"alias\": {\n            return typeSize(idl, idlAccount.type.value);\n        }\n    }\n}\n// Returns the size of the type in bytes. For variable length types, just return\n// 1. Users should override this value in such cases.\nfunction typeSize(idl, ty) {\n    var _a, _b;\n    switch (ty) {\n        case \"bool\":\n            return 1;\n        case \"u8\":\n            return 1;\n        case \"i8\":\n            return 1;\n        case \"i16\":\n            return 2;\n        case \"u16\":\n            return 2;\n        case \"u32\":\n            return 4;\n        case \"i32\":\n            return 4;\n        case \"f32\":\n            return 4;\n        case \"u64\":\n            return 8;\n        case \"i64\":\n            return 8;\n        case \"f64\":\n            return 8;\n        case \"u128\":\n            return 16;\n        case \"i128\":\n            return 16;\n        case \"u256\":\n            return 32;\n        case \"i256\":\n            return 32;\n        case \"bytes\":\n            return 1;\n        case \"string\":\n            return 1;\n        case \"publicKey\":\n            return 32;\n        default:\n            if (\"vec\" in ty) {\n                return 1;\n            }\n            if (\"option\" in ty) {\n                return 1 + typeSize(idl, ty.option);\n            }\n            if (\"coption\" in ty) {\n                return 4 + typeSize(idl, ty.coption);\n            }\n            if (\"defined\" in ty) {\n                const filtered = (_b = (_a = idl.types) === null || _a === void 0 ? void 0 : _a.filter((t) => t.name === ty.defined)) !== null && _b !== void 0 ? _b : [];\n                if (filtered.length !== 1) {\n                    throw new IdlError(`Type not found: ${JSON.stringify(ty)}`);\n                }\n                let typeDef = filtered[0];\n                return accountSize(idl, typeDef);\n            }\n            if (\"array\" in ty) {\n                let arrayTy = ty.array[0];\n                let arraySize = ty.array[1];\n                return typeSize(idl, arrayTy) * arraySize;\n            }\n            throw new Error(`Invalid type ${JSON.stringify(ty)}`);\n    }\n}\n\n/**\n * Number of bytes in anchor discriminators\n */\nconst DISCRIMINATOR_SIZE = 8;\nfunction discriminator(preimage) {\n    return Buffer.from(sha256$1(preimage).slice(0, DISCRIMINATOR_SIZE));\n}\n\n/**\n * Encodes and decodes account objects.\n */\nclass BorshAccountsCoder {\n    constructor(idl) {\n        if (idl.accounts === undefined) {\n            this.accountLayouts = new Map();\n            return;\n        }\n        const layouts = idl.accounts.map((acc) => {\n            return [acc.name, IdlCoder.typeDefLayout(acc, idl.types)];\n        });\n        this.accountLayouts = new Map(layouts);\n        this.idl = idl;\n    }\n    async encode(accountName, account) {\n        const buffer = Buffer$1.alloc(1000); // TODO: use a tighter buffer.\n        const layout = this.accountLayouts.get(accountName);\n        if (!layout) {\n            throw new Error(`Unknown account: ${accountName}`);\n        }\n        const len = layout.encode(account, buffer);\n        let accountData = buffer.slice(0, len);\n        let discriminator = BorshAccountsCoder.accountDiscriminator(accountName);\n        return Buffer$1.concat([discriminator, accountData]);\n    }\n    decode(accountName, data) {\n        // Assert the account discriminator is correct.\n        const discriminator = BorshAccountsCoder.accountDiscriminator(accountName);\n        if (discriminator.compare(data.slice(0, 8))) {\n            throw new Error(\"Invalid account discriminator\");\n        }\n        return this.decodeUnchecked(accountName, data);\n    }\n    decodeAny(data) {\n        const accountDescriminator = data.slice(0, 8);\n        const accountName = Array.from(this.accountLayouts.keys()).find((key) => BorshAccountsCoder.accountDiscriminator(key).equals(accountDescriminator));\n        if (!accountName) {\n            throw new Error(\"Account descriminator not found\");\n        }\n        return this.decodeUnchecked(accountName, data);\n    }\n    decodeUnchecked(accountName, ix) {\n        // Chop off the discriminator before decoding.\n        const data = ix.subarray(DISCRIMINATOR_SIZE);\n        const layout = this.accountLayouts.get(accountName);\n        if (!layout) {\n            throw new Error(`Unknown account: ${accountName}`);\n        }\n        return layout.decode(data);\n    }\n    memcmp(accountName, appendData) {\n        const discriminator = BorshAccountsCoder.accountDiscriminator(accountName);\n        return {\n            offset: 0,\n            bytes: bs58$1.encode(appendData ? Buffer$1.concat([discriminator, appendData]) : discriminator),\n        };\n    }\n    size(idlAccount) {\n        var _a;\n        return DISCRIMINATOR_SIZE + ((_a = accountSize(this.idl, idlAccount)) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Calculates and returns a unique 8 byte discriminator prepended to all anchor accounts.\n     *\n     * @param name The name of the account to calculate the discriminator.\n     */\n    static accountDiscriminator(name) {\n        const discriminatorPreimage = `account:${camelCase(name, {\n            pascalCase: true,\n            preserveConsecutiveUppercase: true,\n        })}`;\n        return discriminator(discriminatorPreimage);\n    }\n}\n\nclass BorshEventCoder {\n    constructor(idl) {\n        if (idl.events === undefined) {\n            this.layouts = new Map();\n            return;\n        }\n        const layouts = idl.events.map((event) => {\n            let eventTypeDef = {\n                name: event.name,\n                type: {\n                    kind: \"struct\",\n                    fields: event.fields.map((f) => {\n                        return { name: f.name, type: f.type };\n                    }),\n                },\n            };\n            return [event.name, IdlCoder.typeDefLayout(eventTypeDef, idl.types)];\n        });\n        this.layouts = new Map(layouts);\n        this.discriminators = new Map(idl.events === undefined\n            ? []\n            : idl.events.map((e) => [\n                encode(eventDiscriminator(e.name)),\n                e.name,\n            ]));\n    }\n    decode(log) {\n        let logArr;\n        // This will throw if log length is not a multiple of 4.\n        try {\n            logArr = decode(log);\n        }\n        catch (e) {\n            return null;\n        }\n        const disc = encode(logArr.slice(0, 8));\n        // Only deserialize if the discriminator implies a proper event.\n        const eventName = this.discriminators.get(disc);\n        if (eventName === undefined) {\n            return null;\n        }\n        const layout = this.layouts.get(eventName);\n        if (!layout) {\n            throw new Error(`Unknown event: ${eventName}`);\n        }\n        const data = layout.decode(logArr.slice(8));\n        return { data, name: eventName };\n    }\n}\nfunction eventDiscriminator(name) {\n    return discriminator(`event:${name}`);\n}\n\n/**\n * Encodes and decodes user-defined types.\n */\nclass BorshTypesCoder {\n    constructor(idl) {\n        if (idl.types === undefined) {\n            this.typeLayouts = new Map();\n            return;\n        }\n        const layouts = idl.types.map((acc) => {\n            return [acc.name, IdlCoder.typeDefLayout(acc, idl.types)];\n        });\n        this.typeLayouts = new Map(layouts);\n        this.idl = idl;\n    }\n    encode(typeName, type) {\n        const buffer = Buffer$1.alloc(1000); // TODO: use a tighter buffer.\n        const layout = this.typeLayouts.get(typeName);\n        if (!layout) {\n            throw new Error(`Unknown type: ${typeName}`);\n        }\n        const len = layout.encode(type, buffer);\n        return buffer.slice(0, len);\n    }\n    decode(typeName, typeData) {\n        const layout = this.typeLayouts.get(typeName);\n        if (!layout) {\n            throw new Error(`Unknown type: ${typeName}`);\n        }\n        return layout.decode(typeData);\n    }\n}\n\n/**\n * BorshCoder is the default Coder for Anchor programs implementing the\n * borsh based serialization interface.\n */\nclass BorshCoder {\n    constructor(idl) {\n        this.instruction = new BorshInstructionCoder(idl);\n        this.accounts = new BorshAccountsCoder(idl);\n        this.events = new BorshEventCoder(idl);\n        this.types = new BorshTypesCoder(idl);\n    }\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\n/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nvar Layout_2 = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob$1 extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/** Factory for {@link OffsetLayout}. */\nvar offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nvar u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nvar u32 = (property => new UInt(4, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nvar nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nvar ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Structure} values. */\nvar struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link Union} values. */\nvar union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link Blob} values. */\nvar blob = ((length, property) => new Blob$1(length, property));\n\nclass SystemInstructionCoder {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    constructor(_) { }\n    encode(ixName, ix) {\n        switch (camelCase(ixName)) {\n            case \"createAccount\": {\n                return encodeCreateAccount(ix);\n            }\n            case \"assign\": {\n                return encodeAssign(ix);\n            }\n            case \"transfer\": {\n                return encodeTransfer(ix);\n            }\n            case \"createAccountWithSeed\": {\n                return encodeCreateAccountWithSeed(ix);\n            }\n            case \"advanceNonceAccount\": {\n                return encodeAdvanceNonceAccount(ix);\n            }\n            case \"withdrawNonceAccount\": {\n                return encodeWithdrawNonceAccount(ix);\n            }\n            case \"initializeNonceAccount\": {\n                return encodeInitializeNonceAccount(ix);\n            }\n            case \"authorizeNonceAccount\": {\n                return encodeAuthorizeNonceAccount(ix);\n            }\n            case \"allocate\": {\n                return encodeAllocate(ix);\n            }\n            case \"allocateWithSeed\": {\n                return encodeAllocateWithSeed(ix);\n            }\n            case \"assignWithSeed\": {\n                return encodeAssignWithSeed(ix);\n            }\n            case \"transferWithSeed\": {\n                return encodeTransferWithSeed(ix);\n            }\n            default: {\n                throw new Error(`Invalid instruction: ${ixName}`);\n            }\n        }\n    }\n    encodeState(_ixName, _ix) {\n        throw new Error(\"System does not have state\");\n    }\n}\nclass RustStringLayout extends Layout_2 {\n    constructor(property) {\n        super(-1, property);\n        this.property = property;\n        this.layout = struct([\n            u32(\"length\"),\n            u32(\"lengthPadding\"),\n            blob(offset(u32(), -8), \"chars\"),\n        ], this.property);\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.layout.span;\n        }\n        const data = {\n            chars: Buffer.from(src, \"utf8\"),\n        };\n        return this.layout.encode(data, b, offset);\n    }\n    decode(b, offset = 0) {\n        const data = this.layout.decode(b, offset);\n        return data[\"chars\"].toString();\n    }\n    getSpan(b, offset = 0) {\n        return (u32().span +\n            u32().span +\n            new BN(new Uint8Array(b).slice(offset, offset + 4), 10, \"le\").toNumber());\n    }\n}\nfunction rustStringLayout(property) {\n    return new RustStringLayout(property);\n}\nfunction publicKey$2(property) {\n    return blob(32, property);\n}\nfunction encodeCreateAccount({ lamports, space, owner }) {\n    return encodeData({\n        createAccount: { lamports, space, owner: owner.toBuffer() },\n    });\n}\nfunction encodeAssign({ owner }) {\n    return encodeData({\n        assign: { owner: owner.toBuffer() },\n    });\n}\nfunction encodeTransfer({ lamports }) {\n    return encodeData({\n        transfer: { lamports },\n    });\n}\nfunction encodeCreateAccountWithSeed({ base, seed, lamports, space, owner, }) {\n    return encodeData({\n        createAccountWithSeed: {\n            base: base.toBuffer(),\n            seed,\n            lamports,\n            space,\n            owner: owner.toBuffer(),\n        },\n    }, LAYOUT.getVariant(3).span + seed.length);\n}\nfunction encodeInitializeNonceAccount({ authorized }) {\n    return encodeData({\n        initializeNonceAccount: { authorized: authorized.toBuffer() },\n    });\n}\nfunction encodeAdvanceNonceAccount({ authorized }) {\n    return encodeData({\n        advanceNonceAccount: { authorized: authorized.toBuffer() },\n    });\n}\nfunction encodeWithdrawNonceAccount({ lamports }) {\n    return encodeData({\n        withdrawNonceAccount: { lamports },\n    });\n}\nfunction encodeAuthorizeNonceAccount({ authorized }) {\n    return encodeData({\n        authorizeNonceAccount: { authorized: authorized.toBuffer() },\n    });\n}\nfunction encodeAllocate({ space }) {\n    return encodeData({\n        allocate: { space },\n    });\n}\nfunction encodeAllocateWithSeed({ base, seed, space, owner }) {\n    return encodeData({\n        allocateWithSeed: {\n            base: base.toBuffer(),\n            seed,\n            space,\n            owner: owner.toBuffer(),\n        },\n    }, LAYOUT.getVariant(9).span + seed.length);\n}\nfunction encodeAssignWithSeed({ base, seed, owner }) {\n    return encodeData({\n        assignWithSeed: {\n            base: base.toBuffer(),\n            seed,\n            owner: owner.toBuffer(),\n        },\n    }, LAYOUT.getVariant(10).span + seed.length);\n}\nfunction encodeTransferWithSeed({ lamports, seed, owner }) {\n    return encodeData({\n        transferWithSeed: {\n            lamports,\n            seed,\n            owner: owner.toBuffer(),\n        },\n    }, LAYOUT.getVariant(11).span + seed.length);\n}\nconst LAYOUT = union(u32(\"instruction\"));\nLAYOUT.addVariant(0, struct([\n    ns64(\"lamports\"),\n    ns64(\"space\"),\n    publicKey$2(\"owner\"),\n]), \"createAccount\");\nLAYOUT.addVariant(1, struct([publicKey$2(\"owner\")]), \"assign\");\nLAYOUT.addVariant(2, struct([ns64(\"lamports\")]), \"transfer\");\nLAYOUT.addVariant(3, struct([\n    publicKey$2(\"base\"),\n    rustStringLayout(\"seed\"),\n    ns64(\"lamports\"),\n    ns64(\"space\"),\n    publicKey$2(\"owner\"),\n]), \"createAccountWithSeed\");\nLAYOUT.addVariant(4, struct([publicKey$2(\"authorized\")]), \"advanceNonceAccount\");\nLAYOUT.addVariant(5, struct([ns64(\"lamports\")]), \"withdrawNonceAccount\");\nLAYOUT.addVariant(6, struct([publicKey$2(\"authorized\")]), \"initializeNonceAccount\");\nLAYOUT.addVariant(7, struct([publicKey$2(\"authorized\")]), \"authorizeNonceAccount\");\nLAYOUT.addVariant(8, struct([ns64(\"space\")]), \"allocate\");\nLAYOUT.addVariant(9, struct([\n    publicKey$2(\"base\"),\n    rustStringLayout(\"seed\"),\n    ns64(\"space\"),\n    publicKey$2(\"owner\"),\n]), \"allocateWithSeed\");\nLAYOUT.addVariant(10, struct([\n    publicKey$2(\"base\"),\n    rustStringLayout(\"seed\"),\n    publicKey$2(\"owner\"),\n]), \"assignWithSeed\");\nLAYOUT.addVariant(11, struct([\n    ns64(\"lamports\"),\n    rustStringLayout(\"seed\"),\n    publicKey$2(\"owner\"),\n]), \"transferWithSeed\");\nfunction encodeData(instruction, maxSpan) {\n    const b = Buffer.alloc(maxSpan !== null && maxSpan !== void 0 ? maxSpan : instructionMaxSpan);\n    const span = LAYOUT.encode(instruction, b);\n    if (maxSpan === undefined) {\n        return b.slice(0, span);\n    }\n    return b;\n}\nconst instructionMaxSpan = Math.max(...Object.values(LAYOUT.registry).map((r) => r.span));\n\nclass SystemAccountsCoder {\n    constructor(idl) {\n        this.idl = idl;\n    }\n    async encode(accountName, account) {\n        switch (accountName) {\n            case \"nonce\": {\n                const buffer = Buffer.alloc(NONCE_ACCOUNT_LENGTH);\n                const len = NONCE_ACCOUNT_LAYOUT.encode(account, buffer);\n                return buffer.slice(0, len);\n            }\n            default: {\n                throw new Error(`Invalid account name: ${accountName}`);\n            }\n        }\n    }\n    decode(accountName, ix) {\n        return this.decodeUnchecked(accountName, ix);\n    }\n    decodeUnchecked(accountName, ix) {\n        switch (accountName) {\n            case \"nonce\": {\n                return decodeNonceAccount(ix);\n            }\n            default: {\n                throw new Error(`Invalid account name: ${accountName}`);\n            }\n        }\n    }\n    // TODO: this won't use the appendData.\n    memcmp(accountName, _appendData) {\n        switch (accountName) {\n            case \"nonce\": {\n                return {\n                    dataSize: NONCE_ACCOUNT_LENGTH,\n                };\n            }\n            default: {\n                throw new Error(`Invalid account name: ${accountName}`);\n            }\n        }\n    }\n    size(idlAccount) {\n        var _a;\n        return (_a = accountSize(this.idl, idlAccount)) !== null && _a !== void 0 ? _a : 0;\n    }\n}\nfunction decodeNonceAccount(ix) {\n    return NONCE_ACCOUNT_LAYOUT.decode(ix);\n}\nclass WrappedLayout$1 extends Layout_2 {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey$1(property) {\n    return new WrappedLayout$1(blob(32), (b) => new PublicKey(b), (key) => key.toBuffer(), property);\n}\nconst NONCE_ACCOUNT_LAYOUT = struct([\n    u32(\"version\"),\n    u32(\"state\"),\n    publicKey$1(\"authorizedPubkey\"),\n    publicKey$1(\"nonce\"),\n    struct([nu64(\"lamportsPerSignature\")], \"feeCalculator\"),\n]);\n\nclass SystemEventsCoder {\n    constructor(_idl) { }\n    decode(_log) {\n        throw new Error(\"System program does not have events\");\n    }\n}\n\nclass SystemTypesCoder {\n    constructor(_idl) { }\n    encode(_name, _type) {\n        throw new Error(\"System does not have user-defined types\");\n    }\n    decode(_name, _typeData) {\n        throw new Error(\"System does not have user-defined types\");\n    }\n}\n\n/**\n * Coder for the System program.\n */\nclass SystemCoder {\n    constructor(idl) {\n        this.instruction = new SystemInstructionCoder(idl);\n        this.accounts = new SystemAccountsCoder(idl);\n        this.events = new SystemEventsCoder(idl);\n        this.types = new SystemTypesCoder(idl);\n    }\n}\n\nfunction hash(data) {\n    return new TextDecoder().decode(sha256$1(data));\n}\n\nvar sha256 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    hash: hash\n});\n\n// Sync version of web3.PublicKey.createWithSeed.\nfunction createWithSeedSync(fromPublicKey, seed, programId) {\n    const buffer = Buffer$1.concat([\n        fromPublicKey.toBuffer(),\n        Buffer$1.from(seed),\n        programId.toBuffer(),\n    ]);\n    return new PublicKey(sha256$1(buffer));\n}\nfunction associated(programId, ...args) {\n    let seeds = [Buffer$1.from([97, 110, 99, 104, 111, 114])]; // b\"anchor\".\n    args.forEach((arg) => {\n        seeds.push(arg instanceof Buffer$1 ? arg : translateAddress(arg).toBuffer());\n    });\n    const [assoc] = PublicKey.findProgramAddressSync(seeds, translateAddress(programId));\n    return assoc;\n}\n\nvar pubkey = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    createWithSeedSync: createWithSeedSync,\n    associated: associated\n});\n\nconst TOKEN_PROGRAM_ID = new PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\");\nconst ASSOCIATED_PROGRAM_ID = new PublicKey(\"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\");\nfunction associatedAddress({ mint, owner, }) {\n    return PublicKey.findProgramAddressSync([owner.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()], ASSOCIATED_PROGRAM_ID)[0];\n}\n\nvar token = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    TOKEN_PROGRAM_ID: TOKEN_PROGRAM_ID,\n    ASSOCIATED_PROGRAM_ID: ASSOCIATED_PROGRAM_ID,\n    associatedAddress: associatedAddress\n});\n\nvar browserPonyfill = {exports: {}};\n\n(function (module, exports) {\nvar global = typeof self !== 'undefined' ? self : commonjsGlobal;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException;\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\n((function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}))({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch; // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch; // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch; // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers;\nexports.Request = ctx.Request;\nexports.Response = ctx.Response;\nmodule.exports = exports;\n}(browserPonyfill, browserPonyfill.exports));\n\nvar fetch = /*@__PURE__*/getDefaultExportFromCjs(browserPonyfill.exports);\n\n/**\n * Returns a verified build from the anchor registry. null if no such\n * verified build exists, e.g., if the program has been upgraded since the\n * last verified build.\n */\nasync function verifiedBuild(connection, programId, limit = 5) {\n    const url = `https://api.apr.dev/api/v0/program/${programId.toString()}/latest?limit=${limit}`;\n    const [programData, latestBuildsResp] = await Promise.all([\n        fetchData(connection, programId),\n        fetch(url),\n    ]);\n    // Filter out all non successful builds.\n    const latestBuilds = (await latestBuildsResp.json()).filter((b) => !b.aborted && b.state === \"Built\" && b.verified === \"Verified\");\n    if (latestBuilds.length === 0) {\n        return null;\n    }\n    // Get the latest build.\n    const build = latestBuilds[0];\n    // Has the program been upgraded since the last build?\n    if (programData.slot.toNumber() !== build.verified_slot) {\n        return null;\n    }\n    // Success.\n    return build;\n}\n/**\n * Returns the program data account for this program, containing the\n * metadata for this program, e.g., the upgrade authority.\n */\nasync function fetchData(connection, programId) {\n    const accountInfo = await connection.getAccountInfo(programId);\n    if (accountInfo === null) {\n        throw new Error(\"program account not found\");\n    }\n    const { program } = decodeUpgradeableLoaderState(accountInfo.data);\n    const programdataAccountInfo = await connection.getAccountInfo(program.programdataAddress);\n    if (programdataAccountInfo === null) {\n        throw new Error(\"program data account not found\");\n    }\n    const { programData } = decodeUpgradeableLoaderState(programdataAccountInfo.data);\n    return programData;\n}\nconst UPGRADEABLE_LOADER_STATE_LAYOUT = borsh.rustEnum([\n    borsh.struct([], \"uninitialized\"),\n    borsh.struct([borsh.option(borsh.publicKey(), \"authorityAddress\")], \"buffer\"),\n    borsh.struct([borsh.publicKey(\"programdataAddress\")], \"program\"),\n    borsh.struct([\n        borsh.u64(\"slot\"),\n        borsh.option(borsh.publicKey(), \"upgradeAuthorityAddress\"),\n    ], \"programData\"),\n], undefined, borsh.u32());\nfunction decodeUpgradeableLoaderState(data) {\n    return UPGRADEABLE_LOADER_STATE_LAYOUT.decode(data);\n}\n\nvar registry = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    verifiedBuild: verifiedBuild,\n    fetchData: fetchData,\n    decodeUpgradeableLoaderState: decodeUpgradeableLoaderState\n});\n\nvar index = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    sha256: sha256,\n    rpc: rpc,\n    publicKey: pubkey,\n    bytes: index$1,\n    token: token,\n    features: features,\n    registry: registry\n});\n\nfunction isIdlAccounts(accountItem) {\n    return \"accounts\" in accountItem;\n}\n// Deterministic IDL address as a function of the program id.\nasync function idlAddress(programId) {\n    const base = (await PublicKey.findProgramAddress([], programId))[0];\n    return await PublicKey.createWithSeed(base, seed(), programId);\n}\n// Seed for generating the idlAddress.\nfunction seed() {\n    return \"anchor:idl\";\n}\nconst IDL_ACCOUNT_LAYOUT = borsh.struct([\n    borsh.publicKey(\"authority\"),\n    borsh.vecU8(\"data\"),\n]);\nfunction decodeIdlAccount(data) {\n    return IDL_ACCOUNT_LAYOUT.decode(data);\n}\n\nfunction splitArgsAndCtx(idlIx, args) {\n    var _a, _b;\n    let options = {};\n    const inputLen = idlIx.args ? idlIx.args.length : 0;\n    if (args.length > inputLen) {\n        if (args.length !== inputLen + 1) {\n            throw new Error(`provided too many arguments ${args} to instruction ${idlIx === null || idlIx === void 0 ? void 0 : idlIx.name} expecting: ${(_b = (_a = idlIx.args) === null || _a === void 0 ? void 0 : _a.map((a) => a.name)) !== null && _b !== void 0 ? _b : []}`);\n        }\n        options = args.pop();\n    }\n    return [args, options];\n}\n\nclass InstructionNamespaceFactory {\n    static build(idlIx, encodeFn, programId) {\n        if (idlIx.name === \"_inner\") {\n            throw new IdlError(\"the _inner name is reserved\");\n        }\n        const ix = (...args) => {\n            const [ixArgs, ctx] = splitArgsAndCtx(idlIx, [...args]);\n            validateAccounts(idlIx.accounts, ctx.accounts);\n            validateInstruction(idlIx, ...args);\n            const keys = ix.accounts(ctx.accounts);\n            if (ctx.remainingAccounts !== undefined) {\n                keys.push(...ctx.remainingAccounts);\n            }\n            if (isSet(\"debug-logs\")) {\n                console.log(\"Outgoing account metas:\", keys);\n            }\n            return new TransactionInstruction({\n                keys,\n                programId,\n                data: encodeFn(idlIx.name, toInstruction(idlIx, ...ixArgs)),\n            });\n        };\n        // Utility fn for ordering the accounts for this instruction.\n        ix[\"accounts\"] = (accs) => {\n            return InstructionNamespaceFactory.accountsArray(accs, idlIx.accounts, programId, idlIx.name);\n        };\n        return ix;\n    }\n    static accountsArray(ctx, accounts, programId, ixName) {\n        if (!ctx) {\n            return [];\n        }\n        return accounts\n            .map((acc) => {\n            // Nested accounts.\n            const nestedAccounts = \"accounts\" in acc ? acc.accounts : undefined;\n            if (nestedAccounts !== undefined) {\n                const rpcAccs = ctx[acc.name];\n                return InstructionNamespaceFactory.accountsArray(rpcAccs, acc.accounts, programId, ixName).flat();\n            }\n            else {\n                const account = acc;\n                let pubkey;\n                try {\n                    pubkey = translateAddress(ctx[acc.name]);\n                }\n                catch (err) {\n                    throw new Error(`Wrong input type for account \"${acc.name}\" in the instruction accounts object${ixName !== undefined ? ' for instruction \"' + ixName + '\"' : \"\"}. Expected PublicKey or string.`);\n                }\n                const optional = account.isOptional && pubkey.equals(programId);\n                const isWritable = account.isMut && !optional;\n                const isSigner = account.isSigner && !optional;\n                return {\n                    pubkey,\n                    isWritable,\n                    isSigner,\n                };\n            }\n        })\n            .flat();\n    }\n}\n// Throws error if any argument required for the `ix` is not given.\nfunction validateInstruction(ix, ...args) {\n    // todo\n}\n\nclass TransactionFactory {\n    static build(idlIx, ixFn) {\n        const txFn = (...args) => {\n            var _a, _b, _c;\n            const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n            const tx = new Transaction();\n            if (ctx.preInstructions && ctx.instructions) {\n                throw new Error(\"instructions is deprecated, use preInstructions\");\n            }\n            (_a = ctx.preInstructions) === null || _a === void 0 ? void 0 : _a.forEach((ix) => tx.add(ix));\n            (_b = ctx.instructions) === null || _b === void 0 ? void 0 : _b.forEach((ix) => tx.add(ix));\n            tx.add(ixFn(...args));\n            (_c = ctx.postInstructions) === null || _c === void 0 ? void 0 : _c.forEach((ix) => tx.add(ix));\n            return tx;\n        };\n        return txFn;\n    }\n}\n\nclass RpcFactory {\n    static build(idlIx, txFn, idlErrors, provider) {\n        const rpc = async (...args) => {\n            var _a;\n            const tx = txFn(...args);\n            const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n            if (provider.sendAndConfirm === undefined) {\n                throw new Error(\"This function requires 'Provider.sendAndConfirm' to be implemented.\");\n            }\n            try {\n                return await provider.sendAndConfirm(tx, (_a = ctx.signers) !== null && _a !== void 0 ? _a : [], ctx.options);\n            }\n            catch (err) {\n                throw translateError(err, idlErrors);\n            }\n        };\n        return rpc;\n    }\n}\n\nclass AccountFactory {\n    static build(idl, coder, programId, provider) {\n        var _a;\n        const accountFns = {};\n        (_a = idl.accounts) === null || _a === void 0 ? void 0 : _a.forEach((idlAccount) => {\n            const name = camelCase(idlAccount.name);\n            accountFns[name] = new AccountClient(idl, idlAccount, programId, provider, coder);\n        });\n        return accountFns;\n    }\n}\nclass AccountClient {\n    /**\n     * Returns the number of bytes in this account.\n     */\n    get size() {\n        return this._size;\n    }\n    /**\n     * Returns the program ID owning all accounts.\n     */\n    get programId() {\n        return this._programId;\n    }\n    /**\n     * Returns the client's wallet and network provider.\n     */\n    get provider() {\n        return this._provider;\n    }\n    /**\n     * Returns the coder.\n     */\n    get coder() {\n        return this._coder;\n    }\n    /**\n     * Returns the idl account.\n     */\n    get idlAccount() {\n        return this._idlAccount;\n    }\n    constructor(idl, idlAccount, programId, provider, coder) {\n        this._idlAccount = idlAccount;\n        this._programId = programId;\n        this._provider = provider !== null && provider !== void 0 ? provider : getProvider();\n        this._coder = coder !== null && coder !== void 0 ? coder : new BorshCoder(idl);\n        this._size = this._coder.accounts.size(idlAccount);\n    }\n    /**\n     * Returns a deserialized account, returning null if it doesn't exist.\n     *\n     * @param address The address of the account to fetch.\n     */\n    async fetchNullable(address, commitment) {\n        const { data } = await this.fetchNullableAndContext(address, commitment);\n        return data;\n    }\n    /**\n     * Returns a deserialized account along with the associated rpc response context, returning null if it doesn't exist.\n     *\n     * @param address The address of the account to fetch.\n     */\n    async fetchNullableAndContext(address, commitment) {\n        const accountInfo = await this.getAccountInfoAndContext(address, commitment);\n        const { value, context } = accountInfo;\n        return {\n            data: value && value.data.length !== 0\n                ? this._coder.accounts.decode(this._idlAccount.name, value.data)\n                : null,\n            context,\n        };\n    }\n    /**\n     * Returns a deserialized account.\n     *\n     * @param address The address of the account to fetch.\n     */\n    async fetch(address, commitment) {\n        const { data } = await this.fetchNullableAndContext(address, commitment);\n        if (data === null) {\n            throw new Error(`Account does not exist or has no data ${address.toString()}`);\n        }\n        return data;\n    }\n    /**\n     * Returns a deserialized account along with the associated rpc response context.\n     *\n     * @param address The address of the account to fetch.\n     */\n    async fetchAndContext(address, commitment) {\n        const { data, context } = await this.fetchNullableAndContext(address, commitment);\n        if (data === null) {\n            throw new Error(`Account does not exist ${address.toString()}`);\n        }\n        return { data, context };\n    }\n    /**\n     * Returns multiple deserialized accounts.\n     * Accounts not found or with wrong discriminator are returned as null.\n     *\n     * @param addresses The addresses of the accounts to fetch.\n     */\n    async fetchMultiple(addresses, commitment) {\n        const accounts = await this.fetchMultipleAndContext(addresses, commitment);\n        return accounts.map((account) => (account ? account.data : null));\n    }\n    /**\n     * Returns multiple deserialized accounts.\n     * Accounts not found or with wrong discriminator are returned as null.\n     *\n     * @param addresses The addresses of the accounts to fetch.\n     */\n    async fetchMultipleAndContext(addresses, commitment) {\n        const accounts = await getMultipleAccountsAndContext(this._provider.connection, addresses.map((address) => translateAddress(address)), commitment);\n        // Decode accounts where discriminator is correct, null otherwise\n        return accounts.map((result) => {\n            if (result == null) {\n                return null;\n            }\n            const { account, context } = result;\n            return {\n                data: this._coder.accounts.decode(this._idlAccount.name, account.data),\n                context,\n            };\n        });\n    }\n    /**\n     * Returns all instances of this account type for the program.\n     *\n     * @param filters User-provided filters to narrow the results from `connection.getProgramAccounts`.\n     *\n     *                When filters are not defined this method returns all\n     *                the account instances.\n     *\n     *                When filters are of type `Buffer`, the filters are appended\n     *                after the discriminator.\n     *\n     *                When filters are of type `GetProgramAccountsFilter[]`,\n     *                filters are appended after the discriminator filter.\n     */\n    async all(filters) {\n        const filter = this.coder.accounts.memcmp(this._idlAccount.name, filters instanceof Buffer ? filters : undefined);\n        const coderFilters = [];\n        if ((filter === null || filter === void 0 ? void 0 : filter.offset) != undefined && (filter === null || filter === void 0 ? void 0 : filter.bytes) != undefined) {\n            coderFilters.push({\n                memcmp: { offset: filter.offset, bytes: filter.bytes },\n            });\n        }\n        if ((filter === null || filter === void 0 ? void 0 : filter.dataSize) != undefined) {\n            coderFilters.push({ dataSize: filter.dataSize });\n        }\n        let resp = await this._provider.connection.getProgramAccounts(this._programId, {\n            commitment: this._provider.connection.commitment,\n            filters: [...coderFilters, ...(Array.isArray(filters) ? filters : [])],\n        });\n        return resp.map(({ pubkey, account }) => {\n            return {\n                publicKey: pubkey,\n                account: this._coder.accounts.decode(this._idlAccount.name, account.data),\n            };\n        });\n    }\n    /**\n     * Returns an `EventEmitter` emitting a \"change\" event whenever the account\n     * changes.\n     */\n    subscribe(address, commitment) {\n        const sub = subscriptions.get(address.toString());\n        if (sub) {\n            return sub.ee;\n        }\n        const ee = new EventEmitter();\n        address = translateAddress(address);\n        const listener = this._provider.connection.onAccountChange(address, (acc) => {\n            const account = this._coder.accounts.decode(this._idlAccount.name, acc.data);\n            ee.emit(\"change\", account);\n        }, commitment);\n        subscriptions.set(address.toString(), {\n            ee,\n            listener,\n        });\n        return ee;\n    }\n    /**\n     * Unsubscribes from the account at the given address.\n     */\n    async unsubscribe(address) {\n        let sub = subscriptions.get(address.toString());\n        if (!sub) {\n            console.warn(\"Address is not subscribed\");\n            return;\n        }\n        if (subscriptions) {\n            await this._provider.connection\n                .removeAccountChangeListener(sub.listener)\n                .then(() => {\n                subscriptions.delete(address.toString());\n            })\n                .catch(console.error);\n        }\n    }\n    /**\n     * Returns an instruction for creating this account.\n     */\n    async createInstruction(signer, sizeOverride) {\n        const size = this.size;\n        if (this._provider.publicKey === undefined) {\n            throw new Error(\"This function requires the Provider interface implementor to have a 'publicKey' field.\");\n        }\n        return SystemProgram.createAccount({\n            fromPubkey: this._provider.publicKey,\n            newAccountPubkey: signer.publicKey,\n            space: sizeOverride !== null && sizeOverride !== void 0 ? sizeOverride : size,\n            lamports: await this._provider.connection.getMinimumBalanceForRentExemption(sizeOverride !== null && sizeOverride !== void 0 ? sizeOverride : size),\n            programId: this._programId,\n        });\n    }\n    /**\n     * @deprecated since version 14.0.\n     *\n     * Function returning the associated account. Args are keys to associate.\n     * Order matters.\n     */\n    async associated(...args) {\n        const addr = await this.associatedAddress(...args);\n        return await this.fetch(addr);\n    }\n    /**\n     * @deprecated since version 14.0.\n     *\n     * Function returning the associated address. Args are keys to associate.\n     * Order matters.\n     */\n    async associatedAddress(...args) {\n        return await associated(this._programId, ...args);\n    }\n    async getAccountInfo(address, commitment) {\n        return await this._provider.connection.getAccountInfo(translateAddress(address), commitment);\n    }\n    async getAccountInfoAndContext(address, commitment) {\n        return await this._provider.connection.getAccountInfoAndContext(translateAddress(address), commitment);\n    }\n}\n// Tracks all subscriptions.\nconst subscriptions = new Map();\n\nconst PROGRAM_LOG = \"Program log: \";\nconst PROGRAM_DATA = \"Program data: \";\nconst PROGRAM_LOG_START_INDEX = PROGRAM_LOG.length;\nconst PROGRAM_DATA_START_INDEX = PROGRAM_DATA.length;\nclass EventManager {\n    constructor(programId, provider, coder) {\n        this._programId = programId;\n        this._provider = provider;\n        this._eventParser = new EventParser(programId, coder);\n        this._eventCallbacks = new Map();\n        this._eventListeners = new Map();\n        this._listenerIdCount = 0;\n    }\n    addEventListener(eventName, callback) {\n        var _a;\n        let listener = this._listenerIdCount;\n        this._listenerIdCount += 1;\n        // Store the listener into the event map.\n        if (!this._eventListeners.has(eventName)) {\n            this._eventListeners.set(eventName, []);\n        }\n        this._eventListeners.set(eventName, ((_a = this._eventListeners.get(eventName)) !== null && _a !== void 0 ? _a : []).concat(listener));\n        // Store the callback into the listener map.\n        this._eventCallbacks.set(listener, [eventName, callback]);\n        // Create the subscription singleton, if needed.\n        if (this._onLogsSubscriptionId !== undefined) {\n            return listener;\n        }\n        this._onLogsSubscriptionId = this._provider.connection.onLogs(this._programId, (logs, ctx) => {\n            if (logs.err) {\n                return;\n            }\n            for (const event of this._eventParser.parseLogs(logs.logs)) {\n                const allListeners = this._eventListeners.get(event.name);\n                if (allListeners) {\n                    allListeners.forEach((listener) => {\n                        const listenerCb = this._eventCallbacks.get(listener);\n                        if (listenerCb) {\n                            const [, callback] = listenerCb;\n                            callback(event.data, ctx.slot, logs.signature);\n                        }\n                    });\n                }\n            }\n        });\n        return listener;\n    }\n    async removeEventListener(listener) {\n        // Get the callback.\n        const callback = this._eventCallbacks.get(listener);\n        if (!callback) {\n            throw new Error(`Event listener ${listener} doesn't exist!`);\n        }\n        const [eventName] = callback;\n        // Get the listeners.\n        let listeners = this._eventListeners.get(eventName);\n        if (!listeners) {\n            throw new Error(`Event listeners don't exist for ${eventName}!`);\n        }\n        // Update both maps.\n        this._eventCallbacks.delete(listener);\n        listeners = listeners.filter((l) => l !== listener);\n        this._eventListeners.set(eventName, listeners);\n        if (listeners.length === 0) {\n            this._eventListeners.delete(eventName);\n        }\n        // Kill the websocket connection if all listeners have been removed.\n        if (this._eventCallbacks.size === 0) {\n            if (this._eventListeners.size !== 0) {\n                throw new Error(`Expected event listeners size to be 0 but got ${this._eventListeners.size}`);\n            }\n            if (this._onLogsSubscriptionId !== undefined) {\n                await this._provider.connection.removeOnLogsListener(this._onLogsSubscriptionId);\n                this._onLogsSubscriptionId = undefined;\n            }\n        }\n    }\n}\nclass EventParser {\n    constructor(programId, coder) {\n        this.coder = coder;\n        this.programId = programId;\n    }\n    // Each log given, represents an array of messages emitted by\n    // a single transaction, which can execute many different programs across\n    // CPI boundaries. However, the subscription is only interested in the\n    // events emitted by *this* program. In achieving this, we keep track of the\n    // program execution context by parsing each log and looking for a CPI\n    // `invoke` call. If one exists, we know a new program is executing. So we\n    // push the programId onto a stack and switch the program context. This\n    // allows us to track, for a given log, which program was executing during\n    // its emission, thereby allowing us to know if a given log event was\n    // emitted by *this* program. If it was, then we parse the raw string and\n    // emit the event if the string matches the event being subscribed to.\n    *parseLogs(logs, errorOnDecodeFailure = false) {\n        const logScanner = new LogScanner(logs);\n        const execution = new ExecutionContext();\n        let log = logScanner.next();\n        while (log !== null) {\n            let [event, newProgram, didPop] = this.handleLog(execution, log, errorOnDecodeFailure);\n            if (event) {\n                yield event;\n            }\n            if (newProgram) {\n                execution.push(newProgram);\n            }\n            if (didPop) {\n                execution.pop();\n            }\n            log = logScanner.next();\n        }\n    }\n    // Main log handler. Returns a three element array of the event, the\n    // next program that was invoked for CPI, and a boolean indicating if\n    // a program has completed execution (and thus should be popped off the\n    // execution stack).\n    handleLog(execution, log, errorOnDecodeFailure) {\n        // Executing program is this program.\n        if (execution.stack.length > 0 &&\n            execution.program() === this.programId.toString()) {\n            return this.handleProgramLog(log, errorOnDecodeFailure);\n        }\n        // Executing program is not this program.\n        else {\n            return [null, ...this.handleSystemLog(log)];\n        }\n    }\n    // Handles logs from *this* program.\n    handleProgramLog(log, errorOnDecodeFailure) {\n        // This is a `msg!` log or a `sol_log_data` log.\n        if (log.startsWith(PROGRAM_LOG) || log.startsWith(PROGRAM_DATA)) {\n            const logStr = log.startsWith(PROGRAM_LOG)\n                ? log.slice(PROGRAM_LOG_START_INDEX)\n                : log.slice(PROGRAM_DATA_START_INDEX);\n            const event = this.coder.events.decode(logStr);\n            if (errorOnDecodeFailure && event === null) {\n                throw new Error(`Unable to decode event ${logStr}`);\n            }\n            return [event, null, false];\n        }\n        // System log.\n        else {\n            return [null, ...this.handleSystemLog(log)];\n        }\n    }\n    // Handles logs when the current program being executing is *not* this.\n    handleSystemLog(log) {\n        // System component.\n        const logStart = log.split(\":\")[0];\n        // Did the program finish executing?\n        if (logStart.match(/^Program (.*) success/g) !== null) {\n            return [null, true];\n            // Recursive call.\n        }\n        else if (logStart.startsWith(`Program ${this.programId.toString()} invoke`)) {\n            return [this.programId.toString(), false];\n        }\n        // CPI call.\n        else if (logStart.includes(\"invoke\")) {\n            return [\"cpi\", false]; // Any string will do.\n        }\n        else {\n            return [null, false];\n        }\n    }\n}\n// Stack frame execution context, allowing one to track what program is\n// executing for a given log.\nclass ExecutionContext {\n    constructor() {\n        this.stack = [];\n    }\n    program() {\n        if (!this.stack.length) {\n            throw new Error(\"Expected the stack to have elements\");\n        }\n        return this.stack[this.stack.length - 1];\n    }\n    push(newProgram) {\n        this.stack.push(newProgram);\n    }\n    pop() {\n        if (!this.stack.length) {\n            throw new Error(\"Expected the stack to have elements\");\n        }\n        this.stack.pop();\n    }\n}\nclass LogScanner {\n    constructor(logs) {\n        this.logs = logs;\n    }\n    next() {\n        if (this.logs.length === 0) {\n            return null;\n        }\n        let l = this.logs[0];\n        this.logs = this.logs.slice(1);\n        return l;\n    }\n}\n\nclass SimulateFactory {\n    static build(idlIx, txFn, idlErrors, provider, coder, programId, idl) {\n        const simulate = async (...args) => {\n            var _a;\n            const tx = txFn(...args);\n            const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n            let resp = undefined;\n            if (provider.simulate === undefined) {\n                throw new Error(\"This function requires 'Provider.simulate' to be implemented.\");\n            }\n            try {\n                resp = await provider.simulate(tx, ctx.signers, (_a = ctx.options) === null || _a === void 0 ? void 0 : _a.commitment);\n            }\n            catch (err) {\n                throw translateError(err, idlErrors);\n            }\n            if (resp === undefined) {\n                throw new Error(\"Unable to simulate transaction\");\n            }\n            const logs = resp.logs;\n            if (!logs) {\n                throw new Error(\"Simulated logs not found\");\n            }\n            const events = [];\n            if (idl.events) {\n                let parser = new EventParser(programId, coder);\n                for (const event of parser.parseLogs(logs)) {\n                    events.push(event);\n                }\n            }\n            return { events, raw: logs };\n        };\n        return simulate;\n    }\n}\n\nfunction uint64(property) {\n    return new WrappedLayout(blob(8), (b) => u64.fromBuffer(b), (n) => n.toBuffer(), property);\n}\nfunction publicKey(property) {\n    return new WrappedLayout(blob(32), (b) => new PublicKey(b), (key) => key.toBuffer(), property);\n}\nfunction coption(layout, property) {\n    return new COptionLayout(layout, property);\n}\nclass WrappedLayout extends Layout_2 {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nclass COptionLayout extends Layout_2 {\n    constructor(layout, property) {\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = u32();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.layout.span + this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 4) + 4;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        }\n        else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 4);\n        }\n        throw new Error(\"Invalid coption \" + this.layout.property);\n    }\n    getSpan(b, offset = 0) {\n        return this.layout.getSpan(b, offset + 4) + 4;\n    }\n}\nclass u64 extends BN {\n    /**\n     * Convert to Buffer representation\n     */\n    toBuffer() {\n        const a = super.toArray().reverse();\n        const b = Buffer.from(a);\n        if (b.length === 8) {\n            return b;\n        }\n        if (b.length >= 8) {\n            throw new Error(\"u64 too large\");\n        }\n        const zeroPad = Buffer.alloc(8);\n        b.copy(zeroPad);\n        return zeroPad;\n    }\n    /**\n     * Construct a u64 from Buffer representation\n     */\n    static fromBuffer(buffer) {\n        if (buffer.length !== 8) {\n            throw new Error(`Invalid buffer length: ${buffer.length}`);\n        }\n        return new u64([...buffer]\n            .reverse()\n            .map((i) => `00${i.toString(16)}`.slice(-2))\n            .join(\"\"), 16);\n    }\n}\nconst TOKEN_ACCOUNT_LAYOUT = struct([\n    publicKey(\"mint\"),\n    publicKey(\"owner\"),\n    uint64(\"amount\"),\n    coption(publicKey(), \"delegate\"),\n    ((p) => {\n        const U = union(u8(\"discriminator\"), null, p);\n        U.addVariant(0, struct([]), \"uninitialized\");\n        U.addVariant(1, struct([]), \"initialized\");\n        U.addVariant(2, struct([]), \"frozen\");\n        return U;\n    })(\"state\"),\n    coption(uint64(), \"isNative\"),\n    uint64(\"delegatedAmount\"),\n    coption(publicKey(), \"closeAuthority\"),\n]);\nfunction decodeTokenAccount(b) {\n    return TOKEN_ACCOUNT_LAYOUT.decode(b);\n}\n\n// Populates a given accounts context with PDAs and common missing accounts.\nclass AccountsResolver {\n    constructor(_args, _accounts, _provider, _programId, _idlIx, _accountNamespace, _idlTypes, _customResolver) {\n        this._accounts = _accounts;\n        this._provider = _provider;\n        this._programId = _programId;\n        this._idlIx = _idlIx;\n        this._idlTypes = _idlTypes;\n        this._customResolver = _customResolver;\n        this._args = _args;\n        this._accountStore = new AccountStore(_provider, _accountNamespace, this._programId);\n    }\n    args(_args) {\n        this._args = _args;\n    }\n    // Note: We serially resolve PDAs one by one rather than doing them\n    //       in parallel because there can be dependencies between\n    //       addresses. That is, one PDA can be used as a seed in another.\n    async resolve() {\n        await this.resolveConst(this._idlIx.accounts);\n        this._resolveEventCpi(this._idlIx.accounts);\n        // Auto populate pdas and relations until we stop finding new accounts\n        while ((await this.resolvePdas(this._idlIx.accounts)) +\n            (await this.resolveRelations(this._idlIx.accounts)) +\n            (await this.resolveCustom()) >\n            0) { }\n    }\n    async resolveCustom() {\n        if (this._customResolver) {\n            const { accounts, resolved } = await this._customResolver({\n                args: this._args,\n                accounts: this._accounts,\n                provider: this._provider,\n                programId: this._programId,\n                idlIx: this._idlIx,\n            });\n            this._accounts = accounts;\n            return resolved;\n        }\n        return 0;\n    }\n    resolveOptionalsHelper(partialAccounts, accountItems) {\n        const nestedAccountsGeneric = {};\n        // Looping through accountItem array instead of on partialAccounts, so\n        // we only traverse array once\n        for (const accountItem of accountItems) {\n            const accountName = accountItem.name;\n            const partialAccount = partialAccounts[accountName];\n            // Skip if the account isn't included (thus would be undefined)\n            if (partialAccount === undefined)\n                continue;\n            if (isPartialAccounts(partialAccount)) {\n                // is compound accounts, recurse one level deeper\n                if (isIdlAccounts(accountItem)) {\n                    nestedAccountsGeneric[accountName] = this.resolveOptionalsHelper(partialAccount, accountItem[\"accounts\"]);\n                }\n                else {\n                    // Here we try our best to recover gracefully. If there are optionals we can't check, we will fail then.\n                    nestedAccountsGeneric[accountName] = flattenPartialAccounts(partialAccount, true);\n                }\n            }\n            else {\n                // if not compound accounts, do null/optional check and proceed\n                if (partialAccount !== null) {\n                    nestedAccountsGeneric[accountName] = translateAddress(partialAccount);\n                }\n                else if (accountItem[\"isOptional\"]) {\n                    nestedAccountsGeneric[accountName] = this._programId;\n                }\n            }\n        }\n        return nestedAccountsGeneric;\n    }\n    resolveOptionals(accounts) {\n        Object.assign(this._accounts, this.resolveOptionalsHelper(accounts, this._idlIx.accounts));\n    }\n    get(path) {\n        // Only return if pubkey\n        const ret = path.reduce((acc, subPath) => acc && acc[subPath], this._accounts);\n        if (ret && ret.toBase58) {\n            return ret;\n        }\n    }\n    set(path, value) {\n        let curr = this._accounts;\n        path.forEach((p, idx) => {\n            const isLast = idx == path.length - 1;\n            if (isLast) {\n                curr[p] = value;\n            }\n            curr[p] = curr[p] || {};\n            curr = curr[p];\n        });\n    }\n    async resolveConst(accounts, path = []) {\n        for (let k = 0; k < accounts.length; k += 1) {\n            const accountDescOrAccounts = accounts[k];\n            const subAccounts = accountDescOrAccounts.accounts;\n            if (subAccounts) {\n                await this.resolveConst(subAccounts, [\n                    ...path,\n                    camelCase(accountDescOrAccounts.name),\n                ]);\n            }\n            const accountDesc = accountDescOrAccounts;\n            const accountDescName = camelCase(accountDescOrAccounts.name);\n            // Signers default to the provider.\n            if (accountDesc.isSigner && !this.get([...path, accountDescName])) {\n                // @ts-expect-error\n                if (this._provider.wallet === undefined) {\n                    throw new Error(\"This function requires the Provider interface implementor to have a 'wallet' field.\");\n                }\n                // @ts-expect-error\n                this.set([...path, accountDescName], this._provider.wallet.publicKey);\n            }\n            // Common accounts are auto populated with magic names by convention.\n            if (Reflect.has(AccountsResolver.CONST_ACCOUNTS, accountDescName) &&\n                !this.get([...path, accountDescName])) {\n                this.set([...path, accountDescName], AccountsResolver.CONST_ACCOUNTS[accountDescName]);\n            }\n        }\n    }\n    /**\n     * Resolve event CPI accounts `eventAuthority` and `program`.\n     *\n     * Accounts will only be resolved if they are declared next to each other to\n     * reduce the chance of name collision.\n     */\n    _resolveEventCpi(accounts, path = []) {\n        for (const i in accounts) {\n            const accountDescOrAccounts = accounts[i];\n            const subAccounts = accountDescOrAccounts.accounts;\n            if (subAccounts) {\n                this._resolveEventCpi(subAccounts, [\n                    ...path,\n                    camelCase(accountDescOrAccounts.name),\n                ]);\n            }\n            // Validate next index exists\n            const nextIndex = +i + 1;\n            if (nextIndex === accounts.length)\n                return;\n            const currentName = camelCase(accounts[i].name);\n            const nextName = camelCase(accounts[nextIndex].name);\n            // Populate event CPI accounts if they exist\n            if (currentName === \"eventAuthority\" && nextName === \"program\") {\n                const currentPath = [...path, currentName];\n                const nextPath = [...path, nextName];\n                if (!this.get(currentPath)) {\n                    this.set(currentPath, PublicKey.findProgramAddressSync([Buffer.from(\"__event_authority\")], this._programId)[0]);\n                }\n                if (!this.get(nextPath)) {\n                    this.set(nextPath, this._programId);\n                }\n                return;\n            }\n        }\n    }\n    async resolvePdas(accounts, path = []) {\n        let found = 0;\n        for (let k = 0; k < accounts.length; k += 1) {\n            const accountDesc = accounts[k];\n            const subAccounts = accountDesc.accounts;\n            if (subAccounts) {\n                found += await this.resolvePdas(subAccounts, [\n                    ...path,\n                    camelCase(accountDesc.name),\n                ]);\n            }\n            const accountDescCasted = accountDesc;\n            const accountDescName = camelCase(accountDesc.name);\n            // PDA derived from IDL seeds.\n            if (accountDescCasted.pda &&\n                accountDescCasted.pda.seeds.length > 0 &&\n                !this.get([...path, accountDescName])) {\n                if (Boolean(await this.autoPopulatePda(accountDescCasted, path))) {\n                    found += 1;\n                }\n            }\n        }\n        return found;\n    }\n    async resolveRelations(accounts, path = []) {\n        let found = 0;\n        for (let k = 0; k < accounts.length; k += 1) {\n            const accountDesc = accounts[k];\n            const subAccounts = accountDesc.accounts;\n            if (subAccounts) {\n                found += await this.resolveRelations(subAccounts, [\n                    ...path,\n                    camelCase(accountDesc.name),\n                ]);\n            }\n            const relations = accountDesc.relations || [];\n            const accountDescName = camelCase(accountDesc.name);\n            const newPath = [...path, accountDescName];\n            // If we have this account and there's some missing accounts that are relations to this account, fetch them\n            const accountKey = this.get(newPath);\n            if (accountKey) {\n                const matching = relations.filter((rel) => !this.get([...path, camelCase(rel)]));\n                found += matching.length;\n                if (matching.length > 0) {\n                    const account = await this._accountStore.fetchAccount({\n                        publicKey: accountKey,\n                    });\n                    await Promise.all(matching.map(async (rel) => {\n                        const relName = camelCase(rel);\n                        this.set([...path, relName], account[relName]);\n                        return account[relName];\n                    }));\n                }\n            }\n        }\n        return found;\n    }\n    async autoPopulatePda(accountDesc, path = []) {\n        if (!accountDesc.pda || !accountDesc.pda.seeds)\n            throw new Error(\"Must have seeds\");\n        const seeds = await Promise.all(accountDesc.pda.seeds.map((seedDesc) => this.toBuffer(seedDesc, path)));\n        if (seeds.some((seed) => typeof seed == \"undefined\")) {\n            return;\n        }\n        const programId = await this.parseProgramId(accountDesc, path);\n        if (!programId) {\n            return;\n        }\n        const [pubkey] = await PublicKey.findProgramAddress(seeds, programId);\n        this.set([...path, camelCase(accountDesc.name)], pubkey);\n    }\n    async parseProgramId(accountDesc, path = []) {\n        var _a;\n        if (!((_a = accountDesc.pda) === null || _a === void 0 ? void 0 : _a.programId)) {\n            return this._programId;\n        }\n        switch (accountDesc.pda.programId.kind) {\n            case \"const\":\n                return new PublicKey(this.toBufferConst(accountDesc.pda.programId.value));\n            case \"arg\":\n                return this.argValue(accountDesc.pda.programId);\n            case \"account\":\n                return await this.accountValue(accountDesc.pda.programId, path);\n            default:\n                throw new Error(`Unexpected program seed kind: ${accountDesc.pda.programId.kind}`);\n        }\n    }\n    async toBuffer(seedDesc, path = []) {\n        switch (seedDesc.kind) {\n            case \"const\":\n                return this.toBufferConst(seedDesc);\n            case \"arg\":\n                return await this.toBufferArg(seedDesc);\n            case \"account\":\n                return await this.toBufferAccount(seedDesc, path);\n            default:\n                throw new Error(`Unexpected seed kind: ${seedDesc.kind}`);\n        }\n    }\n    /**\n     * Recursively get the type at some path of either a primitive or a user defined struct.\n     */\n    getType(type, path = []) {\n        if (path.length > 0 && type.defined) {\n            const subType = this._idlTypes.find((t) => t.name === type.defined);\n            if (!subType) {\n                throw new Error(`Cannot find type ${type.defined}`);\n            }\n            const structType = subType.type; // enum not supported yet\n            const field = structType.fields.find((field) => field.name === path[0]);\n            return this.getType(field.type, path.slice(1));\n        }\n        return type;\n    }\n    toBufferConst(seedDesc) {\n        return this.toBufferValue(this.getType(seedDesc.type, (seedDesc.path || \"\").split(\".\").slice(1)), seedDesc.value);\n    }\n    async toBufferArg(seedDesc) {\n        const argValue = this.argValue(seedDesc);\n        if (typeof argValue === \"undefined\") {\n            return;\n        }\n        return this.toBufferValue(this.getType(seedDesc.type, (seedDesc.path || \"\").split(\".\").slice(1)), argValue);\n    }\n    argValue(seedDesc) {\n        const split = seedDesc.path.split(\".\");\n        const seedArgName = camelCase(split[0]);\n        const idlArgPosition = this._idlIx.args.findIndex((argDesc) => argDesc.name === seedArgName);\n        if (idlArgPosition === -1) {\n            throw new Error(`Unable to find argument for seed: ${seedArgName}`);\n        }\n        return split\n            .slice(1)\n            .reduce((curr, path) => (curr || {})[path], this._args[idlArgPosition]);\n    }\n    async toBufferAccount(seedDesc, path = []) {\n        const accountValue = await this.accountValue(seedDesc, path);\n        if (!accountValue) {\n            return;\n        }\n        return this.toBufferValue(seedDesc.type, accountValue);\n    }\n    async accountValue(seedDesc, path = []) {\n        const pathComponents = seedDesc.path.split(\".\");\n        const fieldName = pathComponents[0];\n        const fieldPubkey = this.get([...path, camelCase(fieldName)]);\n        if (fieldPubkey === null) {\n            throw new Error(`fieldPubkey is null`);\n        }\n        // The seed is a pubkey of the account.\n        if (pathComponents.length === 1) {\n            return fieldPubkey;\n        }\n        // The key is account data.\n        //\n        // Fetch and deserialize it.\n        const account = await this._accountStore.fetchAccount({\n            publicKey: fieldPubkey,\n            name: seedDesc.account,\n        });\n        // Dereference all fields in the path to get the field value\n        // used in the seed.\n        const fieldValue = this.parseAccountValue(account, pathComponents.slice(1));\n        return fieldValue;\n    }\n    parseAccountValue(account, path) {\n        let accountField;\n        while (path.length > 0) {\n            accountField = account[camelCase(path[0])];\n            path = path.slice(1);\n        }\n        return accountField;\n    }\n    // Converts the given idl valaue into a Buffer. The values here must be\n    // primitives. E.g. no structs.\n    //\n    // TODO: add more types here as needed.\n    toBufferValue(type, value) {\n        switch (type) {\n            case \"u8\":\n                return Buffer.from([value]);\n            case \"u16\":\n                let b = Buffer.alloc(2);\n                b.writeUInt16LE(value);\n                return b;\n            case \"u32\":\n                let buf = Buffer.alloc(4);\n                buf.writeUInt32LE(value);\n                return buf;\n            case \"u64\":\n                let bU64 = Buffer.alloc(8);\n                bU64.writeBigUInt64LE(BigInt(value));\n                return bU64;\n            case \"string\":\n                return Buffer.from(encode$2(value));\n            case \"publicKey\":\n                return value.toBuffer();\n            default:\n                if (type.array) {\n                    return Buffer.from(value);\n                }\n                throw new Error(`Unexpected seed type: ${type}`);\n        }\n    }\n}\nAccountsResolver.CONST_ACCOUNTS = {\n    associatedTokenProgram: ASSOCIATED_PROGRAM_ID,\n    rent: SYSVAR_RENT_PUBKEY,\n    systemProgram: SystemProgram.programId,\n    tokenProgram: TOKEN_PROGRAM_ID,\n    clock: SYSVAR_CLOCK_PUBKEY,\n};\n// TODO: this should be configureable to avoid unnecessary requests.\nclass AccountStore {\n    // todo: don't use the progrma use the account namespace.\n    constructor(_provider, _accounts, _programId) {\n        this._provider = _provider;\n        this._programId = _programId;\n        this._cache = new Map();\n        this._idls = {};\n        this._idls[_programId.toBase58()] = _accounts;\n    }\n    async ensureIdl(programId) {\n        if (!this._idls[programId.toBase58()]) {\n            const idl = await Program.fetchIdl(programId, this._provider);\n            if (idl) {\n                const program = new Program(idl, programId, this._provider);\n                this._idls[programId.toBase58()] = program.account;\n            }\n        }\n        return this._idls[programId.toBase58()];\n    }\n    async fetchAccount({ publicKey, name, programId = this._programId, }) {\n        const address = publicKey.toString();\n        if (!this._cache.has(address)) {\n            if (name === \"TokenAccount\") {\n                const accountInfo = await this._provider.connection.getAccountInfo(publicKey);\n                if (accountInfo === null) {\n                    throw new Error(`invalid account info for ${address}`);\n                }\n                const data = decodeTokenAccount(accountInfo.data);\n                this._cache.set(address, data);\n            }\n            else if (name) {\n                const accounts = await this.ensureIdl(programId);\n                if (accounts) {\n                    const accountFetcher = accounts[camelCase(name)];\n                    if (accountFetcher) {\n                        const account = await accountFetcher.fetch(publicKey);\n                        this._cache.set(address, account);\n                    }\n                }\n            }\n            else {\n                const account = await this._provider.connection.getAccountInfo(publicKey);\n                if (account === null) {\n                    throw new Error(`invalid account info for ${address}`);\n                }\n                const data = account.data;\n                const accounts = await this.ensureIdl(account.owner);\n                if (accounts) {\n                    const firstAccountLayout = Object.values(accounts)[0];\n                    if (!firstAccountLayout) {\n                        throw new Error(\"No accounts for this program\");\n                    }\n                    const result = firstAccountLayout.coder.accounts.decodeAny(data);\n                    this._cache.set(address, result);\n                }\n            }\n        }\n        return this._cache.get(address);\n    }\n}\n\nclass MethodsBuilderFactory {\n    static build(provider, programId, idlIx, ixFn, txFn, rpcFn, simulateFn, viewFn, accountNamespace, idlTypes, customResolver) {\n        return (...args) => new MethodsBuilder(args, ixFn, txFn, rpcFn, simulateFn, viewFn, provider, programId, idlIx, accountNamespace, idlTypes, customResolver);\n    }\n}\nfunction isPartialAccounts(partialAccount) {\n    return (typeof partialAccount === \"object\" &&\n        partialAccount !== null &&\n        !(\"_bn\" in partialAccount) // Ensures not a pubkey\n    );\n}\nfunction flattenPartialAccounts(partialAccounts, throwOnNull) {\n    const toReturn = {};\n    for (const accountName in partialAccounts) {\n        const account = partialAccounts[accountName];\n        if (account === null) {\n            if (throwOnNull)\n                throw new Error(\"Failed to resolve optionals due to IDL type mismatch with input accounts!\");\n            continue;\n        }\n        toReturn[accountName] = isPartialAccounts(account)\n            ? flattenPartialAccounts(account, true)\n            : translateAddress(account);\n    }\n    return toReturn;\n}\nclass MethodsBuilder {\n    constructor(_args, _ixFn, _txFn, _rpcFn, _simulateFn, _viewFn, _provider, _programId, _idlIx, _accountNamespace, _idlTypes, _customResolver) {\n        this._ixFn = _ixFn;\n        this._txFn = _txFn;\n        this._rpcFn = _rpcFn;\n        this._simulateFn = _simulateFn;\n        this._viewFn = _viewFn;\n        this._programId = _programId;\n        this._accounts = {};\n        this._remainingAccounts = [];\n        this._signers = [];\n        this._preInstructions = [];\n        this._postInstructions = [];\n        this._autoResolveAccounts = true;\n        this._args = _args;\n        this._accountsResolver = new AccountsResolver(_args, this._accounts, _provider, _programId, _idlIx, _accountNamespace, _idlTypes, _customResolver);\n    }\n    args(_args) {\n        this._args = _args;\n        this._accountsResolver.args(_args);\n    }\n    async pubkeys() {\n        if (this._autoResolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        return this._accounts;\n    }\n    accounts(accounts) {\n        this._autoResolveAccounts = true;\n        this._accountsResolver.resolveOptionals(accounts);\n        return this;\n    }\n    accountsStrict(accounts) {\n        this._autoResolveAccounts = false;\n        this._accountsResolver.resolveOptionals(accounts);\n        return this;\n    }\n    signers(signers) {\n        this._signers = this._signers.concat(signers);\n        return this;\n    }\n    remainingAccounts(accounts) {\n        this._remainingAccounts = this._remainingAccounts.concat(accounts);\n        return this;\n    }\n    preInstructions(ixs) {\n        this._preInstructions = this._preInstructions.concat(ixs);\n        return this;\n    }\n    postInstructions(ixs) {\n        this._postInstructions = this._postInstructions.concat(ixs);\n        return this;\n    }\n    async rpc(options) {\n        if (this._autoResolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._rpcFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n            options: options,\n        });\n    }\n    async rpcAndKeys(options) {\n        const pubkeys = await this.pubkeys();\n        return {\n            pubkeys,\n            signature: await this.rpc(options),\n        };\n    }\n    async view(options) {\n        if (this._autoResolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        if (!this._viewFn) {\n            throw new Error(\"Method does not support views\");\n        }\n        // @ts-ignore\n        return this._viewFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n            options: options,\n        });\n    }\n    async simulate(options) {\n        if (this._autoResolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._simulateFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n            options: options,\n        });\n    }\n    async instruction() {\n        if (this._autoResolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._ixFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n        });\n    }\n    /**\n     * Convenient shortcut to get instructions and pubkeys via\n     * const { pubkeys, instructions } = await prepare();\n     */\n    async prepare() {\n        return {\n            instruction: await this.instruction(),\n            pubkeys: await this.pubkeys(),\n            signers: await this._signers,\n        };\n    }\n    async transaction() {\n        if (this._autoResolveAccounts) {\n            await this._accountsResolver.resolve();\n        }\n        // @ts-ignore\n        return this._txFn(...this._args, {\n            accounts: this._accounts,\n            signers: this._signers,\n            remainingAccounts: this._remainingAccounts,\n            preInstructions: this._preInstructions,\n            postInstructions: this._postInstructions,\n        });\n    }\n}\n\nclass ViewFactory {\n    static build(programId, idlIx, simulateFn, idl) {\n        const isMut = idlIx.accounts.find((a) => a.isMut);\n        const hasReturn = !!idlIx.returns;\n        if (isMut || !hasReturn)\n            return;\n        const view = async (...args) => {\n            var _a, _b;\n            let simulationResult = await simulateFn(...args);\n            const returnPrefix = `Program return: ${programId} `;\n            let returnLog = simulationResult.raw.find((l) => l.startsWith(returnPrefix));\n            if (!returnLog) {\n                throw new Error(\"View expected return log\");\n            }\n            let returnData = decode(returnLog.slice(returnPrefix.length));\n            let returnType = idlIx.returns;\n            if (!returnType) {\n                throw new Error(\"View expected return type\");\n            }\n            const coder = IdlCoder.fieldLayout({ type: returnType }, Array.from([...((_a = idl.accounts) !== null && _a !== void 0 ? _a : []), ...((_b = idl.types) !== null && _b !== void 0 ? _b : [])]));\n            return coder.decode(returnData);\n        };\n        return view;\n    }\n}\n\nclass NamespaceFactory {\n    /**\n     * Generates all namespaces for a given program.\n     */\n    static build(idl, coder, programId, provider, getCustomResolver) {\n        const rpc = {};\n        const instruction = {};\n        const transaction = {};\n        const simulate = {};\n        const methods = {};\n        const view = {};\n        const idlErrors = parseIdlErrors(idl);\n        const account = idl.accounts\n            ? AccountFactory.build(idl, coder, programId, provider)\n            : {};\n        idl.instructions.forEach((idlIx) => {\n            const ixItem = InstructionNamespaceFactory.build(idlIx, (ixName, ix) => coder.instruction.encode(ixName, ix), programId);\n            const txItem = TransactionFactory.build(idlIx, ixItem);\n            const rpcItem = RpcFactory.build(idlIx, txItem, idlErrors, provider);\n            const simulateItem = SimulateFactory.build(idlIx, txItem, idlErrors, provider, coder, programId, idl);\n            const viewItem = ViewFactory.build(programId, idlIx, simulateItem, idl);\n            const methodItem = MethodsBuilderFactory.build(provider, programId, idlIx, ixItem, txItem, rpcItem, simulateItem, viewItem, account, idl.types || [], getCustomResolver && getCustomResolver(idlIx));\n            const name = camelCase(idlIx.name);\n            instruction[name] = ixItem;\n            transaction[name] = txItem;\n            rpc[name] = rpcItem;\n            simulate[name] = simulateItem;\n            methods[name] = methodItem;\n            if (viewItem) {\n                view[name] = viewItem;\n            }\n        });\n        return [\n            rpc,\n            instruction,\n            transaction,\n            account,\n            simulate,\n            methods,\n            view,\n        ];\n    }\n}\n\n/**\n * ## Program\n *\n * Program provides the IDL deserialized client representation of an Anchor\n * program.\n *\n * This API is the one stop shop for all things related to communicating with\n * on-chain programs. Among other things, one can send transactions, fetch\n * deserialized accounts, decode instruction data, subscribe to account\n * changes, and listen to events.\n *\n * In addition to field accessors and methods, the object provides a set of\n * dynamically generated properties, also known as namespaces, that\n * map one-to-one to program methods and accounts. These namespaces generally\n *  can be used as follows:\n *\n * ## Usage\n *\n * ```javascript\n * program.<namespace>.<program-specific-method>\n * ```\n *\n * API specifics are namespace dependent. The examples used in the documentation\n * below will refer to the two counter examples found\n * [here](https://github.com/coral-xyz/anchor#examples).\n */\nclass Program {\n    /**\n     * Address of the program.\n     */\n    get programId() {\n        return this._programId;\n    }\n    /**\n     * IDL defining the program's interface.\n     */\n    get idl() {\n        return this._idl;\n    }\n    /**\n     * Coder for serializing requests.\n     */\n    get coder() {\n        return this._coder;\n    }\n    /**\n     * Wallet and network provider.\n     */\n    get provider() {\n        return this._provider;\n    }\n    /**\n     * @param idl       The interface definition.\n     * @param programId The on-chain address of the program.\n     * @param provider  The network and wallet context to use. If not provided\n     *                  then uses [[getProvider]].\n     * @param getCustomResolver A function that returns a custom account resolver\n     *                          for the given instruction. This is useful for resolving\n     *                          public keys of missing accounts when building instructions\n     */\n    constructor(idl, programId, provider, coder, getCustomResolver) {\n        programId = translateAddress(programId);\n        if (!provider) {\n            provider = getProvider();\n        }\n        // Fields.\n        this._idl = idl;\n        this._provider = provider;\n        this._programId = programId;\n        this._coder = coder !== null && coder !== void 0 ? coder : new BorshCoder(idl);\n        this._events = new EventManager(this._programId, provider, this._coder);\n        // Dynamic namespaces.\n        const [rpc, instruction, transaction, account, simulate, methods, views] = NamespaceFactory.build(idl, this._coder, programId, provider, getCustomResolver !== null && getCustomResolver !== void 0 ? getCustomResolver : (() => undefined));\n        this.rpc = rpc;\n        this.instruction = instruction;\n        this.transaction = transaction;\n        this.account = account;\n        this.simulate = simulate;\n        this.methods = methods;\n        this.views = views;\n    }\n    /**\n     * Generates a Program client by fetching the IDL from the network.\n     *\n     * In order to use this method, an IDL must have been previously initialized\n     * via the anchor CLI's `anchor idl init` command.\n     *\n     * @param programId The on-chain address of the program.\n     * @param provider  The network and wallet context.\n     */\n    static async at(address, provider) {\n        const programId = translateAddress(address);\n        const idl = await Program.fetchIdl(programId, provider);\n        if (!idl) {\n            throw new Error(`IDL not found for program: ${address.toString()}`);\n        }\n        return new Program(idl, programId, provider);\n    }\n    /**\n     * Fetches an idl from the blockchain.\n     *\n     * In order to use this method, an IDL must have been previously initialized\n     * via the anchor CLI's `anchor idl init` command.\n     *\n     * @param programId The on-chain address of the program.\n     * @param provider  The network and wallet context.\n     */\n    static async fetchIdl(address, provider) {\n        provider = provider !== null && provider !== void 0 ? provider : getProvider();\n        const programId = translateAddress(address);\n        const idlAddr = await idlAddress(programId);\n        const accountInfo = await provider.connection.getAccountInfo(idlAddr);\n        if (!accountInfo) {\n            return null;\n        }\n        // Chop off account discriminator.\n        let idlAccount = decodeIdlAccount(accountInfo.data.slice(8));\n        const inflatedIdl = inflate(idlAccount.data);\n        return JSON.parse(decode$2(inflatedIdl));\n    }\n    /**\n     * Invokes the given callback every time the given event is emitted.\n     *\n     * @param eventName The PascalCase name of the event, provided by the IDL.\n     * @param callback  The function to invoke whenever the event is emitted from\n     *                  program logs.\n     */\n    addEventListener(eventName, callback) {\n        return this._events.addEventListener(eventName, callback);\n    }\n    /**\n     * Unsubscribes from the given eventName.\n     */\n    async removeEventListener(listener) {\n        return await this._events.removeEventListener(listener);\n    }\n}\n\nconst SYSTEM_PROGRAM_ID = new PublicKey(\"11111111111111111111111111111111\");\nfunction program(provider) {\n    return new Program(IDL, SYSTEM_PROGRAM_ID, provider, coder());\n}\nfunction coder() {\n    return new SystemCoder(IDL);\n}\nconst IDL = {\n    version: \"0.1.0\",\n    name: \"system_program\",\n    instructions: [\n        {\n            name: \"createAccount\",\n            accounts: [\n                {\n                    name: \"from\",\n                    isMut: true,\n                    isSigner: true,\n                },\n                {\n                    name: \"to\",\n                    isMut: true,\n                    isSigner: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\",\n                },\n                {\n                    name: \"space\",\n                    type: \"u64\",\n                },\n                {\n                    name: \"owner\",\n                    type: \"publicKey\",\n                },\n            ],\n        },\n        {\n            name: \"assign\",\n            accounts: [\n                {\n                    name: \"pubkey\",\n                    isMut: true,\n                    isSigner: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"owner\",\n                    type: \"publicKey\",\n                },\n            ],\n        },\n        {\n            name: \"transfer\",\n            accounts: [\n                {\n                    name: \"from\",\n                    isMut: true,\n                    isSigner: true,\n                },\n                {\n                    name: \"to\",\n                    isMut: true,\n                    isSigner: false,\n                },\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\",\n                },\n            ],\n        },\n        {\n            name: \"createAccountWithSeed\",\n            accounts: [\n                {\n                    name: \"from\",\n                    isMut: true,\n                    isSigner: true,\n                },\n                {\n                    name: \"to\",\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: \"base\",\n                    isMut: false,\n                    isSigner: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"base\",\n                    type: \"publicKey\",\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\",\n                },\n                {\n                    name: \"lamports\",\n                    type: \"u64\",\n                },\n                {\n                    name: \"space\",\n                    type: \"u64\",\n                },\n                {\n                    name: \"owner\",\n                    type: \"publicKey\",\n                },\n            ],\n        },\n        {\n            name: \"advanceNonceAccount\",\n            accounts: [\n                {\n                    name: \"nonce\",\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: \"recentBlockhashes\",\n                    isMut: false,\n                    isSigner: false,\n                },\n                {\n                    name: \"authorized\",\n                    isMut: false,\n                    isSigner: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"authorized\",\n                    type: \"publicKey\",\n                },\n            ],\n        },\n        {\n            name: \"withdrawNonceAccount\",\n            accounts: [\n                {\n                    name: \"nonce\",\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: \"to\",\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: \"recentBlockhashes\",\n                    isMut: false,\n                    isSigner: false,\n                },\n                {\n                    name: \"rent\",\n                    isMut: false,\n                    isSigner: false,\n                },\n                {\n                    name: \"authorized\",\n                    isMut: false,\n                    isSigner: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\",\n                },\n            ],\n        },\n        {\n            name: \"initializeNonceAccount\",\n            accounts: [\n                {\n                    name: \"nonce\",\n                    isMut: true,\n                    isSigner: true,\n                },\n                {\n                    name: \"recentBlockhashes\",\n                    isMut: false,\n                    isSigner: false,\n                },\n                {\n                    name: \"rent\",\n                    isMut: false,\n                    isSigner: false,\n                },\n            ],\n            args: [\n                {\n                    name: \"authorized\",\n                    type: \"publicKey\",\n                },\n            ],\n        },\n        {\n            name: \"authorizeNonceAccount\",\n            accounts: [\n                {\n                    name: \"nonce\",\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: \"authorized\",\n                    isMut: false,\n                    isSigner: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"authorized\",\n                    type: \"publicKey\",\n                },\n            ],\n        },\n        {\n            name: \"allocate\",\n            accounts: [\n                {\n                    name: \"pubkey\",\n                    isMut: true,\n                    isSigner: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"space\",\n                    type: \"u64\",\n                },\n            ],\n        },\n        {\n            name: \"allocateWithSeed\",\n            accounts: [\n                {\n                    name: \"account\",\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: \"base\",\n                    isMut: false,\n                    isSigner: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"base\",\n                    type: \"publicKey\",\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\",\n                },\n                {\n                    name: \"space\",\n                    type: \"u64\",\n                },\n                {\n                    name: \"owner\",\n                    type: \"publicKey\",\n                },\n            ],\n        },\n        {\n            name: \"assignWithSeed\",\n            accounts: [\n                {\n                    name: \"account\",\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: \"base\",\n                    isMut: false,\n                    isSigner: true,\n                },\n            ],\n            args: [\n                {\n                    name: \"base\",\n                    type: \"publicKey\",\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\",\n                },\n                {\n                    name: \"owner\",\n                    type: \"publicKey\",\n                },\n            ],\n        },\n        {\n            name: \"transferWithSeed\",\n            accounts: [\n                {\n                    name: \"from\",\n                    isMut: true,\n                    isSigner: false,\n                },\n                {\n                    name: \"base\",\n                    isMut: false,\n                    isSigner: true,\n                },\n                {\n                    name: \"to\",\n                    isMut: true,\n                    isSigner: false,\n                },\n            ],\n            args: [\n                {\n                    name: \"lamports\",\n                    type: \"u64\",\n                },\n                {\n                    name: \"seed\",\n                    type: \"string\",\n                },\n                {\n                    name: \"owner\",\n                    type: \"publicKey\",\n                },\n            ],\n        },\n    ],\n    accounts: [\n        {\n            name: \"nonce\",\n            type: {\n                kind: \"struct\",\n                fields: [\n                    {\n                        name: \"version\",\n                        type: \"u32\",\n                    },\n                    {\n                        name: \"state\",\n                        type: \"u32\",\n                    },\n                    {\n                        name: \"authorizedPubkey\",\n                        type: \"publicKey\",\n                    },\n                    {\n                        name: \"nonce\",\n                        type: \"publicKey\",\n                    },\n                    {\n                        name: \"feeCalculator\",\n                        type: {\n                            defined: \"FeeCalculator\",\n                        },\n                    },\n                ],\n            },\n        },\n    ],\n    types: [\n        {\n            name: \"FeeCalculator\",\n            type: {\n                kind: \"struct\",\n                fields: [\n                    {\n                        name: \"lamportsPerSignature\",\n                        type: \"u64\",\n                    },\n                ],\n            },\n        },\n    ],\n};\n\nclass Native {\n    static system(provider) {\n        return program(provider);\n    }\n}\n\nexport { AccountClient, AnchorError, AnchorProvider, BorshAccountsCoder, BorshCoder, BorshEventCoder, BorshInstructionCoder, DISCRIMINATOR_SIZE, EventManager, EventParser, IdlError, LangErrorCode, LangErrorMessage, MethodsBuilderFactory, Native, Program, ProgramError, ProgramErrorStack, SystemCoder, eventDiscriminator, getProvider, parseIdlErrors, setProvider, splitArgsAndCtx, toInstruction, translateAddress, translateError, index as utils, validateAccounts };\n//# sourceMappingURL=index.js.map\n","// gado Wallet Chrome Extension - Background Service Worker\n// Handles Web3 connections, wallet operations, and keeper bot integration\n\nimport { Connection, PublicKey, Keypair, SystemProgram, Transaction, LAMPORTS_PER_SOL } from '@solana/web3.js';\nimport * as anchor from '@coral-xyz/anchor';\nimport { Program } from '@coral-xyz/anchor';\n\nclass gadoWalletBackground {\n    constructor() {\n        this.connection = null;\n        this.wallet = null;\n        this.network = 'devnet';\n        this.program = null;\n        this.isConnected = false;\n        this.keeperBot = null;\n        \n        this.init();\n    }\n\n    async init() {\n        console.log('gado Wallet Background Service Worker starting...');\n        \n        // Load saved settings\n        await this.loadSettings();\n        \n        // Setup connection\n        await this.setupConnection();\n        \n        // Setup message listeners\n        this.setupMessageListeners();\n        \n        // Setup periodic tasks\n        this.setupPeriodicTasks();\n        \n        console.log('✅ Background service worker initialized');\n    }\n\n    async loadSettings() {\n        const result = await chrome.storage.local.get([\n            'wallet', 'network', 'privateKey', 'isConnected'\n        ]);\n        \n        this.network = result.network || 'devnet';\n        this.isConnected = result.isConnected || false;\n        \n        if (result.privateKey && result.wallet) {\n            try {\n                const secretKey = new Uint8Array(JSON.parse(result.privateKey));\n                this.wallet = {\n                    keypair: Keypair.fromSecretKey(secretKey),\n                    publicKey: result.wallet.publicKey\n                };\n                this.isConnected = true;\n                console.log('🔑 Wallet restored from storage');\n            } catch (error) {\n                console.error('Failed to restore wallet:', error);\n                await this.clearWallet();\n            }\n        }\n    }\n\n    async setupConnection() {\n        const rpcUrl = this.getRpcUrl(this.network);\n        this.connection = new Connection(rpcUrl, 'confirmed');\n        \n        // Setup Anchor program\n        if (this.isConnected && this.wallet) {\n            await this.setupProgram();\n        }\n        \n        console.log(`🌐 Connected to ${this.network}: ${rpcUrl}`);\n    }\n\n    async setupProgram() {\n        try {\n            // Load IDL from the main project\n            const response = await fetch(chrome.runtime.getURL('idl/gado.json'));\n            const idl = await response.json();\n            \n            const provider = new anchor.AnchorProvider(\n                this.connection,\n                {\n                    publicKey: this.wallet.keypair.publicKey,\n                    signTransaction: async (tx) => {\n                        tx.partialSign(this.wallet.keypair);\n                        return tx;\n                    },\n                    signAllTransactions: async (txs) => {\n                        txs.forEach(tx => tx.partialSign(this.wallet.keypair));\n                        return txs;\n                    }\n                },\n                { commitment: 'confirmed' }\n            );\n\n            this.program = new Program(idl, provider);\n            console.log('📋 Anchor program setup complete');\n        } catch (error) {\n            console.error('Failed to setup program:', error);\n        }\n    }\n\n    setupMessageListeners() {\n        chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n            this.handleMessage(request, sender, sendResponse);\n            return true; // Keep message channel open for async responses\n        });\n    }\n\n    async handleMessage(request, sender, sendResponse) {\n        try {\n            switch (request.type) {\n                case 'CONNECT_WALLET':\n                    await this.connectWallet(request.network, sendResponse);\n                    break;\n                \n                case 'GET_WALLET_STATUS':\n                    await this.getWalletStatus(sendResponse);\n                    break;\n                \n                case 'SWITCH_NETWORK':\n                    await this.switchNetwork(request.network, sendResponse);\n                    break;\n                \n                case 'GET_BALANCE':\n                    await this.getBalance(sendResponse);\n                    break;\n                \n                case 'SEND_TRANSACTION':\n                    await this.sendTransaction(request, sendResponse);\n                    break;\n                \n                case 'GET_INHERITANCE_STATS':\n                    await this.getInheritanceStats(sendResponse);\n                    break;\n                \n                case 'GET_INHERITANCES':\n                    await this.getInheritances(sendResponse);\n                    break;\n                \n                case 'GET_TRANSACTIONS':\n                    await this.getTransactions(request.limit, sendResponse);\n                    break;\n                \n                case 'GET_RECENT_ACTIVITY':\n                    await this.getRecentActivity(request.limit, sendResponse);\n                    break;\n                \n                case 'GET_KEEPER_STATUS':\n                    await this.getKeeperStatus(sendResponse);\n                    break;\n                \n                case 'UPDATE_ACTIVITY':\n                    await this.updateActivity(request.inheritanceAddress, sendResponse);\n                    break;\n                \n                case 'CANCEL_INHERITANCE':\n                    await this.cancelInheritance(request.inheritanceAddress, sendResponse);\n                    break;\n                \n                case 'EXPORT_WALLET':\n                    await this.exportWallet(sendResponse);\n                    break;\n                \n                case 'RESET_WALLET':\n                    await this.resetWallet(sendResponse);\n                    break;\n                \n                case 'CREATE_INHERITANCE':\n                    await this.createInheritance(request, sendResponse);\n                    break;\n                \n                default:\n                    sendResponse({ success: false, error: 'Unknown message type' });\n            }\n        } catch (error) {\n            console.error('Message handling error:', error);\n            sendResponse({ success: false, error: error.message });\n        }\n    }\n\n    async connectWallet(network, sendResponse) {\n        try {\n            // Generate new wallet or restore existing\n            let keypair;\n            const stored = await chrome.storage.local.get(['privateKey']);\n            \n            if (stored.privateKey) {\n                const secretKey = new Uint8Array(JSON.parse(stored.privateKey));\n                keypair = Keypair.fromSecretKey(secretKey);\n            } else {\n                keypair = Keypair.generate();\n                \n                // Save to storage\n                await chrome.storage.local.set({\n                    privateKey: JSON.stringify(Array.from(keypair.secretKey))\n                });\n            }\n            \n            this.wallet = {\n                keypair: keypair,\n                publicKey: keypair.publicKey.toString()\n            };\n            \n            this.network = network;\n            this.isConnected = true;\n            \n            // Update connection and program\n            await this.setupConnection();\n            \n            // Save to storage\n            await chrome.storage.local.set({\n                wallet: { publicKey: this.wallet.publicKey },\n                network: this.network,\n                isConnected: true\n            });\n            \n            sendResponse({\n                success: true,\n                wallet: { publicKey: this.wallet.publicKey },\n                network: this.network\n            });\n            \n            console.log('✅ Wallet connected:', this.wallet.publicKey);\n            \n        } catch (error) {\n            console.error('Wallet connection error:', error);\n            sendResponse({ success: false, error: error.message });\n        }\n    }\n\n    async getWalletStatus(sendResponse) {\n        sendResponse({\n            success: true,\n            isConnected: this.isConnected,\n            wallet: this.wallet ? { publicKey: this.wallet.publicKey } : null,\n            network: this.network\n        });\n    }\n\n    async switchNetwork(network, sendResponse) {\n        try {\n            this.network = network;\n            await this.setupConnection();\n            \n            await chrome.storage.local.set({ network: this.network });\n            \n            sendResponse({\n                success: true,\n                network: this.network\n            });\n            \n            console.log(`🌐 Switched to network: ${network}`);\n            \n        } catch (error) {\n            console.error('Network switch error:', error);\n            sendResponse({ success: false, error: error.message });\n        }\n    }\n\n    async getBalance(sendResponse) {\n        try {\n            if (!this.isConnected || !this.wallet) {\n                throw new Error('Wallet not connected');\n            }\n            \n            const balance = await this.connection.getBalance(this.wallet.keypair.publicKey);\n            const balanceSOL = balance / LAMPORTS_PER_SOL;\n            \n            sendResponse({\n                success: true,\n                balance: balanceSOL,\n                lamports: balance\n            });\n            \n        } catch (error) {\n            console.error('Balance fetch error:', error);\n            sendResponse({ success: false, error: error.message });\n        }\n    }\n\n    async sendTransaction(request, sendResponse) {\n        try {\n            if (!this.isConnected || !this.wallet) {\n                throw new Error('Wallet not connected');\n            }\n            \n            const { to, amount, memo } = request;\n            const toPublicKey = new PublicKey(to);\n            const lamports = Math.floor(amount * LAMPORTS_PER_SOL);\n            \n            // Create transaction\n            const transaction = new Transaction().add(\n                SystemProgram.transfer({\n                    fromPubkey: this.wallet.keypair.publicKey,\n                    toPubkey: toPublicKey,\n                    lamports: lamports\n                })\n            );\n            \n            // Add memo if provided\n            if (memo) {\n                const memoInstruction = new anchor.web3.TransactionInstruction({\n                    keys: [],\n                    programId: new PublicKey('MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr'),\n                    data: Buffer.from(memo, 'utf8')\n                });\n                transaction.add(memoInstruction);\n            }\n            \n            // Get recent blockhash and sign\n            const { blockhash } = await this.connection.getLatestBlockhash();\n            transaction.recentBlockhash = blockhash;\n            transaction.feePayer = this.wallet.keypair.publicKey;\n            \n            // Sign and send\n            const signature = await this.connection.sendTransaction(transaction, [this.wallet.keypair]);\n            \n            // Confirm transaction\n            await this.connection.confirmTransaction(signature, 'confirmed');\n            \n            // Store transaction record\n            await this.storeTransaction({\n                signature,\n                type: 'send',\n                amount: -lamports,\n                to: to,\n                memo: memo,\n                timestamp: Math.floor(Date.now() / 1000),\n                status: 'confirmed'\n            });\n            \n            sendResponse({\n                success: true,\n                signature: signature\n            });\n            \n            console.log('✅ Transaction sent:', signature);\n            \n        } catch (error) {\n            console.error('Send transaction error:', error);\n            sendResponse({ success: false, error: error.message });\n        }\n    }\n\n    async getInheritanceStats(sendResponse) {\n        try {\n            if (!this.program) {\n                sendResponse({\n                    success: true,\n                    stats: {\n                        totalHeirs: 0,\n                        protectedSOL: 0,\n                        solInheritances: 0,\n                        tokenInheritances: 0\n                    }\n                });\n                return;\n            }\n            \n            // Get SOL heirs\n            const solHeirs = await this.program.account.solHeir.all([\n                {\n                    memcmp: {\n                        offset: 8, // After discriminator\n                        bytes: this.wallet.keypair.publicKey.toBase58()\n                    }\n                }\n            ]);\n            \n            // Get Token heirs\n            const tokenHeirs = await this.program.account.tokenHeir.all([\n                {\n                    memcmp: {\n                        offset: 8, // After discriminator\n                        bytes: this.wallet.keypair.publicKey.toBase58()\n                    }\n                }\n            ]);\n            \n            // Calculate protected SOL amount\n            let protectedSOL = 0;\n            for (const heir of solHeirs) {\n                if (!heir.account.isClaimed) {\n                    protectedSOL += heir.account.amount.toNumber() / LAMPORTS_PER_SOL;\n                }\n            }\n            \n            sendResponse({\n                success: true,\n                stats: {\n                    totalHeirs: solHeirs.length + tokenHeirs.length,\n                    protectedSOL: protectedSOL,\n                    solInheritances: solHeirs.length,\n                    tokenInheritances: tokenHeirs.length\n                }\n            });\n            \n        } catch (error) {\n            console.error('Inheritance stats error:', error);\n            sendResponse({ success: false, error: error.message });\n        }\n    }\n\n    async getInheritances(sendResponse) {\n        try {\n            if (!this.program) {\n                sendResponse({\n                    success: true,\n                    inheritances: { sol: [], tokens: [] }\n                });\n                return;\n            }\n            \n            // Get SOL inheritances\n            const solHeirs = await this.program.account.solHeir.all([\n                {\n                    memcmp: {\n                        offset: 8,\n                        bytes: this.wallet.keypair.publicKey.toBase58()\n                    }\n                }\n            ]);\n            \n            // Get Token inheritances\n            const tokenHeirs = await this.program.account.tokenHeir.all([\n                {\n                    memcmp: {\n                        offset: 8,\n                        bytes: this.wallet.keypair.publicKey.toBase58()\n                    }\n                }\n            ]);\n            \n            const formatSolHeir = (heirAccount) => ({\n                address: heirAccount.publicKey.toString(),\n                owner: heirAccount.account.owner.toString(),\n                heir: heirAccount.account.heir.toString(),\n                amount: heirAccount.account.amount.toNumber(),\n                inactivityPeriodSeconds: heirAccount.account.inactivityPeriodSeconds.toNumber(),\n                lastActivity: heirAccount.account.lastActivity.toNumber(),\n                isClaimed: heirAccount.account.isClaimed\n            });\n            \n            const formatTokenHeir = (heirAccount) => ({\n                address: heirAccount.publicKey.toString(),\n                owner: heirAccount.account.owner.toString(),\n                heir: heirAccount.account.heir.toString(),\n                tokenMint: heirAccount.account.tokenMint.toString(),\n                amount: heirAccount.account.amount.toNumber(),\n                inactivityPeriodSeconds: heirAccount.account.inactivityPeriodSeconds.toNumber(),\n                lastActivity: heirAccount.account.lastActivity.toNumber(),\n                isClaimed: heirAccount.account.isClaimed\n            });\n            \n            sendResponse({\n                success: true,\n                inheritances: {\n                    sol: solHeirs.map(formatSolHeir),\n                    tokens: tokenHeirs.map(formatTokenHeir)\n                }\n            });\n            \n        } catch (error) {\n            console.error('Get inheritances error:', error);\n            sendResponse({ success: false, error: error.message });\n        }\n    }\n\n    async getTransactions(limit, sendResponse) {\n        try {\n            const stored = await chrome.storage.local.get(['transactions']);\n            const transactions = stored.transactions || [];\n            \n            // Sort by timestamp and limit\n            const sortedTxs = transactions\n                .sort((a, b) => b.timestamp - a.timestamp)\n                .slice(0, limit || 20);\n            \n            sendResponse({\n                success: true,\n                transactions: sortedTxs\n            });\n            \n        } catch (error) {\n            console.error('Get transactions error:', error);\n            sendResponse({ success: false, error: error.message });\n        }\n    }\n\n    async getRecentActivity(limit, sendResponse) {\n        try {\n            const stored = await chrome.storage.local.get(['activities']);\n            const activities = stored.activities || [];\n            \n            // Sort and limit\n            const recentActivities = activities\n                .sort((a, b) => b.timestamp - a.timestamp)\n                .slice(0, limit || 5);\n            \n            sendResponse({\n                success: true,\n                activities: recentActivities\n            });\n            \n        } catch (error) {\n            console.error('Get recent activity error:', error);\n            sendResponse({ success: false, error: error.message });\n        }\n    }\n\n    async getKeeperStatus(sendResponse) {\n        try {\n            // Mock keeper status - integrate with actual keeper bot\n            const status = {\n                isRunning: true,\n                totalSolHeirs: 0,\n                totalTokenHeirs: 0,\n                eligibleSolHeirs: 0,\n                eligibleTokenHeirs: 0,\n                totalSolValue: 0,\n                checkInterval: 5\n            };\n            \n            if (this.program) {\n                // Get actual stats from blockchain\n                const solHeirs = await this.program.account.solHeir.all();\n                const tokenHeirs = await this.program.account.tokenHeir.all();\n                \n                status.totalSolHeirs = solHeirs.length;\n                status.totalTokenHeirs = tokenHeirs.length;\n                \n                // Calculate eligible heirs\n                const currentTime = Math.floor(Date.now() / 1000);\n                status.eligibleSolHeirs = solHeirs.filter(heir => {\n                    const timeSinceActive = currentTime - heir.account.lastActivity.toNumber();\n                    return timeSinceActive > heir.account.inactivityPeriodSeconds.toNumber() && !heir.account.isClaimed;\n                }).length;\n                \n                status.eligibleTokenHeirs = tokenHeirs.filter(heir => {\n                    const timeSinceActive = currentTime - heir.account.lastActivity.toNumber();\n                    return timeSinceActive > heir.account.inactivityPeriodSeconds.toNumber() && !heir.account.isClaimed;\n                }).length;\n                \n                status.totalSolValue = solHeirs.reduce((sum, heir) => {\n                    return sum + (heir.account.amount.toNumber() / LAMPORTS_PER_SOL);\n                }, 0);\n            }\n            \n            sendResponse({\n                success: true,\n                status: status\n            });\n            \n        } catch (error) {\n            console.error('Keeper status error:', error);\n            sendResponse({ success: false, error: error.message });\n        }\n    }\n\n    async updateActivity(inheritanceAddress, sendResponse) {\n        try {\n            if (!this.program) {\n                throw new Error('Program not initialized');\n            }\n            \n            const inheritancePubkey = new PublicKey(inheritanceAddress);\n            \n            // Try SOL heir first\n            try {\n                const solHeirAccount = await this.program.account.solHeir.fetch(inheritancePubkey);\n                \n                const tx = await this.program.methods\n                    .updateActivity()\n                    .accounts({\n                        solHeir: inheritancePubkey,\n                        owner: this.wallet.keypair.publicKey\n                    })\n                    .rpc();\n                \n                await this.storeActivity({\n                    type: 'activity_update',\n                    title: 'Activity Updated',\n                    subtitle: 'SOL inheritance activity updated',\n                    timestamp: Math.floor(Date.now() / 1000)\n                });\n                \n                sendResponse({\n                    success: true,\n                    signature: tx\n                });\n                return;\n                \n            } catch (solError) {\n                // Try token heir\n                try {\n                    const tokenHeirAccount = await this.program.account.tokenHeir.fetch(inheritancePubkey);\n                    \n                    const tx = await this.program.methods\n                        .updateTokenActivity()\n                        .accounts({\n                            tokenHeir: inheritancePubkey,\n                            owner: this.wallet.keypair.publicKey\n                        })\n                        .rpc();\n                    \n                    await this.storeActivity({\n                        type: 'activity_update',\n                        title: 'Activity Updated',\n                        subtitle: 'Token inheritance activity updated',\n                        timestamp: Math.floor(Date.now() / 1000)\n                    });\n                    \n                    sendResponse({\n                        success: true,\n                        signature: tx\n                    });\n                    return;\n                    \n                } catch (tokenError) {\n                    throw new Error('Inheritance not found');\n                }\n            }\n            \n        } catch (error) {\n            console.error('Update activity error:', error);\n            sendResponse({ success: false, error: error.message });\n        }\n    }\n\n    async cancelInheritance(inheritanceAddress, sendResponse) {\n        try {\n            if (!this.program) {\n                throw new Error('Program not initialized');\n            }\n            \n            const inheritancePubkey = new PublicKey(inheritanceAddress);\n            \n            // Try SOL heir first\n            try {\n                const solHeirAccount = await this.program.account.solHeir.fetch(inheritancePubkey);\n                \n                const tx = await this.program.methods\n                    .cancelSolInheritance()\n                    .accounts({\n                        solHeir: inheritancePubkey,\n                        owner: this.wallet.keypair.publicKey,\n                        systemProgram: SystemProgram.programId\n                    })\n                    .rpc();\n                \n                await this.storeActivity({\n                    type: 'inheritance_cancel',\n                    title: 'Inheritance Cancelled',\n                    subtitle: 'SOL inheritance cancelled and funds returned',\n                    timestamp: Math.floor(Date.now() / 1000)\n                });\n                \n                sendResponse({\n                    success: true,\n                    signature: tx\n                });\n                return;\n                \n            } catch (solError) {\n                // Try token heir\n                try {\n                    const tokenHeirAccount = await this.program.account.tokenHeir.fetch(inheritancePubkey);\n                    \n                    // Get token accounts\n                    const [escrowTokenAccount] = PublicKey.findProgramAddressSync(\n                        [\n                            inheritancePubkey.toBuffer(),\n                            new PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\").toBuffer(),\n                            tokenHeirAccount.tokenMint.toBuffer()\n                        ],\n                        new PublicKey(\"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\")\n                    );\n                    \n                    const [ownerTokenAccount] = PublicKey.findProgramAddressSync(\n                        [\n                            this.wallet.keypair.publicKey.toBuffer(),\n                            new PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\").toBuffer(),\n                            tokenHeirAccount.tokenMint.toBuffer()\n                        ],\n                        new PublicKey(\"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\")\n                    );\n                    \n                    const tx = await this.program.methods\n                        .cancelTokenInheritance()\n                        .accounts({\n                            tokenHeir: inheritancePubkey,\n                            escrowTokenAccount: escrowTokenAccount,\n                            ownerTokenAccount: ownerTokenAccount,\n                            tokenMint: tokenHeirAccount.tokenMint,\n                            owner: this.wallet.keypair.publicKey,\n                            tokenProgram: new PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\"),\n                            associatedTokenProgram: new PublicKey(\"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"),\n                            systemProgram: SystemProgram.programId\n                        })\n                        .rpc();\n                    \n                    await this.storeActivity({\n                        type: 'inheritance_cancel',\n                        title: 'Inheritance Cancelled',\n                        subtitle: 'Token inheritance cancelled and tokens returned',\n                        timestamp: Math.floor(Date.now() / 1000)\n                    });\n                    \n                    sendResponse({\n                        success: true,\n                        signature: tx\n                    });\n                    return;\n                    \n                } catch (tokenError) {\n                    throw new Error('Inheritance not found');\n                }\n            }\n            \n        } catch (error) {\n            console.error('Cancel inheritance error:', error);\n            sendResponse({ success: false, error: error.message });\n        }\n    }\n\n    async exportWallet(sendResponse) {\n        try {\n            if (!this.wallet) {\n                throw new Error('No wallet to export');\n            }\n            \n            const privateKeyArray = Array.from(this.wallet.keypair.secretKey);\n            const privateKeyString = JSON.stringify(privateKeyArray);\n            \n            sendResponse({\n                success: true,\n                privateKey: privateKeyString\n            });\n            \n        } catch (error) {\n            console.error('Export wallet error:', error);\n            sendResponse({ success: false, error: error.message });\n        }\n    }\n\n    async resetWallet(sendResponse) {\n        try {\n            await this.clearWallet();\n            \n            sendResponse({\n                success: true\n            });\n            \n        } catch (error) {\n            console.error('Reset wallet error:', error);\n            sendResponse({ success: false, error: error.message });\n        }\n    }\n\n    async createInheritance(request, sendResponse) {\n        try {\n            if (!this.program) {\n                throw new Error('Program not initialized');\n            }\n            \n            const { type, heirAddress, amount, inactivityDays, tokenMint } = request;\n            const heirPubkey = new PublicKey(heirAddress);\n            const inactivitySeconds = inactivityDays * 24 * 60 * 60;\n            \n            if (type === 'SOL') {\n                const lamports = Math.floor(amount * LAMPORTS_PER_SOL);\n                \n                const [solHeirPDA] = PublicKey.findProgramAddressSync(\n                    [\n                        Buffer.from(\"sol_heir\"),\n                        this.wallet.keypair.publicKey.toBuffer(),\n                        heirPubkey.toBuffer()\n                    ],\n                    this.program.programId\n                );\n                \n                const tx = await this.program.methods\n                    .createSolHeir(\n                        heirPubkey,\n                        new anchor.BN(lamports),\n                        new anchor.BN(inactivitySeconds)\n                    )\n                    .accounts({\n                        solHeir: solHeirPDA,\n                        owner: this.wallet.keypair.publicKey,\n                        systemProgram: SystemProgram.programId\n                    })\n                    .rpc();\n                \n                await this.storeActivity({\n                    type: 'heir_setup',\n                    title: 'SOL Inheritance Created',\n                    subtitle: `${amount} SOL inheritance set up for ${heirAddress.slice(0, 8)}...`,\n                    timestamp: Math.floor(Date.now() / 1000)\n                });\n                \n                sendResponse({\n                    success: true,\n                    signature: tx,\n                    heirAddress: solHeirPDA.toString()\n                });\n                \n            } else if (type === 'TOKEN') {\n                const tokenMintPubkey = new PublicKey(tokenMint);\n                \n                const [tokenHeirPDA] = PublicKey.findProgramAddressSync(\n                    [\n                        Buffer.from(\"token_heir\"),\n                        this.wallet.keypair.publicKey.toBuffer(),\n                        heirPubkey.toBuffer(),\n                        tokenMintPubkey.toBuffer()\n                    ],\n                    this.program.programId\n                );\n                \n                // Get token accounts\n                const [ownerTokenAccount] = PublicKey.findProgramAddressSync(\n                    [\n                        this.wallet.keypair.publicKey.toBuffer(),\n                        new PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\").toBuffer(),\n                        tokenMintPubkey.toBuffer()\n                    ],\n                    new PublicKey(\"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\")\n                );\n                \n                const [escrowTokenAccount] = PublicKey.findProgramAddressSync(\n                    [\n                        tokenHeirPDA.toBuffer(),\n                        new PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\").toBuffer(),\n                        tokenMintPubkey.toBuffer()\n                    ],\n                    new PublicKey(\"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\")\n                );\n                \n                const tx = await this.program.methods\n                    .createTokenHeir(\n                        heirPubkey,\n                        new anchor.BN(amount),\n                        new anchor.BN(inactivitySeconds)\n                    )\n                    .accounts({\n                        tokenHeir: tokenHeirPDA,\n                        ownerTokenAccount: ownerTokenAccount,\n                        escrowTokenAccount: escrowTokenAccount,\n                        tokenMint: tokenMintPubkey,\n                        owner: this.wallet.keypair.publicKey,\n                        tokenProgram: new PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\"),\n                        associatedTokenProgram: new PublicKey(\"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"),\n                        systemProgram: SystemProgram.programId\n                    })\n                    .rpc();\n                \n                await this.storeActivity({\n                    type: 'heir_setup',\n                    title: 'Token Inheritance Created',\n                    subtitle: `${amount} tokens inheritance set up for ${heirAddress.slice(0, 8)}...`,\n                    timestamp: Math.floor(Date.now() / 1000)\n                });\n                \n                sendResponse({\n                    success: true,\n                    signature: tx,\n                    heirAddress: tokenHeirPDA.toString()\n                });\n            }\n            \n        } catch (error) {\n            console.error('Create inheritance error:', error);\n            sendResponse({ success: false, error: error.message });\n        }\n    }\n\n    // Utility Methods\n    getRpcUrl(network) {\n        switch (network) {\n            case 'mainnet-beta':\n                return 'https://api.mainnet-beta.solana.com';\n            case 'testnet':\n                return 'https://api.testnet.solana.com';\n            case 'devnet':\n            default:\n                return 'https://api.devnet.solana.com';\n        }\n    }\n\n    async storeTransaction(transaction) {\n        const stored = await chrome.storage.local.get(['transactions']);\n        const transactions = stored.transactions || [];\n        \n        transactions.unshift(transaction);\n        \n        // Keep only last 100 transactions\n        if (transactions.length > 100) {\n            transactions.splice(100);\n        }\n        \n        await chrome.storage.local.set({ transactions });\n    }\n\n    async storeActivity(activity) {\n        const stored = await chrome.storage.local.get(['activities']);\n        const activities = stored.activities || [];\n        \n        activities.unshift(activity);\n        \n        // Keep only last 50 activities\n        if (activities.length > 50) {\n            activities.splice(50);\n        }\n        \n        await chrome.storage.local.set({ activities });\n    }\n\n    async clearWallet() {\n        this.wallet = null;\n        this.isConnected = false;\n        this.program = null;\n        \n        await chrome.storage.local.clear();\n        \n        console.log('🧹 Wallet cleared');\n    }\n\n    setupPeriodicTasks() {\n        // Create alarm for periodic balance updates\n        chrome.alarms.create('updateBalance', { periodInMinutes: 5 });\n        \n        // Create alarm for keeper bot checks\n        chrome.alarms.create('keeperCheck', { periodInMinutes: 1 });\n        \n        // Listen for alarms\n        chrome.alarms.onAlarm.addListener((alarm) => {\n            if (alarm.name === 'updateBalance' && this.isConnected) {\n                this.updateBalance();\n            } else if (alarm.name === 'keeperCheck' && this.isConnected) {\n                this.checkKeeperBot();\n            }\n        });\n    }\n\n    async updateBalance() {\n        if (!this.isConnected || !this.wallet) return;\n        \n        try {\n            const balance = await this.connection.getBalance(this.wallet.keypair.publicKey);\n            \n            // Store balance update activity if significant change\n            const stored = await chrome.storage.local.get(['lastBalance']);\n            const lastBalance = stored.lastBalance || 0;\n            \n            if (Math.abs(balance - lastBalance) > 0.001 * LAMPORTS_PER_SOL) {\n                await this.storeActivity({\n                    type: 'balance_update',\n                    title: 'Balance Updated',\n                    subtitle: `New balance: ${(balance / LAMPORTS_PER_SOL).toFixed(4)} SOL`,\n                    timestamp: Math.floor(Date.now() / 1000)\n                });\n                \n                await chrome.storage.local.set({ lastBalance: balance });\n            }\n            \n        } catch (error) {\n            console.error('Balance update error:', error);\n        }\n    }\n\n    async checkKeeperBot() {\n        // Integration point for keeper bot monitoring\n        // This would connect to the actual keeper bot system\n        console.log('🤖 Keeper bot check (placeholder)');\n    }\n}\n\n// Initialize the background service worker\nconst gadoWalletBackgroundInstance = new gadoWalletBackground();"],"names":["uuid","generateRequest","ClientBrowser","callServer","options","this","reviver","replacer","generator","version","notificationIdNull","module","exports","prototype","request","method","params","id","callback","self","isBatch","Array","isArray","TypeError","undefined","hasCallback","err","message","JSON","stringify","response","_parseResponse","responseText","parse","length","isError","res","error","isNotError","filter","result","sha256","has","Object","hasOwnProperty","prefix","Events","EE","fn","context","once","addListener","emitter","event","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","ee","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","apply","j","on","removeAllListeners","off","prefixed","_0n","BigInt","_1n","_abool2","value","title","Error","_abytes2","bytes","needsLen","numberToHexUnpadded","num","hex","toString","hexToNumber","Uint8Array","from","reverse","n","padStart","numberToBytesLE","expectedLength","e","copyBytes","isPosBig","aInRange","min","max","bitLen","object","fields","optFields","checkField","fieldName","expectedType","isOpt","val","current","entries","forEach","k","v","notImplemented","memoized","map","WeakMap","arg","get","computed","set","_2n","_3n","_4n","_5n","_7n","_8n","_9n","_16n","a","b","x","power","modulo","invert","number","y","u","q","r","m","assertIsSquare","Fp","root","eql","sqr","sqrt3mod4","p1div4","ORDER","pow","sqrt5mod8","p5div8","n2","mul","nv","sub","ONE","tonelliShanks","P","Q","S","Z","_Fp","Field","FpLegendre","cc","Q1div2","is0","M","c","t","R","ZERO","t_tmp","exponent","isNegativeLE","FIELD_FIELDS","nums","passZero","inverted","fill","multipliedAcc","reduce","acc","invertedAcc","inv","reduceRight","p1mod2","powered","yes","zero","no","neg","nBitLength","_nBitLength","nByteLength","Math","ceil","bitLenOrOpts","isLE","opts","_nbitLength","_sqrt","allowedLengths","modFromBytes","sqrt","_opts","BITS","BYTES","sqrtP","f","freeze","MASK","isValid","isValidNot0","isOdd","lhs","rhs","add","p","d","FpPow","div","sqrN","addN","subN","mulN","Fp_","tn","c1","c2","c3","c4","tv1","tv2","tv3","tv4","e1","e2","cmov","e3","sqrt9mod16","toBytes","fromBytes","skipValidation","includes","padded","scalar","invertBatch","lst","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","negateCt","condition","item","negate","normalizeZ","points","invertedZs","fromAffine","toAffine","validateW","W","bits","Number","isSafeInteger","calcWOpts","scalarBits","maxNumber","windows","windowSize","mask","shiftBy","calcOffsets","window","wOpts","wbits","nextN","offsetStart","offset","abs","isZero","isNeg","isNegF","offsetF","pointPrecomputes","pointWindowSizes","getW","assert0","wNAF","constructor","Point","BASE","Fn","_unsafeLadder","elm","double","precomputeWindow","point","base","precomputes","wo","wNAFUnsafe","getPrecomputes","transform","comp","cached","unsafe","prev","createCache","delete","hasCache","pippenger","fieldN","scalars","validateMSMPoints","field","s","validateMSMScalars","plength","slength","buckets","sum","floor","resI","sumI","createField","order","_createCurveFields","type","CURVE","curveOpts","FpFnLE","assign","PrimeEdwardsPoint","ep","_bytes","fromHex","_hex","clearCofactor","assertValidity","invertedZ","toHex","isTorsionFree","isSmallOrder","other","assertSame","init","subtract","multiply","multiplyUnsafe","precompute","isLazy","toRawBytes","hash","eddsaOpts","h","Gx","Gy","uvRatio","randomBytes","adjustScalarBytes","domain","prehash","mapToCurve","_eddsa_legacy_opts_to_new","extraOpts","validated","cofactor","modP","x2","y2","left","right","isEdValidXY","acoord","banZero","aextpoint","toAffineMemo","iz","X","Y","zz","assertValidMemo","T","X2","Y2","Z2","Z4","aX2","zip215","normed","lastByte","isXOdd","isLastByteOdd","wnaf","equals","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","E","G","F","H","X3","Y3","T3","Z3","T1","T2","ex","ey","ez","et","msm","_setWindowSize","edwards","eddsa","ExtendedPoint","_eddsa_new_output_to_legacy","cHash","data","ctx","phflag","modN_LE","getExtendedPublicKey","secretKey","head","key","lengths","hashed","getPrivateScalar","pointBytes","getPublicKey","hashDomainToScalar","of","msgs","msg","verifyOpts","_size","publicKey","signature","seed","randomSecretKey","utils","isValidSecretKey","isValidPublicKey","toMontgomery","size","is25519","toMontgomerySecret","subarray","randomPrivateKey","keygen","sign","verify","sig","mid","SB","ed25519_CURVE_p","ed25519_CURVE","ED25519_SQRT_M1","v3","v7","_10n","_20n","_40n","_80n","b2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","ed25519_pow_2_252_3","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","invertSqrt","MAX_255B","bytes255ToNumberLE","calcElligatorRistrettoMap","r0","mod","Ns","Ns_D_is_sq","s_","Nt","s2","W0","W1","W2","W3","_RistrettoPoint","super","ap","hashToCurve","R1","R2","ristretto255_map","diff","equalBytes","u1","u2","u1_2","u2_2","I","Dx","Dy","u2sq","invsqrt","D1","D2","zInv","_x","_y","one","two","encodeValue","join","encodeURIComponent","String","getPrototypeOf","encodeObjectContextEntry","cause","code","contextAndErrorOptions","errorOptions","contextRest","keys","decodingAdviceMessage","searchParamsString","btoa","encodeContextObject","getErrorMessage","__code","isFixedSize","codec","fixedSize","isLittleEndian","config","endian","numberEncoderFactory","input","encoder","write","range","codecDescription","assertNumberIsBetweenForCodec","arrayBuffer","ArrayBuffer","DataView","encode","getSizeFromValue","getEncodedSize","numberDecoderFactory","decoder","read","assertByteArrayIsNotEmptyForCodec","expected","bytesLength","assertByteArrayHasEnoughBytesForCodec","view","bytesOffset","byteOffset","byteLength","buffer","toArrayBuffer","decode","getU64Encoder","le","setBigUint64","getU64Codec","decoderFixedSize","encoderFixedSize","maxSize","decoderMaxSize","encoderMaxSize","getBigUint64","getU64Decoder","StructError","failure","failures","explanation","rest","path","isObject","isNonArrayObject","print","toFailure","struct","branch","refinement","toFailures","Symbol","iterator","run","coerce","coercer","status","validator","ts","Map","Set","refiner","Struct","props","schema","assert","is","validate","tuples","tuple","done","next","shiftIterator","array","Element","instance","Class","literal","constant","description","nullable","isNaN","optional","record","Key","Value","string","Structs","Never","union","coerced","first","unknown","WebSocketBrowserImpl","socket","address","protocols","WebSocket","onopen","onmessage","onerror","onclose","reason","send","optionsOrCallback","cb","close","addEventListener","DefaultDataPack","CommonClient","rpc_id","queue","autoconnect","ready","reconnect","reconnect_timer_id","reconnect_interval","max_reconnects","rest_options","current_reconnects","generate_request_id","webSocketFactory","dataPack","_connect","connect","timeout","ws_opts","Promise","resolve","reject","jsonrpc","promise","setTimeout","login","resp","listMethods","notify","subscribe","unsubscribe","setAutoReconnect","setReconnectInterval","interval","setMaxReconnects","getCurrentReconnects","getMaxReconnects","isReconnecting","willReconnect","clearTimeout","Buffer","notification","then","_256n","_0x71n","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","round","IOTAS","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","blockLen","suffix","outputLen","enableXOF","rounds","pos","posOut","finished","destroyed","state","state32","clone","_cloneInto","keccak","Uint32Array","idx1","idx0","B0","B1","Th","Tl","curH","curL","shift","PI","keccakP","update","take","finish","writeInto","out","bufferOut","xofInto","xof","digestInto","destroy","digest","to","keccak_256","gen","HMAC","_key","iHash","pad","oHash","buf","divNearest","den","validateSigFormat","format","validateSigOpts","def","optsn","optName","lowS","DERErr","DER","Err","_tlv","tag","dataLen","lenLen","lengthBytes","_int","parseInt","toSig","int","tlv","seqBytes","seqLeftBytes","rBytes","rLeftBytes","sBytes","sLeftBytes","hexFromSig","seq","pprefix","hasEvenY","getWLengths","publicKeyUncompressed","publicKeyHasPrefix","ecdsa","ecdsaOpts","hmac","bits2int","bits2int_modN","CURVE_ORDER","fnBits","getSharedSecret","ecdhOpts","randomBytes_","fieldLen","minLen","reduced","isCompressed","isProbPub","isValidPrivateKey","normPrivateKeyToScalar","secretKeyA","publicKeyB","ecdh","defaultSigOpts","extraEntropy","defaultSigOpts_format","isBiggerThanHalfOrder","validateRS","Signature","recovery","recid","validateSigLength","L","addRecoveryBit","recoverPublicKey","messageHash","FIELD_ORDER","rec","radj","ir","hasHighS","fromCompact","fromDER","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","delta","ORDER_MASK","int2octets","validateMsgAndHash","k2sig","privateKey","some","h1int","seedArgs","kBytes","ik","normS","prepSig","drbg","hashLen","qByteLen","hmacFn","u8n","u8of","byte","reset","reseed","sl","pred","createHmacDrbg","sg","isHex","isObj","derError","tryParsingSig","weierstrass","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","_weierstrass_legacy_opts_to_new","_ecdsa_legacy_opts_to_new","_ecdsa","ProjectivePoint","_ecdsa_new_output_to_legacy","beta","basises","assertCompressionIsSupported","encodePoint","_c","bx","decodePoint","uncomp","tail","isValidXY","weierstrassEquation","sqrtError","x3","_4a3","_27b2","aprjpoint","splitEndoScalarN","basis","b1","k1","k2","k1neg","k2neg","MAX_NUM","_splitEndoScalar","finishEndo","endoBeta","k1p","k2p","U1","U2","b3","t0","t1","t2","t3","t4","t5","fake","k1f","k2f","sc","p1","p2","mulEndoUnsafe","multiplyAndAddUnsafe","px","py","pz","fromPrivateKey","weierstrassN","secp256k1_CURVE","secp256k1_ENDO","Fpk1","_6n","_11n","_22n","_23n","_44n","_88n","b6","b9","b11","b22","b44","b88","b176","b220","b223","secp256k1","curveDef","defHash","createCurve","sha2","generatePrivateKey","generateKeypair","privateScalar","isOnCurve","toBuffer","arr","isBuffer","properties","serialize","SOLANA_SCHEMA","deserialize","decodeUnchecked","deserializeUnchecked","Enum","enum","_PublicKey","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","uniquePublicKeyCounter","PublicKey","_bn","isPublicKeyData","decoded","unique","eq","toBase58","toJSON","toArrayLike","zeroPad","alloc","copy","toStringTag","createWithSeed","fromPublicKey","programId","publicKeyBytes","createProgramAddressSync","seeds","createProgramAddress","findProgramAddressSync","nonce","seedsWithNonce","findProgramAddress","pubkeyData","default","kind","Account","_publicKey","_secretKey","secretKeyBuffer","BPF_LOADER_DEPRECATED_PROGRAM_ID","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","defineProperty","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","writable","readonly","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","pubkey","property","rustString","rsl","_decode","bind","_encode","rslShim","str","chars","span","getAlloc","getItemAlloc","elementLayout","layout","decodeLength","elem","encodeLength","rem_len","CompiledKeys","payer","keyMetaMap","compile","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","writableSigners","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","END_OF_BUFFER_ERROR_MESSAGE","guardedShift","byteArray","guardedSplice","start","splice","Message","accountKeys","recentBlockhash","indexToProgramIds","account","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","isProgramId","programIds","values","nonProgramIds","_","numKeys","keyCount","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","transaction","signData","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","count","lookup","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","maskedPrefix","addressTableLookupsCount","VersionedMessage","deserializeMessageVersion","TransactionStatus","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","console","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","indexOf","_compile","every","pair","serializeMessage","getEstimatedFee","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","_getMessageSignednessErrors","errors","missing","invalid","sigErrors","errorMessage","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","TransactionMessage","decompile","numWritableSignedAccounts","numWritableUnsignedAccounts","compiledIx","compileToLegacyMessage","compileToV0Message","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","signaturesLength","messageData","signerPubkeys","signerIndex","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","SendTransactionError","action","transactionMessage","logs","maybeLogsOutput","guideText","transactionLogs","transactionError","cachedLogs","getLogs","getTransaction","tx","logMessages","catch","SolanaJSONRPCErrorCode","JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP","JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE","JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY","JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_NO_SNAPSHOT","JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","JSON_RPC_SCAN_ERROR","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SolanaJSONRPCError","customMessage","async","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","encodeData","allocLength","layoutFields","decodeData$1","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","fromAccountData","nonceAccount","u64","bigIntLayout","src","bigInt","SystemInstruction","decodeInstructionType","checkProgramId","typeIndex","ixType","SYSTEM_INSTRUCTION_LAYOUTS","decodeCreateAccount","checkKeyLength","lamports","space","Create","fromPubkey","newAccountPubkey","decodeTransfer","Transfer","toPubkey","decodeTransferWithSeed","TransferWithSeed","basePubkey","decodeAllocate","Allocate","accountPubkey","decodeAllocateWithSeed","AllocateWithSeed","decodeAssign","Assign","decodeAssignWithSeed","AssignWithSeed","decodeCreateWithSeed","CreateWithSeed","decodeNonceInitialize","authorized","InitializeNonceAccount","noncePubkey","decodeNonceAdvance","AdvanceNonceAccount","decodeNonceWithdraw","WithdrawNonceAccount","decodeNonceAuthorize","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","UpgradeNonceAccount","createAccount","transfer","createAccountWithSeed","createNonceAccount","initParams","nonceInitialize","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","allocate","CHUNK_SIZE","Loader","getMinNumSignatures","chunkSize","load","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","owner","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","deployCommitment","finalizeSignature","getSlot","slot","MS_PER_SLOT","BPF_LOADER_PROGRAM_ID","BpfLoader","elf","loaderProgramId","getDefaultExportFromCjs","__esModule","fastStableStringify$1","hasRequiredFastStableStringify","requireFastStableStringify","objToString","objKeys","obj","isArrayProp","propVal","toStr","isFinite","returnVal","fastStableStringify","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","fetchImpl","globalThis","fetch","RpcWebSocketClient","url","rpc","underlyingSocket","readyState","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","decodeData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","applyDefaultMemcmpEncodingToFilters","filters","memcmp","encoding","createRpcResult","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetRecentPrioritizationFeesResult","prioritizationFee","GetInflationRateResult","total","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","ParsedInstructionStruct","parsed","PartiallyDecodedInstructionStruct","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","innerInstructions","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetRecentPrioritizationFeesRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","source","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","preBalances","postBalances","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","costUnits","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetLatestBlockhashRpcResult","IsBlockhashValidRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","lamportsPerSignature","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","Connection","endpoint","_commitmentOrConfig","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","httpAgent","client","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","getBlockHeight","requestPromises","_buildArgs","requestHash","confirmTransactionInitialTimeout","putativeUrl","test","assertEndpointUrl","matches","match","hostish","portWithColon","protocol","startsWith","startPort","makeWebsocketUrl","customFetch","fetchWithMiddleware","info","modifiedFetchArgs","modifiedInfo","modifiedInit","body","agent","headers","too_many_requests_retries","waitTime","statusText","text","ok","createRpcClient","requests","batch","methodName","createRpcBatchRequest","Infinity","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","getBalance","getBlockTime","getMinimumLedgerSlot","getFirstAvailableBlock","getSupply","configArg","getTokenSupply","tokenMintAddress","getTokenAccountBalance","tokenAddress","getTokenAccountsByOwner","ownerAddress","_args","getParsedTokenAccountsByOwner","getLargestAccounts","getTokenLargestAccounts","mintAddress","getAccountInfoAndContext","getParsedAccountInfo","getMultipleParsedAccounts","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","getMultipleAccountsInfo","getStakeActivation","getProgramAccounts","configOrCommitment","configWithoutEncoding","unsafeRes","baseSchema","withContext","getParsedProgramAccounts","strategy","rawSignature","decodedSignature","aborted","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","abortConfirmation","removeSignatureListener","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","expiryPromise","checkBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","outcome","race","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","commitmentForStatus","timeoutId","timeoutMs","TIMED_OUT","getClusterNodes","getVoteAccounts","getSlotLeader","getSlotLeaders","startSlot","limit","getSignatureStatuses","getTransactionCount","getTotalSupply","excludeNonCirculatingAccountsList","getInflationGovernor","getInflationReward","getInflationRate","getEpochInfo","getEpochSchedule","epochSchedule","getLeaderSchedule","getRecentBlockhashAndContext","getLatestBlockhashAndContext","getRecentPerformanceSamples","getFeeCalculatorForBlockhash","wireMessage","getRecentPrioritizationFees","lockedWritableAccounts","getRecentBlockhash","getLatestBlockhash","isBlockhashValid","getVersion","getGenesisHash","getBlock","_buildArgsAtLeastConfirmed","transactionDetails","getParsedBlock","getBlockProduction","extra","getParsedTransaction","getParsedTransactions","getTransactions","getConfirmedBlock","block","getBlocks","endSlot","getBlockSignatures","getConfirmedBlockSignatures","getConfirmedTransaction","getParsedConfirmedTransaction","getParsedConfirmedTransactions","getConfirmedSignaturesForAddress","firstAvailableBlock","until","highestConfirmedRoot","before","getConfirmedSignaturesForAddress2","getSignaturesForAddress","getAddressLookupTable","accountInfo","getNonce","requestAirdrop","_blockhashWithExpiryBlockHeight","disableCache","expired","Date","now","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getStakeMinimumDelegation","simulateTransaction","transactionOrMessage","configOrSigners","includeAccounts","encodedTransaction","originalTx","sigVerify","traceIndent","logTrace","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","clientSubscriptionId","log","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","_makeSubscription","subscriptionConfig","existingSubscription","onAccountChange","removeAccountChangeListener","_unsubscribeClientSubscription","accountId","onProgramAccountChange","maybeFilters","removeProgramAccountChangeListener","onLogs","mentions","removeOnLogsListener","onSlotChange","removeSlotChangeListener","onSlotUpdate","removeSlotUpdateListener","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","removeRootChangeListener","Keypair","keypair","_keypair","generate","fromSecretKey","computedPublicKey","ii","fromSeed","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableInstruction","layoutType","decodeCreateLookupTable","checkKeysLength","recentSlot","decodeExtendLookupTable","decodeCloseLookupTable","recipient","decodeFreezeLookupTable","decodeDeactivateLookupTable","AddressLookupTableProgram","createLookupTable","lookupTableAddress","bumpSeed","freezeLookupTable","extendLookupTable","addr","deactivateLookupTable","closeLookupTable","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","decodeRequestUnits","units","additionalFee","RequestUnits","decodeRequestHeapFrame","RequestHeapFrame","decodeSetComputeUnitLimit","SetComputeUnitLimit","decodeSetComputeUnitPrice","microLamports","SetComputeUnitPrice","ComputeBudgetProgram","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","createInstructionWithPrivateKey","publicKeyCreate","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","publicKeyToEthAddress","recoveryId","createInstructionWithEthAddress","ethAddress","rawAddress","substr","ethAddressOffset","ethAddressInstructionIndex","pkey","msgHash","privKey","ecdsaSign","_Lockup","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","decodeInitialize","lockup","Initialize","stakePubkey","decodeDelegate","Delegate","decodeAuthorize","newAuthorized","stakeAuthorizationType","Authorize","o","custodianPubkey","decodeAuthorizeWithSeed","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","decodeSplit","Split","splitStakePubkey","decodeMerge","Merge","sourceStakePubKey","decodeWithdraw","Withdraw","decodeDeactivate","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","initialize","maybeLockup","delegate","authorize","authorizeWithSeed","splitInstruction","split","rentExemptReserve","splitWithSeed","merge","withdraw","deactivate","VoteInit","authorizedVoter","authorizedWithdrawer","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","decodeInitializeAccount","voteInit","InitializeAccount","voteAuthorizationType","voteAuthorizeWithSeedArgs","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","currentAuthorityDerivedKeyBasePubkey","authorizedWithdrawerPubkey","VoteProgram","UpdateValidatorIdentity","VoteAuthorizationLayout","Voter","initializeAccount","safeWithdraw","currentVoteAccountBalance","rentExemptMinimum","updateValidatorIdentity","VALIDATOR_INFO_KEY","InfoString","website","details","iconUrl","keybaseUsername","ValidatorInfo","fromConfigData","configKeys","rawInfo","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","votes","authorizedVoters","priorVoters","lastTimestamp","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","idx","isEmpty","http","devnet","testnet","https","clusterApiUrl","cluster","tls","sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","LAMPORTS_PER_SOL","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","U32_MASK64","_32n","fromBig","Ah","Al","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","inRange","ToDictionary","Stream","tokens","endOfStream","prepend","token","pop","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","temp","input_stream","code_points","cp","fromCharCode","codePointsToString","opt_string","charCodeAt","stringToCodePoints","base64","ieee754","customInspectSymbol","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","setPrototypeOf","encodingOrOffset","allocUnsafe","isEncoding","actual","fromString","isView","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","checked","numberIsNaN","fromObject","toPrimitive","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","hi","lo","utf16leToBytes","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","enumerable","poolSize","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","toLocaleString","inspect","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","_arr","ret","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUintLE","readUIntLE","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","sym","getMessage","Base","configurable","stack","addNumericalSeparator","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","isInteger","INVALID_BASE64_RE","leadSurrogate","toByteArray","base64clean","dst","alphabet","table","i16","BufferBigIntNotDefined","getRandomValues","rnds8","rng","crypto","msCrypto","byteToHex","rnds","random","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","charCode","carry","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","inherits","ctor","superCtor","super_","TempCtor","BN","isBN","negative","words","red","_init","wordSize","parseHex4Bits","parseHexByte","lowerBound","parseBase","move","dest","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","w","_strip","limbLen","limbPow","word","imuln","_iaddn","_move","_expand","_normSign","for","zeros","groupSizes","groupBases","smallMulTo","ncarry","rword","maxJ","groupSize","groupBase","modrn","idivn","toNumber","ArrayType","reqLength","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","a0","al0","ah0","al1","ah1","al2","ah2","al3","ah3","al4","ah4","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","bl4","bh4","bl5","bh5","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","rtwdf","cos","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","isqr","toBitArray","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","qj","divmod","positive","divn","umod","divRound","dm","half","r2","andln","modn","egcd","g","isEven","yp","xp","im","jm","gcd","_invmp","x1","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","output","outLen","mod3","nOne","lpow","z","wnd","currentLen","mont","Chi","Maj","HashMD","padOffset","dataView","process","roundClean","_u32_max","wh","wl","setUint32","oview","SHA256_IV","SHA512_IV","SHA256_K","SHA256_W","SHA256","getUint32","W15","s0","s1","K512","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","tripletToBase64","isBytes","anumber","abytes","ahash","aexists","checkFinished","aoutput","u32","clean","arrays","createView","rotr","byteSwap","swap32IfBE","hasHexBuiltin","hexes","bytesToHex","asciis","_0","_9","asciiToBase16","ch","hexToBytes","hl","al","ai","n1","char","concatBytes","Hash","createHasher","hashCons","hashC","u8","buffer_1","checkUint8Array","uint8ArrayToBuffer","Layout","makeDestinationObject","getSpan","replicate","rv","fromArray","nameWithProperty","ExternalLayout","isCount","OffsetLayout","UInt","UIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","NearInt64","Sequence","elo","Structure","decodePrefixes","fd","fsp","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","Blob","srcBuffer","__importDefault","rustEnum","vecU8","tagged","vec","bool","option","i256","u256","i128","u128","i64","f64","f32","i32","u16","i8","buffer_layout_1","web3_js_1","bn_js_1","buffer_layout_2","s8","s16","s32","BNLayout","signed","blob","WrappedLayout","OptionLayout","discriminator","decodeBool","encodeBool","wrappedLayout","receivedTag","variants","discriminant","unionLayout","variant","addVariant","MapEntryLayout","keyLayout","valueLayout","keyBytes","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","pascalCase","preserveConsecutiveUppercase","locale","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","lastIndex","m1","identifier","postProcess","__createBinding","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bs58_1","textDecoder","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","serializeField","fieldType","writer","serializeStruct","borshSerialize","structSchema","deserializeField","reader","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","basex","bindConstructorLayout","layout_","boundConstructor_","GreedyCount","elementSpan","rem","Int","IntBE","NearUInt64BE","NearInt64BE","Float","FloatBE","Double","DoubleBE","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","upv","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","dlo","clo","contentOffset","VariantLayout","vb","fixBitwiseResult","BitStructure","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","fieldFor","container","totalBits","usedBits","valueMask","wordMask","wordValue","CString","srcb","UTF8","maxSpan","Constant","greedy","u24","u40","u48","nu64","u16be","u24be","u32be","u40be","u48be","nu64be","s24","s40","s48","ns64","s16be","s24be","s32be","s40be","s48be","ns64be","f32be","f64be","unionLayoutDiscriminator","cstr","utf8","copyProps","SafeBuffer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","getter","definition","Function","prop","nmd","paths","children","zero$1","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","D_CODES$1","_dist_code","_length_code","MAX_MATCH$1","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","pending_buf","pending","send_bits","bi_valid","bi_buf","send_code","tree","bi_reverse","gen_codes","bl_count","next_code","MAX_BITS$1","init_block","LITERALS$1","dyn_ltree","dyn_dtree","bl_tree","END_BLOCK","opt_len","static_len","sym_next","bi_windup","smaller","depth","_n2","_m2","pqdownheap","heap","heap_len","compress_block","ltree","dtree","lc","sx","sym_buf","build_tree","stree","node","heap_max","xbits","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","_tr_stored_block$1","stored_len","trees","_tr_init","LENGTH_CODES$1","L_CODES$1","tr_static_init","l_desc","d_desc","bl_desc","_tr_stored_block","_tr_flush_block","opt_lenb","static_lenb","max_blindex","level","strm","data_type","block_mask","detect_data_type","BL_CODES$1","build_bl_tree","lcodes","dcodes","blcodes","rank","send_all_trees","_tr_tally","sym_end","_tr_align","STATIC_TREES","bi_flush","adler32_1","adler","crcTable","makeTable","crc32_1","crc","messages","constants$2","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","Z_NO_FLUSH$2","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$2","MAX_MATCH","MIN_LOOKAHEAD","INIT_STATE","BUSY_STATE","FINISH_STATE","errorCode","slide_hash","wsize","w_size","hash_size","HASH","hash_shift","hash_mask","flush_pending","avail_out","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","avail_in","next_in","wrap","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","more","window_size","insert","ins_h","deflate_stored","flush","have","min_block","pending_buf_size","used","high_water","deflate_fast","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","func","configuration_table","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","Uint16Array","HEAP_SIZE","MAX_BITS","lit_bufsize","deflateStateCheck","deflateResetKeep","deflateReset","deflateInit2","windowBits","memLevel","deflate_1$2","old_flush","level_flags","hcrc","comment","time","os","beg","gzhead_extra","bstate","deflate_huff","deflate_rle","dictionary","dictLength","tmpDict","avail","_has","common","sources","chunks","chunk","STR_APPLY_UIA_OK","__","_utf8len","strings","m_pos","str_len","buf_len","utf16buf","c_len","buf2binstring","zstream","toString$1","Z_NO_FLUSH$1","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFLATED$1","Deflate$1","opt","raw","gzip","ended","dict","_dict_set","deflate$1","deflator","flush_mode","_flush_mode","onData","onEnd","deflate_1$1","Deflate","deflate","deflateRaw","constants","BAD$1","inffast","_in","_out","dmax","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","from_source","lencode","distcode","lenbits","distbits","top","dolen","sane","lbase","lext","dbase","dext","inftrees","lens_index","codes","table_index","work","incr","curr","drop","huff","MAXBITS","offs","here_bits","here_op","here_val","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_NEED_DICT$1","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_MEM_ERROR$1","HEAD","DICT","TYPE","TYPEDO","COPY_","LEN_","LEN","CHECK","BAD","zswap32","InflateState","havedict","flags","check","ncode","nlen","ndist","lendyn","distdyn","back","was","inflateStateCheck","inflateResetKeep","Int32Array","inflateReset","inflateReset2","inflateInit2","lenfix","distfix","virgin","fixedtables","updatewindow","inflate_1$2","put","last_bits","last_op","last_val","hbuf","inf_leave","xflags","extra_len","dictid","gzheader","Inflate$1","inflate$1","inflator","last_avail_out","next_out_utf8","utf8str","inflate_1$1","Inflate","inflate","inflateRaw","ungzip","inflate_1","isVersionedTransaction","encode$1","toInstruction","idlIx","ixArg","validateAccounts","ixAccounts","translateAddress","_cached","valid","union$1","getMultipleAccountsAndContextCore","commitmentOverride","accountInfos","AnchorProvider","wallet","defaultOptions","local","env","sendAndConfirm","_a","_b","_d","rawTx","signTransaction","ConfirmError","txSig","failedTx","sendAll","txWithSigners","txs","kp","signedTxs","signAllTransactions","sigs","simulate","SimulateError","simulationResponse","getProvider","_provider","_FEATURES","isSet","IdlError","ProgramErrorStack","programKeyRegex","successRegex","programStack","exec","programKey","AnchorError","errorLogs","origin","comparedValues","_programErrorStack","anchorErrorLogIndex","anchorErrorLog","pubkeyRegex","leftPubkey","rightPubkey","valueRegex","leftValue","rightValue","noInfoAnchorErrorLog","fileLineAnchorErrorLog","accountNameAnchorErrorLog","errorCodeString","errorNumber","file","line","fileLine","accountName","programErrorStack","ProgramError","idlErrors","errString","unparsedErrorCode","components","parseErr","errorMsg","LangErrorMessage","translateError","anchorError","programError","Proxy","__assign$1","__assign","lowerCase","DEFAULT_SPLIT_REGEXP","DEFAULT_STRIP_REGEXP","IdlCoder","fieldLayout","types","defined","filtered","typeDefLayout","arrayTy","arrayLen","innerLayout","typeDef","fieldLayouts","SIGHASH_GLOBAL_NAMESPACE","BorshInstructionCoder","idl","ixLayout","parseIxLayout","sighashLayouts","sh","sighash","ixName","nameSpace","ixLayouts","InstructionFormatter","idlField","formatIdlType","formatIdlData","flatIdlAccounts","flattenIdlAccounts","idlType","formatIdlDataDefined","enumType","namedFields","fieldData","variantName","accName","sentenceCase","newPrefix","preimage","splitRegexp","stripRegexp","delimiter","noCase","dotCase","accountSize","idlAccount","typeSize","variantSizes","ty","coption","arraySize","BorshAccountsCoder","accountLayouts","layouts","accountDiscriminator","decodeAny","accountDescriminator","appendData","BorshEventCoder","eventTypeDef","discriminators","logArr","disc","eventName","BorshTypesCoder","typeLayouts","typeName","typeData","BorshCoder","commonjsGlobal","Layout_2","Blob$1","RustStringLayout","rustStringLayout","publicKey$2","LAYOUT","WrappedLayout$1","publicKey$1","TOKEN_PROGRAM_ID","ASSOCIATED_PROGRAM_ID","browserPonyfill","isIdlAccounts","accountItem","global","__self__","DOMException","support","viewClasses","isArrayBufferView","normalizeName","normalizeValue","iteratorFor","Headers","append","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","onload","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","bufferClone","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","readAsText","readBlobAsText","readArrayBufferAsText","formData","json","oldValue","thisArg","methods","Request","upcased","credentials","referrer","form","decodeURIComponent","Response","bodyInit","redirectStatuses","redirect","location","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","responseURL","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","onreadystatechange","removeEventListener","polyfill","ponyfill","IDL_ACCOUNT_LAYOUT","splitArgsAndCtx","inputLen","InstructionNamespaceFactory","build","encodeFn","ixArgs","remainingAccounts","accs","accountsArray","rpcAccs","isOptional","isMut","TransactionFactory","ixFn","preInstructions","postInstructions","RpcFactory","txFn","provider","AccountFactory","coder","accountFns","AccountClient","_programId","_coder","_idlAccount","fetchNullable","fetchNullableAndContext","fetchAndContext","fetchMultiple","fetchMultipleAndContext","batches","getMultipleAccountsAndContext","coderFilters","dataSize","subscriptions","createInstruction","sizeOverride","associated","associatedAddress","assoc","PROGRAM_LOG","EventManager","_eventParser","EventParser","_eventCallbacks","_eventListeners","_listenerIdCount","_onLogsSubscriptionId","parseLogs","allListeners","listenerCb","errorOnDecodeFailure","logScanner","LogScanner","execution","ExecutionContext","newProgram","didPop","handleLog","handleProgramLog","handleSystemLog","logStr","PROGRAM_DATA","logStart","SimulateFactory","parser","uint64","fromBuffer","COptionLayout","TOKEN_ACCOUNT_LAYOUT","U","AccountsResolver","_accounts","_idlIx","_accountNamespace","_idlTypes","_customResolver","_accountStore","AccountStore","resolveConst","_resolveEventCpi","resolvePdas","resolveRelations","resolveCustom","resolved","resolveOptionalsHelper","partialAccounts","accountItems","nestedAccountsGeneric","partialAccount","isPartialAccounts","flattenPartialAccounts","resolveOptionals","subPath","accountDescOrAccounts","subAccounts","accountDesc","accountDescName","CONST_ACCOUNTS","nextIndex","currentName","nextName","currentPath","nextPath","accountDescCasted","pda","autoPopulatePda","relations","newPath","matching","rel","fetchAccount","relName","seedDesc","parseProgramId","toBufferConst","argValue","accountValue","toBufferArg","toBufferAccount","getType","subType","toBufferValue","seedArgName","idlArgPosition","argDesc","pathComponents","fieldPubkey","parseAccountValue","accountField","bU64","associatedTokenProgram","rent","systemProgram","tokenProgram","clock","_cache","_idls","ensureIdl","Program","fetchIdl","accountFetcher","firstAccountLayout","MethodsBuilderFactory","rpcFn","simulateFn","viewFn","accountNamespace","idlTypes","customResolver","MethodsBuilder","throwOnNull","toReturn","_ixFn","_txFn","_rpcFn","_simulateFn","_viewFn","_remainingAccounts","_signers","_preInstructions","_postInstructions","_autoResolveAccounts","_accountsResolver","pubkeys","accountsStrict","ixs","rpcAndKeys","prepare","ViewFactory","hasReturn","returns","simulationResult","returnPrefix","returnLog","returnType","NamespaceFactory","getCustomResolver","parseIdlErrors","ixItem","txItem","rpcItem","simulateItem","viewItem","methodItem","_idl","views","at","idlAddr","idlAddress","inflatedIdl","decode$2","Generator","_regeneratorDefine2","GeneratorFunction","GeneratorFunctionPrototype","displayName","_regenerator","_invoke","asyncGeneratorStep","_asyncToGenerator","_next","_throw","_defineProperties","_toPropertyKey","_typeof","_toPrimitive","gadoWalletBackground","_classCallCheck","network","isConnected","keeperBot","_callee","_context","loadSettings","setupConnection","setupMessageListeners","setupPeriodicTasks","_loadSettings","_callee2","_t","_context2","chrome","storage","clearWallet","_setupConnection","_callee3","rpcUrl","_context3","getRpcUrl","setupProgram","_setupProgram","_callee6","_t2","_this","_context6","runtime","getURL","anchor","_signTransaction","_callee4","_context4","_signAllTransactions","_callee5","_context5","_x2","_this2","onMessage","sender","sendResponse","handleMessage","_handleMessage","_callee7","_t3","_t4","_context7","connectWallet","getWalletStatus","switchNetwork","getInheritanceStats","getInheritances","getRecentActivity","getKeeperStatus","updateActivity","inheritanceAddress","cancelInheritance","exportWallet","resetWallet","createInheritance","success","_x3","_x4","_x5","_connectWallet","_callee8","stored","_t5","_context8","_x6","_x7","_getWalletStatus","_callee9","_context9","_x8","_switchNetwork","_callee0","_t6","_context0","_x9","_x0","_getBalance","_callee1","balance","balanceSOL","_t7","_context1","_x1","_sendTransaction","_callee10","toPublicKey","memoInstruction","_yield$this$connectio","_t8","_context10","storeTransaction","_x10","_x11","_getInheritanceStats","_callee11","solHeirs","tokenHeirs","protectedSOL","_iterator","_step","heir","_t9","_context11","totalHeirs","solInheritances","tokenInheritances","solHeir","tokenHeir","_createForOfIteratorHelper","isClaimed","_x12","_getInheritances","_callee12","formatSolHeir","formatTokenHeir","_t0","_context12","inheritances","sol","heirAccount","inactivityPeriodSeconds","lastActivity","tokenMint","_x13","_getTransactions","_callee13","sortedTxs","_t1","_context13","_x14","_x15","_getRecentActivity","_callee14","activities","recentActivities","_t10","_context14","_x16","_x17","_getKeeperStatus","_callee15","currentTime","_t11","_context15","isRunning","totalSolHeirs","totalTokenHeirs","eligibleSolHeirs","eligibleTokenHeirs","totalSolValue","checkInterval","_x18","_updateActivity","_callee16","inheritancePubkey","_tx","_t14","_context16","storeActivity","subtitle","updateTokenActivity","_x19","_x20","_cancelInheritance","_callee17","tokenHeirAccount","_PublicKey$findProgra","_PublicKey$findProgra2","escrowTokenAccount","_PublicKey$findProgra3","_PublicKey$findProgra4","ownerTokenAccount","_tx2","_t17","_context17","cancelSolInheritance","_slicedToArray","cancelTokenInheritance","_x21","_x22","_exportWallet","_callee18","privateKeyArray","privateKeyString","_t18","_context18","_x23","_resetWallet","_callee19","_t19","_context19","_x24","_createInheritance","_callee20","heirAddress","inactivityDays","heirPubkey","inactivitySeconds","_PublicKey$findProgra5","_PublicKey$findProgra6","solHeirPDA","tokenMintPubkey","_PublicKey$findProgra7","_PublicKey$findProgra8","tokenHeirPDA","_PublicKey$findProgra9","_PublicKey$findProgra0","_PublicKey$findProgra1","_PublicKey$findProgra10","_tx3","_t20","_context20","createSolHeir","createTokenHeir","_x25","_x26","_storeTransaction","_callee21","_context21","_x27","_storeActivity","_callee22","activity","_context22","_x28","_clearWallet","_callee23","_context23","clear","_this3","alarms","periodInMinutes","onAlarm","alarm","updateBalance","checkKeeperBot","_updateBalance","_callee24","lastBalance","_t21","_context24","_checkKeeperBot","_callee25","_context25"],"sourceRoot":""}