{"version":3,"file":"popup.js","mappings":"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","sources":["webpack://gado-wallet-extension/./src/popup.js"],"sourcesContent":["// gado Wallet Chrome Extension - Popup Script\n// Handles the main wallet interface and user interactions\n\nclass gadoWalletPopup {\n    constructor() {\n        this.wallet = null;\n        this.network = 'devnet';\n        this.isConnected = false;\n        this.currentTab = 'dashboard';\n        \n        this.init();\n    }\n\n    async init() {\n        await this.loadSettings();\n        this.setupEventListeners();\n        this.setupTabNavigation();\n        await this.checkWalletConnection();\n        this.startAutoRefresh();\n    }\n\n    async loadSettings() {\n        const settings = await chrome.storage.local.get([\n            'network', 'autoLockTimer', 'keeperNotifications', 'confirmationCount'\n        ]);\n        \n        this.network = settings.network || 'devnet';\n        document.getElementById('networkSelect').value = this.network;\n        document.getElementById('autoLockTimer').value = settings.autoLockTimer || '900';\n        document.getElementById('keeperNotifications').checked = settings.keeperNotifications !== false;\n        document.getElementById('confirmationCount').value = settings.confirmationCount || '3';\n    }\n\n    setupEventListeners() {\n        // Wallet Connection\n        document.getElementById('connectWallet').addEventListener('click', () => this.connectWallet());\n        \n        // Network Selection\n        document.getElementById('networkSelect').addEventListener('change', (e) => this.switchNetwork(e.target.value));\n        \n        // Quick Actions\n        document.getElementById('sendBtn').addEventListener('click', () => this.openSendModal());\n        document.getElementById('receiveBtn').addEventListener('click', () => this.openReceiveModal());\n        document.getElementById('addHeirBtn').addEventListener('click', () => this.openInheritanceSetup());\n        document.getElementById('viewKeeper').addEventListener('click', () => this.viewKeeperStatus());\n        \n        // Balance Refresh\n        document.getElementById('refreshBalance').addEventListener('click', () => this.refreshBalance());\n        document.getElementById('copyAddress').addEventListener('click', () => this.copyAddress());\n        \n        // Inheritance Setup\n        document.getElementById('createInheritanceBtn').addEventListener('click', () => this.openInheritanceSetup());\n        document.getElementById('setupFirstInheritance').addEventListener('click', () => this.openInheritanceSetup());\n        \n        // Modal Controls\n        this.setupModalControls();\n        \n        // Settings\n        this.setupSettingsControls();\n    }\n\n    setupModalControls() {\n        // Send Modal\n        document.getElementById('cancelSend').addEventListener('click', () => this.closeSendModal());\n        document.getElementById('confirmSend').addEventListener('click', () => this.processSendTransaction());\n        \n        // Receive Modal\n        document.getElementById('closeReceive').addEventListener('click', () => this.closeReceiveModal());\n        document.getElementById('copyReceiveAddress').addEventListener('click', () => this.copyReceiveAddress());\n        \n        // Close modals when clicking outside\n        document.querySelectorAll('.modal').forEach(modal => {\n            modal.addEventListener('click', (e) => {\n                if (e.target === modal) {\n                    this.closeAllModals();\n                }\n            });\n        });\n        \n        // Close buttons\n        document.querySelectorAll('.modal-close').forEach(btn => {\n            btn.addEventListener('click', () => this.closeAllModals());\n        });\n    }\n\n    setupSettingsControls() {\n        document.getElementById('autoLockTimer').addEventListener('change', (e) => {\n            chrome.storage.local.set({ autoLockTimer: e.target.value });\n        });\n        \n        document.getElementById('keeperNotifications').addEventListener('change', (e) => {\n            chrome.storage.local.set({ keeperNotifications: e.target.checked });\n        });\n        \n        document.getElementById('confirmationCount').addEventListener('change', (e) => {\n            chrome.storage.local.set({ confirmationCount: e.target.value });\n        });\n        \n        document.getElementById('exportWallet').addEventListener('click', () => this.exportWallet());\n        document.getElementById('resetWallet').addEventListener('click', () => this.resetWallet());\n    }\n\n    setupTabNavigation() {\n        const navButtons = document.querySelectorAll('.nav-btn');\n        const tabPanes = document.querySelectorAll('.tab-pane');\n        \n        navButtons.forEach(btn => {\n            btn.addEventListener('click', () => {\n                const tabName = btn.dataset.tab;\n                \n                // Update active nav button\n                navButtons.forEach(b => b.classList.remove('active'));\n                btn.classList.add('active');\n                \n                // Update active tab pane\n                tabPanes.forEach(pane => pane.classList.remove('active'));\n                document.getElementById(tabName).classList.add('active');\n                \n                this.currentTab = tabName;\n                this.loadTabContent(tabName);\n            });\n        });\n    }\n\n    async loadTabContent(tabName) {\n        switch(tabName) {\n            case 'dashboard':\n                await this.loadDashboard();\n                break;\n            case 'inheritance':\n                await this.loadInheritanceTab();\n                break;\n            case 'transactions':\n                await this.loadTransactions();\n                break;\n            case 'settings':\n                // Settings are static, no need to load\n                break;\n        }\n    }\n\n    async connectWallet() {\n        try {\n            this.showLoading('Connecting wallet...');\n            \n            // Send message to background script to connect wallet\n            const response = await chrome.runtime.sendMessage({\n                type: 'CONNECT_WALLET',\n                network: this.network\n            });\n            \n            if (response.success) {\n                this.wallet = response.wallet;\n                this.isConnected = true;\n                await this.updateWalletUI();\n                await this.loadDashboard();\n                this.showNotification('Wallet connected successfully!', 'success');\n            } else {\n                throw new Error(response.error || 'Failed to connect wallet');\n            }\n        } catch (error) {\n            console.error('Wallet connection error:', error);\n            this.showNotification('Failed to connect wallet: ' + error.message, 'error');\n        } finally {\n            this.hideLoading();\n        }\n    }\n\n    async switchNetwork(network) {\n        if (network === this.network) return;\n        \n        try {\n            this.showLoading('Switching network...');\n            \n            const response = await chrome.runtime.sendMessage({\n                type: 'SWITCH_NETWORK',\n                network: network\n            });\n            \n            if (response.success) {\n                this.network = network;\n                await chrome.storage.local.set({ network });\n                \n                if (this.isConnected) {\n                    await this.refreshBalance();\n                    await this.loadTabContent(this.currentTab);\n                }\n                \n                this.showNotification(`Switched to ${network}`, 'success');\n            } else {\n                throw new Error(response.error || 'Failed to switch network');\n            }\n        } catch (error) {\n            console.error('Network switch error:', error);\n            this.showNotification('Failed to switch network: ' + error.message, 'error');\n            document.getElementById('networkSelect').value = this.network;\n        } finally {\n            this.hideLoading();\n        }\n    }\n\n    async checkWalletConnection() {\n        try {\n            const response = await chrome.runtime.sendMessage({\n                type: 'GET_WALLET_STATUS'\n            });\n            \n            if (response.success && response.isConnected) {\n                this.wallet = response.wallet;\n                this.isConnected = true;\n                this.network = response.network || 'devnet';\n                document.getElementById('networkSelect').value = this.network;\n                await this.updateWalletUI();\n                await this.loadDashboard();\n            } else {\n                this.showDisconnectedState();\n            }\n        } catch (error) {\n            console.error('Wallet status check error:', error);\n            this.showDisconnectedState();\n        }\n    }\n\n    async updateWalletUI() {\n        if (!this.wallet || !this.isConnected) {\n            this.showDisconnectedState();\n            return;\n        }\n        \n        // Update address display\n        const shortAddress = this.shortenAddress(this.wallet.publicKey);\n        document.getElementById('walletAddress').textContent = shortAddress;\n        document.getElementById('receiveAddress').value = this.wallet.publicKey;\n        \n        // Show connected state\n        document.getElementById('disconnectedState').classList.add('hidden');\n        document.getElementById('connectedState').classList.remove('hidden');\n        document.getElementById('mainNav').classList.remove('hidden');\n        \n        // Update balance\n        await this.refreshBalance();\n    }\n\n    showDisconnectedState() {\n        document.getElementById('disconnectedState').classList.remove('hidden');\n        document.getElementById('connectedState').classList.add('hidden');\n        document.getElementById('mainNav').classList.add('hidden');\n        this.isConnected = false;\n    }\n\n    async refreshBalance() {\n        if (!this.isConnected) return;\n        \n        try {\n            const response = await chrome.runtime.sendMessage({\n                type: 'GET_BALANCE'\n            });\n            \n            if (response.success) {\n                const balance = response.balance.toFixed(4);\n                document.getElementById('solBalance').textContent = `${balance} SOL`;\n                document.getElementById('totalBalance').textContent = `${balance} SOL`;\n            }\n        } catch (error) {\n            console.error('Balance refresh error:', error);\n        }\n    }\n\n    async loadDashboard() {\n        if (!this.isConnected) return;\n        \n        try {\n            // Load inheritance stats\n            const inheritanceResponse = await chrome.runtime.sendMessage({\n                type: 'GET_INHERITANCE_STATS'\n            });\n            \n            if (inheritanceResponse.success) {\n                const stats = inheritanceResponse.stats;\n                document.getElementById('protectedAssets').textContent = `${stats.protectedSOL.toFixed(4)} SOL`;\n                document.getElementById('activeHeirs').textContent = stats.totalHeirs;\n            }\n            \n            // Load recent activity\n            await this.loadRecentActivity();\n            \n        } catch (error) {\n            console.error('Dashboard load error:', error);\n        }\n    }\n\n    async loadInheritanceTab() {\n        if (!this.isConnected) return;\n        \n        try {\n            const response = await chrome.runtime.sendMessage({\n                type: 'GET_INHERITANCES'\n            });\n            \n            if (response.success) {\n                const inheritances = response.inheritances;\n                \n                // Update counts\n                document.getElementById('solInheritanceCount').textContent = inheritances.sol.length;\n                document.getElementById('tokenInheritanceCount').textContent = inheritances.tokens.length;\n                \n                // Render inheritance list\n                this.renderInheritanceList(inheritances);\n            }\n        } catch (error) {\n            console.error('Inheritance load error:', error);\n        }\n    }\n\n    renderInheritanceList(inheritances) {\n        const container = document.getElementById('inheritanceList');\n        \n        if (inheritances.sol.length === 0 && inheritances.tokens.length === 0) {\n            // Show empty state\n            return;\n        }\n        \n        // Clear empty state\n        container.innerHTML = '';\n        \n        // Render SOL inheritances\n        inheritances.sol.forEach(inheritance => {\n            container.appendChild(this.createInheritanceCard(inheritance, 'SOL'));\n        });\n        \n        // Render token inheritances\n        inheritances.tokens.forEach(inheritance => {\n            container.appendChild(this.createInheritanceCard(inheritance, 'TOKEN'));\n        });\n    }\n\n    createInheritanceCard(inheritance, type) {\n        const card = document.createElement('div');\n        card.className = 'inheritance-card';\n        \n        const statusClass = inheritance.isClaimed ? 'claimed' : 'active';\n        const amount = type === 'SOL' \n            ? `${(inheritance.amount / 1000000000).toFixed(4)} SOL`\n            : `${inheritance.amount} tokens`;\n        \n        card.innerHTML = `\n            <div class=\"inheritance-header\">\n                <div class=\"inheritance-type\">${type} Inheritance</div>\n                <div class=\"inheritance-status ${statusClass}\">\n                    ${inheritance.isClaimed ? 'Claimed' : 'Active'}\n                </div>\n            </div>\n            <div class=\"inheritance-details\">\n                <div class=\"detail-row\">\n                    <span class=\"detail-label\">Heir:</span>\n                    <span class=\"detail-value\">${this.shortenAddress(inheritance.heir)}</span>\n                </div>\n                <div class=\"detail-row\">\n                    <span class=\"detail-label\">Amount:</span>\n                    <span class=\"detail-value\">${amount}</span>\n                </div>\n                <div class=\"detail-row\">\n                    <span class=\"detail-label\">Inactivity Period:</span>\n                    <span class=\"detail-value\">${Math.floor(inheritance.inactivityPeriodSeconds / 86400)} days</span>\n                </div>\n                <div class=\"detail-row\">\n                    <span class=\"detail-label\">Last Activity:</span>\n                    <span class=\"detail-value\">${new Date(inheritance.lastActivity * 1000).toLocaleDateString()}</span>\n                </div>\n            </div>\n            <div class=\"inheritance-actions\">\n                <button class=\"btn btn-secondary btn-sm\" onclick=\"gadaWallet.updateActivity('${inheritance.address}')\">\n                    Update Activity\n                </button>\n                ${!inheritance.isClaimed ? `\n                    <button class=\"btn btn-danger btn-sm\" onclick=\"gadaWallet.cancelInheritance('${inheritance.address}')\">\n                        Cancel\n                    </button>\n                ` : ''}\n            </div>\n        `;\n        \n        return card;\n    }\n\n    async loadTransactions() {\n        if (!this.isConnected) return;\n        \n        try {\n            const response = await chrome.runtime.sendMessage({\n                type: 'GET_TRANSACTIONS',\n                limit: 20\n            });\n            \n            if (response.success) {\n                this.renderTransactionList(response.transactions);\n            }\n        } catch (error) {\n            console.error('Transaction load error:', error);\n        }\n    }\n\n    renderTransactionList(transactions) {\n        const container = document.getElementById('transactionList');\n        \n        if (transactions.length === 0) {\n            return; // Keep empty state\n        }\n        \n        container.innerHTML = '';\n        \n        transactions.forEach(tx => {\n            container.appendChild(this.createTransactionItem(tx));\n        });\n    }\n\n    createTransactionItem(tx) {\n        const item = document.createElement('div');\n        item.className = 'transaction-item';\n        \n        const typeIcon = this.getTransactionIcon(tx.type);\n        const amount = tx.type === 'inheritance' \n            ? `${(tx.amount / 1000000000).toFixed(4)} SOL`\n            : `${(Math.abs(tx.amount) / 1000000000).toFixed(4)} SOL`;\n        \n        item.innerHTML = `\n            <div class=\"tx-icon\">${typeIcon}</div>\n            <div class=\"tx-details\">\n                <div class=\"tx-title\">${this.getTransactionTitle(tx)}</div>\n                <div class=\"tx-subtitle\">${new Date(tx.timestamp * 1000).toLocaleString()}</div>\n            </div>\n            <div class=\"tx-amount ${tx.amount > 0 ? 'positive' : 'negative'}\">\n                ${tx.amount > 0 ? '+' : ''}${amount}\n            </div>\n            <div class=\"tx-status ${tx.status}\">\n                ${tx.status}\n            </div>\n        `;\n        \n        item.addEventListener('click', () => {\n            this.openTransactionDetails(tx);\n        });\n        \n        return item;\n    }\n\n    getTransactionIcon(type) {\n        switch(type) {\n            case 'send': return '📤';\n            case 'receive': return '📥';\n            case 'inheritance': return '🏛️';\n            case 'heir_setup': return '👨‍👩‍👧‍👦';\n            default: return '📝';\n        }\n    }\n\n    getTransactionTitle(tx) {\n        switch(tx.type) {\n            case 'send': return 'Sent SOL';\n            case 'receive': return 'Received SOL';\n            case 'inheritance': return 'Inheritance Setup';\n            case 'heir_setup': return 'Heir Added';\n            default: return 'Transaction';\n        }\n    }\n\n    async loadRecentActivity() {\n        try {\n            const response = await chrome.runtime.sendMessage({\n                type: 'GET_RECENT_ACTIVITY',\n                limit: 5\n            });\n            \n            if (response.success && response.activities.length > 0) {\n                this.renderRecentActivity(response.activities);\n            }\n        } catch (error) {\n            console.error('Recent activity load error:', error);\n        }\n    }\n\n    renderRecentActivity(activities) {\n        const container = document.getElementById('recentActivity');\n        container.innerHTML = '';\n        \n        activities.forEach(activity => {\n            container.appendChild(this.createActivityItem(activity));\n        });\n    }\n\n    createActivityItem(activity) {\n        const item = document.createElement('div');\n        item.className = 'activity-item';\n        \n        item.innerHTML = `\n            <div class=\"activity-icon\">${this.getTransactionIcon(activity.type)}</div>\n            <div class=\"activity-details\">\n                <div class=\"activity-title\">${activity.title}</div>\n                <div class=\"activity-subtitle\">${activity.subtitle}</div>\n            </div>\n        `;\n        \n        return item;\n    }\n\n    // Modal Functions\n    openSendModal() {\n        document.getElementById('sendModal').classList.remove('hidden');\n    }\n\n    closeSendModal() {\n        document.getElementById('sendModal').classList.add('hidden');\n        this.clearSendForm();\n    }\n\n    openReceiveModal() {\n        document.getElementById('receiveModal').classList.remove('hidden');\n        this.generateQRCode();\n    }\n\n    closeReceiveModal() {\n        document.getElementById('receiveModal').classList.add('hidden');\n    }\n\n    closeAllModals() {\n        document.querySelectorAll('.modal').forEach(modal => {\n            modal.classList.add('hidden');\n        });\n        this.clearSendForm();\n    }\n\n    clearSendForm() {\n        document.getElementById('sendAddress').value = '';\n        document.getElementById('sendAmount').value = '';\n        document.getElementById('sendMemo').value = '';\n    }\n\n    generateQRCode() {\n        // Simple QR code placeholder - in production, use a QR code library\n        const qrContainer = document.getElementById('qrCode');\n        qrContainer.innerHTML = `\n            <div class=\"qr-placeholder\">\n                📱<br>\n                QR Code<br>\n                <small>Install QR library for real QR codes</small>\n            </div>\n        `;\n    }\n\n    async processSendTransaction() {\n        const address = document.getElementById('sendAddress').value.trim();\n        const amount = parseFloat(document.getElementById('sendAmount').value);\n        const memo = document.getElementById('sendMemo').value.trim();\n        \n        if (!address || !amount || amount <= 0) {\n            this.showNotification('Please enter a valid address and amount', 'error');\n            return;\n        }\n        \n        try {\n            this.showLoading('Sending transaction...');\n            \n            const response = await chrome.runtime.sendMessage({\n                type: 'SEND_TRANSACTION',\n                to: address,\n                amount: amount,\n                memo: memo\n            });\n            \n            if (response.success) {\n                this.closeSendModal();\n                this.showNotification('Transaction sent successfully!', 'success');\n                await this.refreshBalance();\n                await this.loadRecentActivity();\n            } else {\n                throw new Error(response.error || 'Transaction failed');\n            }\n        } catch (error) {\n            console.error('Send transaction error:', error);\n            this.showNotification('Failed to send transaction: ' + error.message, 'error');\n        } finally {\n            this.hideLoading();\n        }\n    }\n\n    async openInheritanceSetup() {\n        // Switch to inheritance tab and open setup modal\n        document.querySelector('[data-tab=\"inheritance\"]').click();\n        \n        // Open inheritance setup in new window/tab\n        chrome.tabs.create({\n            url: chrome.runtime.getURL('inheritance.html')\n        });\n    }\n\n    async viewKeeperStatus() {\n        try {\n            const response = await chrome.runtime.sendMessage({\n                type: 'GET_KEEPER_STATUS'\n            });\n            \n            if (response.success) {\n                this.showKeeperStatusModal(response.status);\n            }\n        } catch (error) {\n            console.error('Keeper status error:', error);\n            this.showNotification('Failed to get keeper status', 'error');\n        }\n    }\n\n    showKeeperStatusModal(status) {\n        // Create and show keeper status modal\n        const modal = document.createElement('div');\n        modal.className = 'modal';\n        modal.innerHTML = `\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h3>🤖 Keeper Bot Status</h3>\n                    <button class=\"modal-close\">&times;</button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"keeper-stats\">\n                        <div class=\"stat-row\">\n                            <span>Status:</span>\n                            <span class=\"status-${status.isRunning ? 'active' : 'inactive'}\">\n                                ${status.isRunning ? 'Running' : 'Stopped'}\n                            </span>\n                        </div>\n                        <div class=\"stat-row\">\n                            <span>SOL Heirs:</span>\n                            <span>${status.totalSolHeirs} (${status.eligibleSolHeirs} eligible)</span>\n                        </div>\n                        <div class=\"stat-row\">\n                            <span>Token Heirs:</span>\n                            <span>${status.totalTokenHeirs} (${status.eligibleTokenHeirs} eligible)</span>\n                        </div>\n                        <div class=\"stat-row\">\n                            <span>Protected Value:</span>\n                            <span>${status.totalSolValue.toFixed(4)} SOL</span>\n                        </div>\n                        <div class=\"stat-row\">\n                            <span>Check Interval:</span>\n                            <span>${status.checkInterval} minutes</span>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button class=\"btn btn-primary\" onclick=\"this.closest('.modal').remove()\">Close</button>\n                </div>\n            </div>\n        `;\n        \n        document.body.appendChild(modal);\n        modal.classList.remove('hidden');\n        \n        // Add close event\n        modal.querySelector('.modal-close').onclick = () => modal.remove();\n        modal.onclick = (e) => {\n            if (e.target === modal) modal.remove();\n        };\n    }\n\n    // Utility Functions\n    copyAddress() {\n        if (this.wallet) {\n            navigator.clipboard.writeText(this.wallet.publicKey);\n            this.showNotification('Address copied to clipboard!', 'success');\n        }\n    }\n\n    copyReceiveAddress() {\n        const address = document.getElementById('receiveAddress').value;\n        navigator.clipboard.writeText(address);\n        this.showNotification('Address copied to clipboard!', 'success');\n    }\n\n    shortenAddress(address) {\n        if (!address) return '';\n        return `${address.slice(0, 4)}...${address.slice(-4)}`;\n    }\n\n    showLoading(text = 'Loading...') {\n        const overlay = document.getElementById('loadingOverlay');\n        overlay.querySelector('.loading-text').textContent = text;\n        overlay.classList.remove('hidden');\n    }\n\n    hideLoading() {\n        document.getElementById('loadingOverlay').classList.add('hidden');\n    }\n\n    showNotification(message, type = 'info') {\n        // Create notification element\n        const notification = document.createElement('div');\n        notification.className = `notification notification-${type}`;\n        notification.textContent = message;\n        \n        // Add to DOM\n        document.body.appendChild(notification);\n        \n        // Show with animation\n        setTimeout(() => notification.classList.add('show'), 100);\n        \n        // Auto remove after 3 seconds\n        setTimeout(() => {\n            notification.classList.remove('show');\n            setTimeout(() => notification.remove(), 300);\n        }, 3000);\n    }\n\n    startAutoRefresh() {\n        // Refresh balance and data every 30 seconds\n        setInterval(() => {\n            if (this.isConnected) {\n                this.refreshBalance();\n                this.loadRecentActivity();\n            }\n        }, 30000);\n    }\n\n    // Settings Functions\n    async exportWallet() {\n        if (confirm('⚠️ Are you sure you want to export your private key? Keep it secure!')) {\n            try {\n                const response = await chrome.runtime.sendMessage({\n                    type: 'EXPORT_WALLET'\n                });\n                \n                if (response.success) {\n                    // Create download link\n                    const blob = new Blob([response.privateKey], { type: 'text/plain' });\n                    const url = URL.createObjectURL(blob);\n                    const a = document.createElement('a');\n                    a.href = url;\n                    a.download = 'gada-wallet-private-key.txt';\n                    a.click();\n                    URL.revokeObjectURL(url);\n                    \n                    this.showNotification('Private key exported successfully!', 'success');\n                }\n            } catch (error) {\n                console.error('Export error:', error);\n                this.showNotification('Failed to export private key', 'error');\n            }\n        }\n    }\n\n    async resetWallet() {\n        if (confirm('⚠️ Are you sure you want to reset your wallet? This action cannot be undone!')) {\n            if (confirm('🚨 Final confirmation: All wallet data will be deleted!')) {\n                try {\n                    const response = await chrome.runtime.sendMessage({\n                        type: 'RESET_WALLET'\n                    });\n                    \n                    if (response.success) {\n                        this.showNotification('Wallet reset successfully!', 'success');\n                        window.location.reload();\n                    }\n                } catch (error) {\n                    console.error('Reset error:', error);\n                    this.showNotification('Failed to reset wallet', 'error');\n                }\n            }\n        }\n    }\n\n    // Public methods for global access\n    async updateActivity(inheritanceAddress) {\n        try {\n            this.showLoading('Updating activity...');\n            \n            const response = await chrome.runtime.sendMessage({\n                type: 'UPDATE_ACTIVITY',\n                inheritanceAddress: inheritanceAddress\n            });\n            \n            if (response.success) {\n                this.showNotification('Activity updated successfully!', 'success');\n                await this.loadInheritanceTab();\n            } else {\n                throw new Error(response.error || 'Failed to update activity');\n            }\n        } catch (error) {\n            console.error('Update activity error:', error);\n            this.showNotification('Failed to update activity: ' + error.message, 'error');\n        } finally {\n            this.hideLoading();\n        }\n    }\n\n    async cancelInheritance(inheritanceAddress) {\n        if (confirm('Are you sure you want to cancel this inheritance?')) {\n            try {\n                this.showLoading('Cancelling inheritance...');\n                \n                const response = await chrome.runtime.sendMessage({\n                    type: 'CANCEL_INHERITANCE',\n                    inheritanceAddress: inheritanceAddress\n                });\n                \n                if (response.success) {\n                    this.showNotification('Inheritance cancelled successfully!', 'success');\n                    await this.loadInheritanceTab();\n                } else {\n                    throw new Error(response.error || 'Failed to cancel inheritance');\n                }\n            } catch (error) {\n                console.error('Cancel inheritance error:', error);\n                this.showNotification('Failed to cancel inheritance: ' + error.message, 'error');\n            } finally {\n                this.hideLoading();\n            }\n        }\n    }\n\n    openTransactionDetails(tx) {\n        // Create transaction details modal\n        const modal = document.createElement('div');\n        modal.className = 'modal';\n        modal.innerHTML = `\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h3>Transaction Details</h3>\n                    <button class=\"modal-close\">&times;</button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"tx-details-grid\">\n                        <div class=\"detail-row\">\n                            <span class=\"detail-label\">Signature:</span>\n                            <span class=\"detail-value\">${this.shortenAddress(tx.signature)}</span>\n                        </div>\n                        <div class=\"detail-row\">\n                            <span class=\"detail-label\">Type:</span>\n                            <span class=\"detail-value\">${tx.type}</span>\n                        </div>\n                        <div class=\"detail-row\">\n                            <span class=\"detail-label\">Amount:</span>\n                            <span class=\"detail-value\">${(Math.abs(tx.amount) / 1000000000).toFixed(9)} SOL</span>\n                        </div>\n                        <div class=\"detail-row\">\n                            <span class=\"detail-label\">Status:</span>\n                            <span class=\"detail-value\">${tx.status}</span>\n                        </div>\n                        <div class=\"detail-row\">\n                            <span class=\"detail-label\">Timestamp:</span>\n                            <span class=\"detail-value\">${new Date(tx.timestamp * 1000).toLocaleString()}</span>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button class=\"btn btn-secondary\" onclick=\"window.open('https://solscan.io/tx/${tx.signature}?cluster=${this.network}')\">\n                        View on Solscan\n                    </button>\n                    <button class=\"btn btn-primary\" onclick=\"this.closest('.modal').remove()\">Close</button>\n                </div>\n            </div>\n        `;\n        \n        document.body.appendChild(modal);\n        \n        // Add close events\n        modal.querySelector('.modal-close').onclick = () => modal.remove();\n        modal.onclick = (e) => {\n            if (e.target === modal) modal.remove();\n        };\n    }\n}\n\n// Initialize the popup when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n    window.gadoWallet = new gadoWalletPopup();\n});\n\n// Export for global access\nwindow.gadoWalletPopup = gadoWalletPopup;"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","_typeof","toPrimitive","String","_toPrimitive","gadoWalletPopup","_classCallCheck","this","wallet","network","isConnected","currentTab","init","_init","_callee","_context","loadSettings","setupEventListeners","setupTabNavigation","checkWalletConnection","startAutoRefresh","_loadSettings","_callee2","settings","_context2","chrome","storage","local","get","document","getElementById","autoLockTimer","checked","keeperNotifications","confirmationCount","_this","addEventListener","connectWallet","switchNetwork","target","openSendModal","openReceiveModal","openInheritanceSetup","viewKeeperStatus","refreshBalance","copyAddress","setupModalControls","setupSettingsControls","_this2","closeSendModal","processSendTransaction","closeReceiveModal","copyReceiveAddress","querySelectorAll","forEach","modal","closeAllModals","btn","_this3","set","exportWallet","resetWallet","_this4","navButtons","tabPanes","tabName","dataset","tab","b","classList","remove","add","pane","loadTabContent","_loadTabContent","_callee3","_t","_context3","loadDashboard","loadInheritanceTab","loadTransactions","_x","_connectWallet","_callee4","response","_t2","_context4","showLoading","runtime","sendMessage","type","success","updateWalletUI","showNotification","Error","error","console","message","hideLoading","_switchNetwork","_callee5","_t3","_context5","concat","_x2","_checkWalletConnection","_callee6","_t4","_context6","showDisconnectedState","_updateWalletUI","_callee7","shortAddress","_context7","shortenAddress","publicKey","textContent","_refreshBalance","_callee8","balance","_t5","_context8","toFixed","_loadDashboard","_callee9","inheritanceResponse","stats","_t6","_context9","protectedSOL","totalHeirs","loadRecentActivity","_loadInheritanceTab","_callee0","inheritances","_t7","_context0","sol","tokens","renderInheritanceList","_this5","container","innerHTML","inheritance","appendChild","createInheritanceCard","card","createElement","className","statusClass","isClaimed","amount","heir","Math","floor","inactivityPeriodSeconds","Date","lastActivity","toLocaleDateString","address","_loadTransactions","_callee1","_t8","_context1","limit","renderTransactionList","transactions","_this6","tx","createTransactionItem","_this7","item","typeIcon","getTransactionIcon","abs","getTransactionTitle","timestamp","toLocaleString","status","openTransactionDetails","_loadRecentActivity","_callee10","_t9","_context10","activities","renderRecentActivity","_this8","activity","createActivityItem","title","subtitle","clearSendForm","generateQRCode","_processSendTransaction","_callee11","memo","_t0","_context11","trim","parseFloat","to","_openInheritanceSetup","_callee12","_context12","querySelector","click","tabs","url","getURL","_viewKeeperStatus","_callee13","_t1","_context13","showKeeperStatusModal","isRunning","totalSolHeirs","eligibleSolHeirs","totalTokenHeirs","eligibleTokenHeirs","totalSolValue","checkInterval","body","onclick","navigator","clipboard","writeText","slice","text","undefined","overlay","notification","setTimeout","_this9","setInterval","_exportWallet","_callee14","blob","_t10","_context14","confirm","Blob","privateKey","URL","createObjectURL","href","download","revokeObjectURL","_resetWallet","_callee15","_t11","_context15","window","location","reload","_updateActivity","_callee16","inheritanceAddress","_t12","_context16","_x3","_cancelInheritance","_callee17","_t13","_context17","_x4","signature","gadoWallet"],"sourceRoot":""}